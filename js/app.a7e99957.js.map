{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/tx.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/module/types/property/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/abci/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/params.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/evidence.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/vesting.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/channel.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/staking.js","webpack:///./src/App.vue","webpack:///./src/components/Sidebar.vue","webpack:///./src/components/Sidebar.vue?d966","webpack:///./src/App.vue?889f","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/types/cosmos/crisis/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.crisis.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/bank.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/module/types/cosmos/bank/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.bank.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/index.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/module/rest.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/module/index.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/rest.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/index.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/index.js","webpack:///./src/store/generated/index.js","webpack:///./src/store/config.js","webpack:///./src/store/index.js","webpack:///./src/views/Index.vue","webpack:///./src/views/Index.vue?fadd","webpack:///./src/views/Types.vue","webpack:///./src/views/Types.vue?0fc0","webpack:///./src/router/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?d490","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/connection.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/proof.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/distribution.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/cosmos/slashing/v1beta1/slashing.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.evidence.v1beta1/module/types/cosmos/evidence/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/distribution/v1beta1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/vesting/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/ibc/core/channel/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.distribution.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.slashing.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.channel.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/auth/v1beta1/auth.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/gov.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/transfer.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/genesis.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/connection/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/version/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/cosmos/staking/v1beta1/genesis.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/module/types/property/property.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/ibc/core/commitment/v1/commitment.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/confio/proofs.js","webpack:///./src/store/generated/rafaelsousa/realestate/rafaelsousa.realestate.property/module/types/property/owner.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/cosmos/base/abci/v1beta1/abci.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/validator.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/tendermint/types/types.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.client.v1/module/types/ibc/core/client/v1/client.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/ibc/applications/transfer/v1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.base.abci.v1beta1/module/types/tendermint/crypto/keys.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/google/protobuf/duration.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.applications.transfer.v1/module/types/google/protobuf/any.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.vesting.v1beta1/module/types/cosmos/base/v1beta1/coin.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.staking.v1beta1/module/types/google/protobuf/timestamp.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/cosmos.gov.v1beta1/module/types/cosmos/gov/v1beta1/tx.js","webpack:///./src/store/generated/cosmos/cosmos-sdk/ibc.core.connection.v1/module/types/google/protobuf/any.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","baseTimestamp","seconds","nanos","Timestamp","encode","message","writer","Writer","uint32","int64","int32","decode","input","reader","Uint8Array","Reader","end","undefined","len","pos","tag","longToNumber","skipType","fromJSON","Number","toJSON","obj","fromPartial","globalThis","self","global","long","gt","MAX_SAFE_INTEGER","Error","toNumber","util","Long","configure","baseValidatorSet","totalVotingPower","ValidatorSet","validators","v","Validator","fork","ldelim","proposer","e","map","baseValidator","votingPower","proposerPriority","address","bytes","pubKey","PublicKey","bytesFromBase64","base64FromBytes","atob","b64","Buffer","from","toString","bin","arr","charCodeAt","btoa","byteLength","String","fromCharCode","join","baseMsgCreateClient","signer","MsgCreateClient","clientState","Any","consensusState","string","baseMsgUpdateClient","clientId","MsgUpdateClient","header","baseMsgUpgradeClient","MsgUpgradeClient","proofUpgradeClient","proofUpgradeConsensusState","baseMsgSubmitMisbehaviour","MsgSubmitMisbehaviour","misbehaviour","baseMsgCreateOwner","creator","MsgCreateOwner","baseMsgUpdateOwner","id","MsgUpdateOwner","uint64","baseMsgDeleteOwner","MsgDeleteOwner","baseMsgCreateProperty","city","state","zip","country","latitude","longitude","ownerAddr","MsgCreateProperty","baseMsgUpdateProperty","MsgUpdateProperty","baseMsgDeleteProperty","MsgDeleteProperty","CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","baseEvent","type","Event","attributes","EventAttribute","baseEventAttribute","index","bool","Boolean","baseHeight","revisionNumber","revisionHeight","Height","baseEvidenceParams","maxAgeNumBlocks","maxBytes","EvidenceParams","maxAgeDuration","Duration","baseValidatorParams","pubKeyTypes","ValidatorParams","baseVersionParams","appVersion","VersionParams","baseAny","typeUrl","BlockIDFlag","SignedMsgType","basePartSetHeader","total","PartSetHeader","hash","baseBlockID","BlockID","partSetHeader","baseHeader","chainId","height","Header","version","Consensus","time","toTimestamp","lastBlockId","lastCommitHash","dataHash","validatorsHash","nextValidatorsHash","consensusHash","appHash","lastResultsHash","evidenceHash","proposerAddress","fromTimestamp","fromJsonTimestamp","toISOString","date","getTime","millis","Date","baseEquivocation","power","consensusAddress","Equivocation","baseDuration","baseBaseVestingAccount","endTime","BaseVestingAccount","baseAccount","BaseAccount","originalVesting","Coin","delegatedFree","delegatedVesting","baseContinuousVestingAccount","startTime","ContinuousVestingAccount","baseVestingAccount","baseDelayedVestingAccount","DelayedVestingAccount","basePeriod","Period","amount","basePeriodicVestingAccount","PeriodicVestingAccount","vestingPeriods","State","Order","stateFromJSON","STATE_UNINITIALIZED_UNSPECIFIED","STATE_INIT","STATE_TRYOPEN","STATE_OPEN","STATE_CLOSED","UNRECOGNIZED","stateToJSON","orderFromJSON","ORDER_NONE_UNSPECIFIED","ORDER_UNORDERED","ORDER_ORDERED","orderToJSON","baseChannel","ordering","connectionHops","Channel","counterparty","Counterparty","baseIdentifiedChannel","portId","channelId","IdentifiedChannel","baseCounterparty","basePacket","sequence","sourcePort","sourceChannel","destinationPort","destinationChannel","timeoutTimestamp","Packet","timeoutHeight","basePacketState","PacketState","baseAcknowledgement","Acknowledgement","error","BondStatus","bondStatusFromJSON","BOND_STATUS_UNSPECIFIED","BOND_STATUS_UNBONDED","BOND_STATUS_UNBONDING","BOND_STATUS_BONDED","bondStatusToJSON","baseHistoricalInfo","HistoricalInfo","valset","baseCommissionRates","rate","maxRate","maxChangeRate","CommissionRates","baseCommission","Commission","commissionRates","updateTime","baseDescription","moniker","identity","website","securityContact","details","Description","operatorAddress","jailed","status","tokens","delegatorShares","unbondingHeight","minSelfDelegation","consensusPubkey","description","unbondingTime","commission","baseValAddresses","addresses","ValAddresses","baseDVPair","delegatorAddress","validatorAddress","DVPair","baseDVPairs","DVPairs","pairs","baseDVVTriplet","validatorSrcAddress","validatorDstAddress","DVVTriplet","baseDVVTriplets","DVVTriplets","triplets","baseDelegation","shares","Delegation","baseUnbondingDelegation","UnbondingDelegation","entries","UnbondingDelegationEntry","baseUnbondingDelegationEntry","creationHeight","initialBalance","balance","completionTime","baseRedelegationEntry","sharesDst","RedelegationEntry","baseRedelegation","Redelegation","baseParams","maxValidators","maxEntries","historicalEntries","bondDenom","Params","baseDelegationResponse","DelegationResponse","delegation","baseRedelegationEntryResponse","RedelegationEntryResponse","redelegationEntry","baseRedelegationResponse","RedelegationResponse","redelegation","basePool","notBondedTokens","bondedTokens","Pool","initialized","ref","$refs","menu","closeDropdown","sidebar","content","class","sidebarOpen","default","link","text","icon","href","target","footer","showText","computed","hasWallet","this","$store","hasModule","render","components","Sidebar","created","dispatch","errorCaptured","err","console","log","ContentType","types","MsgCreateVestingAccount","registry","Registry","defaultFee","gas","txClient","wallet","addr","SigningStargateClient","connectWithSigner","client","getAccounts","signAndBroadcast","msgs","fee","memo","msgCreateVestingAccount","initTxClient","vuexGetters","getStructure","template","structure","fields","field","getDefaultState","_Structure","_Subscriptions","Set","namespaced","mutations","RESET_STATE","assign","QUERY","query","JSON","stringify","SUBSCRIBE","subscription","add","UNSUBSCRIBE","delete","getters","getTypeStructure","actions","init","rootGetters","on","resetState","commit","unsubscribe","StoreUpdate","forEach","action","payload","sendMsgCreateVestingAccount","msg","SpVuexError","baseMsgVerifyInvariant","sender","invariantModuleName","invariantRoute","MsgVerifyInvariant","msgVerifyInvariant","sendMsgVerifyInvariant","HttpClient","apiConfig","baseUrl","securityData","securityWorker","abortControllers","Map","baseApiParams","credentials","headers","redirect","referrerPolicy","setSecurityData","contentFormatters","Json","FormData","keys","reduce","append","UrlEncoded","toQueryString","createAbortSignal","cancelToken","has","abortController","signal","AbortController","set","abortRequest","abort","request","body","secure","path","format","params","secureParams","requestParams","mergeRequestParams","queryString","payloadFormatter","fetch","then","response","ok","catch","encodeURIComponent","Array","isArray","rawQuery","filter","addQueryParam","params1","params2","Api","arguments","queryAllEvidence","method","queryEvidence","MsgSubmitEvidence","msgSubmitEvidence","queryClient","initQueryClient","V1Beta1ProposalStatus","V1Beta1VoteOption","Evidence","AllEvidence","getEvidence","getAllEvidence","QueryEvidence","options","subscribe","all","evidence_hash","QueryAllEvidence","pagination","nextKey","next_values","prop","sendMsgSubmitEvidence","queryParams","paramsType","queryProposals","queryProposal","proposalId","queryDeposits","queryDeposit","depositor","queryTallyResult","queryVotes","queryVote","voter","MsgSubmitProposal","MsgDeposit","MsgVote","msgSubmitProposal","msgDeposit","msgVote","Proposal","Proposals","Vote","Votes","Deposit","Deposits","TallyResult","TextProposal","DepositParams","VotingParams","TallyParams","getProposal","getProposals","getVote","getVotes","getParams","getDeposit","getDeposits","getTallyResult","QueryProposal","proposal_id","QueryProposals","QueryVote","QueryVotes","QueryParams","params_type","QueryDeposit","QueryDeposits","QueryTallyResult","sendMsgSubmitProposal","sendMsgDeposit","sendMsgVote","baseCoin","denom","baseDecCoin","DecCoin","baseIntProto","int","IntProto","baseDecProto","dec","DecProto","V1Beta1BondStatus","queryDelegatorDelegations","delegatorAddr","queryRedelegations","queryDelegatorUnbondingDelegations","queryDelegatorValidators","queryDelegatorValidator","validatorAddr","queryHistoricalInfo","queryPool","queryValidators","queryValidator","queryValidatorDelegations","queryDelegation","queryUnbondingDelegation","queryValidatorUnbondingDelegations","baseMsgCreateValidator","MsgCreateValidator","pubkey","baseMsgEditValidator","commissionRate","MsgEditValidator","baseMsgDelegate","MsgDelegate","baseMsgBeginRedelegate","MsgBeginRedelegate","baseMsgUndelegate","MsgUndelegate","msgDelegate","msgEditValidator","msgCreateValidator","msgUndelegate","msgBeginRedelegate","Validators","ValidatorDelegations","ValidatorUnbondingDelegations","DelegatorDelegations","DelegatorUnbondingDelegations","Redelegations","DelegatorValidators","DelegatorValidator","LastValidatorPower","getValidators","getValidator","getValidatorDelegations","getValidatorUnbondingDelegations","getDelegation","getUnbondingDelegation","getDelegatorDelegations","getDelegatorUnbondingDelegations","getRedelegations","getDelegatorValidators","getDelegatorValidator","getHistoricalInfo","getPool","QueryValidators","QueryValidator","validator_addr","QueryValidatorDelegations","QueryValidatorUnbondingDelegations","QueryDelegation","delegator_addr","QueryUnbondingDelegation","QueryDelegatorDelegations","QueryDelegatorUnbondingDelegations","QueryRedelegations","QueryDelegatorValidators","QueryDelegatorValidator","QueryHistoricalInfo","QueryPool","sendMsgDelegate","sendMsgEditValidator","sendMsgCreateValidator","sendMsgUndelegate","sendMsgBeginRedelegate","queryCommunityPool","queryDelegationTotalRewards","queryDelegationRewards","queryDelegatorWithdrawAddress","queryValidatorCommission","queryValidatorOutstandingRewards","queryValidatorSlashes","baseMsgSetWithdrawAddress","withdrawAddress","MsgSetWithdrawAddress","baseMsgWithdrawDelegatorReward","MsgWithdrawDelegatorReward","baseMsgWithdrawValidatorCommission","MsgWithdrawValidatorCommission","baseMsgFundCommunityPool","MsgFundCommunityPool","msgFundCommunityPool","msgWithdrawValidatorCommission","msgWithdrawDelegatorReward","msgSetWithdrawAddress","ValidatorOutstandingRewards","ValidatorCommission","ValidatorSlashes","DelegationRewards","DelegationTotalRewards","DelegatorWithdrawAddress","CommunityPool","ValidatorHistoricalRewards","ValidatorCurrentRewards","ValidatorAccumulatedCommission","ValidatorSlashEvent","ValidatorSlashEvents","FeePool","CommunityPoolSpendProposal","DelegatorStartingInfo","DelegationDelegatorReward","CommunityPoolSpendProposalWithDeposit","DelegatorWithdrawInfo","ValidatorOutstandingRewardsRecord","ValidatorAccumulatedCommissionRecord","ValidatorHistoricalRewardsRecord","ValidatorCurrentRewardsRecord","DelegatorStartingInfoRecord","ValidatorSlashEventRecord","getValidatorOutstandingRewards","getValidatorCommission","getValidatorSlashes","getDelegationRewards","getDelegationTotalRewards","getDelegatorWithdrawAddress","getCommunityPool","QueryValidatorOutstandingRewards","validator_address","QueryValidatorCommission","QueryValidatorSlashes","QueryDelegationRewards","delegator_address","QueryDelegationTotalRewards","QueryDelegatorWithdrawAddress","QueryCommunityPool","sendMsgFundCommunityPool","sendMsgWithdrawValidatorCommission","sendMsgWithdrawDelegatorReward","sendMsgSetWithdrawAddress","queryAllBalances","queryBalance","queryDenomsMetadata","queryDenomMetadata","queryTotalSupply","querySupplyOf","defaultSendEnabled","sendEnabled","SendEnabled","baseSendEnabled","enabled","baseInput","Input","coins","baseOutput","Output","baseSupply","Supply","baseDenomUnit","exponent","aliases","DenomUnit","baseMetadata","base","display","Metadata","denomUnits","baseMsgSend","fromAddress","toAddress","MsgSend","baseMsgMultiSend","MsgMultiSend","inputs","outputs","msgMultiSend","msgSend","baseBalance","Balance","V1State","AllBalances","TotalSupply","SupplyOf","DenomMetadata","DenomsMetadata","getBalance","getAllBalances","getTotalSupply","getSupplyOf","getDenomMetadata","getDenomsMetadata","QueryBalance","QueryAllBalances","QueryTotalSupply","QuerySupplyOf","QueryDenomMetadata","QueryDenomsMetadata","sendMsgMultiSend","sendMsgSend","queryClientConnections","queryConnections","queryConnection","connectionId","queryConnectionClientState","queryConnectionConsensusState","MsgConnectionOpenAck","MsgConnectionOpenConfirm","MsgConnectionOpenInit","MsgConnectionOpenTry","msgConnectionOpenAck","msgConnectionOpenConfirm","msgConnectionOpenInit","msgConnectionOpenTry","Connection","Connections","ClientConnections","ConnectionClientState","ConnectionConsensusState","ConnectionEnd","IdentifiedConnection","ClientPaths","ConnectionPaths","Version","getConnection","getConnections","getClientConnections","getConnectionClientState","getConnectionConsensusState","QueryConnection","connection_id","QueryConnections","QueryClientConnections","client_id","QueryConnectionClientState","QueryConnectionConsensusState","revision_number","revision_height","sendMsgConnectionOpenAck","sendMsgConnectionOpenConfirm","sendMsgConnectionOpenInit","sendMsgConnectionOpenTry","V1Order","TxResponse","ABCIMessageLog","StringEvent","Attribute","GasInfo","Result","SimulationResponse","MsgData","TxMsgData","SearchTxsResult","queryChannels","queryChannel","queryChannelClientState","queryChannelConsensusState","queryNextSequenceReceive","queryPacketAcknowledgements","queryPacketAcknowledgement","queryPacketCommitments","queryUnreceivedAcks","packetAckSequences","queryUnreceivedPackets","packetCommitmentSequences","queryPacketCommitment","queryPacketReceipt","queryConnectionChannels","connection","MsgChannelOpenInit","MsgTimeout","MsgChannelOpenAck","MsgChannelCloseInit","MsgChannelCloseConfirm","MsgChannelOpenConfirm","MsgChannelOpenTry","MsgRecvPacket","MsgTimeoutOnClose","MsgAcknowledgement","msgChannelOpenInit","msgTimeout","msgChannelOpenAck","msgChannelCloseInit","msgChannelCloseConfirm","msgChannelOpenConfirm","msgChannelOpenTry","msgRecvPacket","msgTimeoutOnClose","msgAcknowledgement","Channels","ConnectionChannels","ChannelClientState","ChannelConsensusState","PacketCommitment","PacketCommitments","PacketReceipt","PacketAcknowledgement","PacketAcknowledgements","UnreceivedPackets","UnreceivedAcks","NextSequenceReceive","PacketSequence","getChannel","getChannels","getConnectionChannels","getChannelClientState","getChannelConsensusState","getPacketCommitment","getPacketCommitments","getPacketReceipt","getPacketAcknowledgement","getPacketAcknowledgements","getUnreceivedPackets","getUnreceivedAcks","getNextSequenceReceive","QueryChannel","channel_id","port_id","QueryChannels","QueryConnectionChannels","QueryChannelClientState","QueryChannelConsensusState","QueryPacketCommitment","QueryPacketCommitments","QueryPacketReceipt","QueryPacketAcknowledgement","QueryPacketAcknowledgements","QueryUnreceivedPackets","packet_commitment_sequences","QueryUnreceivedAcks","packet_ack_sequences","QueryNextSequenceReceive","sendMsgChannelOpenInit","sendMsgTimeout","sendMsgChannelOpenAck","sendMsgChannelCloseInit","sendMsgChannelCloseConfirm","sendMsgChannelOpenConfirm","sendMsgChannelOpenTry","sendMsgRecvPacket","sendMsgTimeoutOnClose","sendMsgAcknowledgement","queryClientParams","queryClientStates","queryClientState","queryConsensusStates","queryConsensusState","msgUpgradeClient","msgUpdateClient","msgCreateClient","msgSubmitMisbehaviour","ClientState","ClientStates","ConsensusState","ConsensusStates","ClientParams","IdentifiedClientState","ConsensusStateWithHeight","ClientConsensusStates","ClientUpdateProposal","GenesisMetadata","IdentifiedGenesisMetadata","getClientState","getClientStates","getConsensusState","getConsensusStates","getClientParams","QueryClientState","QueryClientStates","QueryConsensusState","QueryConsensusStates","QueryClientParams","sendMsgUpgradeClient","sendMsgUpdateClient","sendMsgCreateClient","sendMsgSubmitMisbehaviour","queryAllProperties","queryOwnerAll","queryOwner","queryPropertyAll","queryProperty","msgDeleteOwner","msgCreateProperty","msgCreateOwner","msgUpdateOwner","msgUpdateProperty","msgDeleteProperty","Owner","OwnerAll","Property","PropertyAll","AllProperties","PropertyCollection","getOwner","getOwnerAll","getProperty","getPropertyAll","getAllProperties","QueryOwner","QueryOwnerAll","QueryProperty","QueryPropertyAll","QueryAllProperties","owner_addr","sendMsgDeleteOwner","sendMsgCreateProperty","sendMsgCreateOwner","sendMsgUpdateOwner","sendMsgUpdateProperty","sendMsgDeleteProperty","querySigningInfos","querySigningInfo","consAddress","baseMsgUnjail","MsgUnjail","msgUnjail","SigningInfo","SigningInfos","ValidatorSigningInfo","ValidatorMissedBlocks","MissedBlock","getSigningInfo","getSigningInfos","QuerySigningInfo","cons_address","QuerySigningInfos","sendMsgUnjail","queryDenomTraces","queryDenomTrace","MsgTransfer","msgTransfer","DenomTrace","DenomTraces","FungibleTokenPacketData","getDenomTrace","getDenomTraces","QueryDenomTrace","QueryDenomTraces","sendMsgTransfer","CosmosCosmosSdkCosmosVestingV1Beta1","load","CosmosCosmosSdkCosmosCrisisV1Beta1","CosmosCosmosSdkCosmosEvidenceV1Beta1","CosmosCosmosSdkCosmosGovV1Beta1","CosmosCosmosSdkCosmosBaseV1Beta1","CosmosCosmosSdkCosmosStakingV1Beta1","CosmosCosmosSdkCosmosDistributionV1Beta1","CosmosCosmosSdkCosmosBankV1Beta1","CosmosCosmosSdkIbcCoreConnectionV1","CosmosCosmosSdkCosmosBaseAbciV1Beta1","CosmosCosmosSdkIbcCoreChannelV1","CosmosCosmosSdkIbcCoreClientV1","RafaelsousaRealestateRafaelsousaRealestateProperty","CosmosCosmosSdkCosmosSlashingV1Beta1","CosmosCosmosSdkIbcApplicationsTransferV1","mod","fullns","store","fullnsLevels","split","registerModule","pop","mutation","root","values","generated","moduleInit","transfers","starport","blocks","env","createStore","modulePath","moduleType","routerHistory","createWebHistory","routes","component","Index","Types","router","createRouter","history","app","createApp","App","config","globalProperties","_depsLoaded","use","vueLib","mount","basePacketSequence","baseProof","Proof","leafHash","aunts","baseSigningInfo","validatorSigningInfo","baseValidatorMissedBlocks","missedBlocks","baseMissedBlock","missed","baseConnectionEnd","delayPeriod","versions","baseIdentifiedConnection","prefix","MerklePrefix","baseClientPaths","paths","baseConnectionPaths","baseVersion","identifier","features","baseProofOp","ProofOp","baseProofOps","ProofOps","ops","baseConsensus","block","communityTax","baseProposerReward","bonusProposerReward","withdrawAddrEnabled","baseValidatorHistoricalRewards","referenceCount","cumulativeRewardRatio","baseValidatorCurrentRewards","period","rewards","baseValidatorAccumulatedCommission","baseValidatorOutstandingRewards","baseValidatorSlashEvent","validatorPeriod","fraction","baseValidatorSlashEvents","validatorSlashEvents","baseFeePool","communityPool","baseCommunityPoolSpendProposal","title","recipient","baseDelegatorStartingInfo","previousPeriod","stake","baseDelegationDelegatorReward","reward","baseCommunityPoolSpendProposalWithDeposit","deposit","baseValidatorSigningInfo","startHeight","indexOffset","tombstoned","missedBlocksCounter","jailedUntil","signedBlocksWindow","minSignedPerWindow","downtimeJailDuration","slashFractionDoubleSign","slashFractionDowntime","baseMsgSubmitEvidence","submitter","evidence","baseDelegatorWithdrawInfo","baseValidatorOutstandingRewardsRecord","outstandingRewards","baseValidatorAccumulatedCommissionRecord","accumulated","baseValidatorHistoricalRewardsRecord","baseValidatorCurrentRewardsRecord","baseDelegatorStartingInfoRecord","startingInfo","baseValidatorSlashEventRecord","validatorSlashEvent","baseMsgCreateVestingAccount","delayed","baseMsgChannelOpenInit","channel","baseMsgChannelOpenTry","previousChannelId","counterpartyVersion","proofInit","proofHeight","baseMsgChannelOpenAck","counterpartyChannelId","proofTry","baseMsgChannelOpenConfirm","proofAck","baseMsgChannelCloseInit","baseMsgChannelCloseConfirm","baseMsgRecvPacket","packet","proofCommitment","baseMsgTimeout","nextSequenceRecv","proofUnreceived","baseMsgTimeoutOnClose","proofClose","baseMsgAcknowledgement","acknowledgement","proofAcked","baseBaseAccount","accountNumber","VoteOption","ProposalStatus","voteOptionFromJSON","VOTE_OPTION_UNSPECIFIED","VOTE_OPTION_YES","VOTE_OPTION_ABSTAIN","VOTE_OPTION_NO","VOTE_OPTION_NO_WITH_VETO","voteOptionToJSON","proposalStatusFromJSON","PROPOSAL_STATUS_UNSPECIFIED","PROPOSAL_STATUS_DEPOSIT_PERIOD","PROPOSAL_STATUS_VOTING_PERIOD","PROPOSAL_STATUS_PASSED","PROPOSAL_STATUS_REJECTED","PROPOSAL_STATUS_FAILED","proposalStatusToJSON","baseTextProposal","baseDeposit","baseProposal","finalTallyResult","submitTime","depositEndTime","totalDeposit","votingStartTime","votingEndTime","baseTallyResult","yes","abstain","no","noWithVeto","baseVote","option","baseDepositParams","minDeposit","maxDepositPeriod","baseVotingParams","votingPeriod","baseTallyParams","quorum","threshold","vetoThreshold","baseFungibleTokenPacketData","receiver","baseDenomTrace","baseDenom","receiveEnabled","baseGenesisMetadata","baseIdentifiedGenesisMetadata","clientMetadata","baseMsgConnectionOpenInit","baseMsgConnectionOpenTry","previousConnectionId","counterpartyVersions","proofClient","proofConsensus","consensusHeight","baseMsgConnectionOpenAck","counterpartyConnectionId","baseMsgConnectionOpenConfirm","baseLastValidatorPower","baseProperty","owneraddr","basePropertyCollection","properties","baseMerklePrefix","keyPrefix","HashOp","LengthOp","hashOpFromJSON","NO_HASH","SHA256","SHA512","KECCAK","RIPEMD160","BITCOIN","hashOpToJSON","lengthOpFromJSON","NO_PREFIX","VAR_PROTO","VAR_RLP","FIXED32_BIG","FIXED32_LITTLE","FIXED64_BIG","FIXED64_LITTLE","REQUIRE_32_BYTES","REQUIRE_64_BYTES","lengthOpToJSON","baseExistenceProof","ExistenceProof","leaf","LeafOp","InnerOp","baseNonExistenceProof","NonExistenceProof","left","right","baseCommitmentProof","CommitmentProof","exist","nonexist","batch","BatchProof","compressed","CompressedBatchProof","baseLeafOp","prehashKey","prehashValue","baseInnerOp","suffix","baseBatchProof","BatchEntry","baseBatchEntry","baseCompressedBatchProof","CompressedBatchEntry","lookupInners","baseCompressedBatchEntry","CompressedExistenceProof","CompressedNonExistenceProof","baseCompressedExistenceProof","end2","baseCompressedNonExistenceProof","baseOwner","basePublicKey","ed25519","secp256k1","baseTxResponse","txhash","codespace","code","rawLog","info","gasWanted","gasUsed","timestamp","logs","tx","baseABCIMessageLog","msgIndex","events","baseStringEvent","baseAttribute","baseGasInfo","baseResult","baseSimulationResponse","gasInfo","baseMsgData","msgType","baseTxMsgData","baseSearchTxsResult","totalCount","count","pageNumber","pageTotal","limit","txs","baseIdentifiedClientState","baseConsensusStateWithHeight","baseClientConsensusStates","consensusStates","baseClientUpdateProposal","allowedClients","baseMsgTransfer","token","baseMsgSubmitProposal","initialDeposit","baseMsgVote","baseMsgDeposit"],"mappings":"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","file":"js/app.a7e99957.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseMsgCreateClient = { signer: \"\" };\nexport const MsgCreateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateClient };\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateClientResponse = {};\nexport const MsgCreateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpdateClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpdateClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateClientResponse = {};\nexport const MsgUpdateClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdateClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgUpgradeClient = { clientId: \"\", signer: \"\" };\nexport const MsgUpgradeClient = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.proofUpgradeClient.length !== 0) {\n            writer.uint32(34).bytes(message.proofUpgradeClient);\n        }\n        if (message.proofUpgradeConsensusState.length !== 0) {\n            writer.uint32(42).bytes(message.proofUpgradeConsensusState);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpgradeClient };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.proofUpgradeClient = reader.bytes();\n                    break;\n                case 5:\n                    message.proofUpgradeConsensusState = reader.bytes();\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = bytesFromBase64(object.proofUpgradeClient);\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = bytesFromBase64(object.proofUpgradeConsensusState);\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        message.proofUpgradeClient !== undefined &&\n            (obj.proofUpgradeClient = base64FromBytes(message.proofUpgradeClient !== undefined\n                ? message.proofUpgradeClient\n                : new Uint8Array()));\n        message.proofUpgradeConsensusState !== undefined &&\n            (obj.proofUpgradeConsensusState = base64FromBytes(message.proofUpgradeConsensusState !== undefined\n                ? message.proofUpgradeConsensusState\n                : new Uint8Array()));\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpgradeClient };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        if (object.proofUpgradeClient !== undefined &&\n            object.proofUpgradeClient !== null) {\n            message.proofUpgradeClient = object.proofUpgradeClient;\n        }\n        else {\n            message.proofUpgradeClient = new Uint8Array();\n        }\n        if (object.proofUpgradeConsensusState !== undefined &&\n            object.proofUpgradeConsensusState !== null) {\n            message.proofUpgradeConsensusState = object.proofUpgradeConsensusState;\n        }\n        else {\n            message.proofUpgradeConsensusState = new Uint8Array();\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpgradeClientResponse = {};\nexport const MsgUpgradeClientResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpgradeClientResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviour = { clientId: \"\", signer: \"\" };\nexport const MsgSubmitMisbehaviour = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.misbehaviour !== undefined) {\n            Any.encode(message.misbehaviour, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitMisbehaviour };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.misbehaviour = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromJSON(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.misbehaviour !== undefined &&\n            (obj.misbehaviour = message.misbehaviour\n                ? Any.toJSON(message.misbehaviour)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitMisbehaviour };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.misbehaviour !== undefined && object.misbehaviour !== null) {\n            message.misbehaviour = Any.fromPartial(object.misbehaviour);\n        }\n        else {\n            message.misbehaviour = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitMisbehaviourResponse = {};\nexport const MsgSubmitMisbehaviourResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSubmitMisbehaviourResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateClient(request) {\n        const data = MsgCreateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"CreateClient\", data);\n        return promise.then((data) => MsgCreateClientResponse.decode(new Reader(data)));\n    }\n    UpdateClient(request) {\n        const data = MsgUpdateClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpdateClient\", data);\n        return promise.then((data) => MsgUpdateClientResponse.decode(new Reader(data)));\n    }\n    UpgradeClient(request) {\n        const data = MsgUpgradeClient.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"UpgradeClient\", data);\n        return promise.then((data) => MsgUpgradeClientResponse.decode(new Reader(data)));\n    }\n    SubmitMisbehaviour(request) {\n        const data = MsgSubmitMisbehaviour.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.client.v1.Msg\", \"SubmitMisbehaviour\", data);\n        return promise.then((data) => MsgSubmitMisbehaviourResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nexport const protobufPackage = \"rafaelsousa.realestate.property\";\nconst baseMsgCreateOwner = { creator: \"\", address: \"\" };\nexport const MsgCreateOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreateOwnerResponse = { id: 0 };\nexport const MsgCreateOwnerResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateOwnerResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateOwnerResponse };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateOwner = { creator: \"\", id: 0, address: \"\" };\nexport const MsgUpdateOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateOwnerResponse = {};\nexport const MsgUpdateOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUpdateOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUpdateOwnerResponse };\n        return message;\n    },\n};\nconst baseMsgDeleteOwner = { creator: \"\", id: 0 };\nexport const MsgDeleteOwner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteOwner };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteOwner };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeleteOwnerResponse = {};\nexport const MsgDeleteOwnerResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteOwnerResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDeleteOwnerResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDeleteOwnerResponse };\n        return message;\n    },\n};\nconst baseMsgCreateProperty = {\n    creator: \"\",\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    country: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    ownerAddr: \"\",\n};\nexport const MsgCreateProperty = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.city !== \"\") {\n            writer.uint32(26).string(message.city);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(34).string(message.state);\n        }\n        if (message.zip !== \"\") {\n            writer.uint32(42).string(message.zip);\n        }\n        if (message.country !== \"\") {\n            writer.uint32(50).string(message.country);\n        }\n        if (message.latitude !== \"\") {\n            writer.uint32(58).string(message.latitude);\n        }\n        if (message.longitude !== \"\") {\n            writer.uint32(66).string(message.longitude);\n        }\n        if (message.ownerAddr !== \"\") {\n            writer.uint32(74).string(message.ownerAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateProperty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.city = reader.string();\n                    break;\n                case 4:\n                    message.state = reader.string();\n                    break;\n                case 5:\n                    message.zip = reader.string();\n                    break;\n                case 6:\n                    message.country = reader.string();\n                    break;\n                case 7:\n                    message.latitude = reader.string();\n                    break;\n                case 8:\n                    message.longitude = reader.string();\n                    break;\n                case 9:\n                    message.ownerAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = String(object.city);\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = String(object.state);\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = String(object.zip);\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = String(object.country);\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = String(object.latitude);\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = String(object.longitude);\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.ownerAddr !== undefined && object.ownerAddr !== null) {\n            message.ownerAddr = String(object.ownerAddr);\n        }\n        else {\n            message.ownerAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.address !== undefined && (obj.address = message.address);\n        message.city !== undefined && (obj.city = message.city);\n        message.state !== undefined && (obj.state = message.state);\n        message.zip !== undefined && (obj.zip = message.zip);\n        message.country !== undefined && (obj.country = message.country);\n        message.latitude !== undefined && (obj.latitude = message.latitude);\n        message.longitude !== undefined && (obj.longitude = message.longitude);\n        message.ownerAddr !== undefined && (obj.ownerAddr = message.ownerAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = object.city;\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = object.zip;\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = object.country;\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = object.latitude;\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = object.longitude;\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.ownerAddr !== undefined && object.ownerAddr !== null) {\n            message.ownerAddr = object.ownerAddr;\n        }\n        else {\n            message.ownerAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgCreatePropertyResponse = { id: 0 };\nexport const MsgCreatePropertyResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== 0) {\n            writer.uint32(8).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreatePropertyResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreatePropertyResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreatePropertyResponse,\n        };\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgUpdateProperty = {\n    creator: \"\",\n    id: 0,\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    country: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    ownerAddr: \"\",\n};\nexport const MsgUpdateProperty = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        if (message.city !== \"\") {\n            writer.uint32(34).string(message.city);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(42).string(message.state);\n        }\n        if (message.zip !== \"\") {\n            writer.uint32(50).string(message.zip);\n        }\n        if (message.country !== \"\") {\n            writer.uint32(58).string(message.country);\n        }\n        if (message.latitude !== \"\") {\n            writer.uint32(66).string(message.latitude);\n        }\n        if (message.longitude !== \"\") {\n            writer.uint32(74).string(message.longitude);\n        }\n        if (message.ownerAddr !== \"\") {\n            writer.uint32(82).string(message.ownerAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUpdateProperty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                case 4:\n                    message.city = reader.string();\n                    break;\n                case 5:\n                    message.state = reader.string();\n                    break;\n                case 6:\n                    message.zip = reader.string();\n                    break;\n                case 7:\n                    message.country = reader.string();\n                    break;\n                case 8:\n                    message.latitude = reader.string();\n                    break;\n                case 9:\n                    message.longitude = reader.string();\n                    break;\n                case 10:\n                    message.ownerAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUpdateProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = String(object.city);\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = String(object.state);\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = String(object.zip);\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = String(object.country);\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = String(object.latitude);\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = String(object.longitude);\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.ownerAddr !== undefined && object.ownerAddr !== null) {\n            message.ownerAddr = String(object.ownerAddr);\n        }\n        else {\n            message.ownerAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        message.city !== undefined && (obj.city = message.city);\n        message.state !== undefined && (obj.state = message.state);\n        message.zip !== undefined && (obj.zip = message.zip);\n        message.country !== undefined && (obj.country = message.country);\n        message.latitude !== undefined && (obj.latitude = message.latitude);\n        message.longitude !== undefined && (obj.longitude = message.longitude);\n        message.ownerAddr !== undefined && (obj.ownerAddr = message.ownerAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUpdateProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = object.city;\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = object.zip;\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = object.country;\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = object.latitude;\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = object.longitude;\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.ownerAddr !== undefined && object.ownerAddr !== null) {\n            message.ownerAddr = object.ownerAddr;\n        }\n        else {\n            message.ownerAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUpdatePropertyResponse = {};\nexport const MsgUpdatePropertyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgUpdatePropertyResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgUpdatePropertyResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgUpdatePropertyResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDeleteProperty = { creator: \"\", id: 0 };\nexport const MsgDeleteProperty = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeleteProperty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeleteProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeleteProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgDeletePropertyResponse = {};\nexport const MsgDeletePropertyResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgDeletePropertyResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgDeletePropertyResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgDeletePropertyResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateOwner(request) {\n        const data = MsgCreateOwner.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"CreateOwner\", data);\n        return promise.then((data) => MsgCreateOwnerResponse.decode(new Reader(data)));\n    }\n    UpdateOwner(request) {\n        const data = MsgUpdateOwner.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"UpdateOwner\", data);\n        return promise.then((data) => MsgUpdateOwnerResponse.decode(new Reader(data)));\n    }\n    DeleteOwner(request) {\n        const data = MsgDeleteOwner.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"DeleteOwner\", data);\n        return promise.then((data) => MsgDeleteOwnerResponse.decode(new Reader(data)));\n    }\n    CreateProperty(request) {\n        const data = MsgCreateProperty.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"CreateProperty\", data);\n        return promise.then((data) => MsgCreatePropertyResponse.decode(new Reader(data)));\n    }\n    UpdateProperty(request) {\n        const data = MsgUpdateProperty.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"UpdateProperty\", data);\n        return promise.then((data) => MsgUpdatePropertyResponse.decode(new Reader(data)));\n    }\n    DeleteProperty(request) {\n        const data = MsgDeleteProperty.encode(request).finish();\n        const promise = this.rpc.request(\"rafaelsousa.realestate.property.Msg\", \"DeleteProperty\", data);\n        return promise.then((data) => MsgDeletePropertyResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { Header } from \"../../tendermint/types/types\";\nimport { ProofOps } from \"../../tendermint/crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams, } from \"../../tendermint/types/params\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.abci\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseRequest = {};\nexport const Request = {\n    encode(message, writer = Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequest };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? RequestEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? RequestFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? RequestInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? RequestSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? RequestInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? RequestQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? RequestBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? RequestCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? RequestDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? RequestEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? RequestCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? RequestListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? RequestOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequest };\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = RequestEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = RequestFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = RequestInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = RequestSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = RequestInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = RequestQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = RequestBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = RequestCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = RequestDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = RequestEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = RequestCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = RequestListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = RequestOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseRequestEcho = { message: \"\" };\nexport const RequestEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestFlush = {};\nexport const RequestFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestFlush };\n        return message;\n    },\n};\nconst baseRequestInfo = { version: \"\", blockVersion: 0, p2pVersion: 0 };\nexport const RequestInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== 0) {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== 0) {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = reader.string();\n                    break;\n                case 2:\n                    message.blockVersion = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.p2pVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = Number(object.blockVersion);\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = Number(object.p2pVersion);\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined && (obj.version = message.version);\n        message.blockVersion !== undefined &&\n            (obj.blockVersion = message.blockVersion);\n        message.p2pVersion !== undefined && (obj.p2pVersion = message.p2pVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInfo };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.blockVersion !== undefined && object.blockVersion !== null) {\n            message.blockVersion = object.blockVersion;\n        }\n        else {\n            message.blockVersion = 0;\n        }\n        if (object.p2pVersion !== undefined && object.p2pVersion !== null) {\n            message.p2pVersion = object.p2pVersion;\n        }\n        else {\n            message.p2pVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestSetOption = { key: \"\", value: \"\" };\nexport const RequestSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestSetOption };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseRequestInitChain = { chainId: \"\", initialHeight: 0 };\nexport const RequestInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== 0) {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.appStateBytes = reader.bytes();\n                    break;\n                case 6:\n                    message.initialHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = bytesFromBase64(object.appStateBytes);\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = Number(object.initialHeight);\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appStateBytes !== undefined &&\n            (obj.appStateBytes = base64FromBytes(message.appStateBytes !== undefined\n                ? message.appStateBytes\n                : new Uint8Array()));\n        message.initialHeight !== undefined &&\n            (obj.initialHeight = message.initialHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestInitChain };\n        message.validators = [];\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appStateBytes !== undefined && object.appStateBytes !== null) {\n            message.appStateBytes = object.appStateBytes;\n        }\n        else {\n            message.appStateBytes = new Uint8Array();\n        }\n        if (object.initialHeight !== undefined && object.initialHeight !== null) {\n            message.initialHeight = object.initialHeight;\n        }\n        else {\n            message.initialHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestQuery = { path: \"\", height: 0, prove: false };\nexport const RequestQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.path = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.prove = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = Boolean(object.prove);\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.path !== undefined && (obj.path = message.path);\n        message.height !== undefined && (obj.height = message.height);\n        message.prove !== undefined && (obj.prove = message.prove);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestQuery };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.prove !== undefined && object.prove !== null) {\n            message.prove = object.prove;\n        }\n        else {\n            message.prove = false;\n        }\n        return message;\n    },\n};\nconst baseRequestBeginBlock = {};\nexport const RequestBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromJSON(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.lastCommitInfo !== undefined &&\n            (obj.lastCommitInfo = message.lastCommitInfo\n                ? LastCommitInfo.toJSON(message.lastCommitInfo)\n                : undefined);\n        if (message.byzantineValidators) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => e ? Evidence.toJSON(e) : undefined);\n        }\n        else {\n            obj.byzantineValidators = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestBeginBlock };\n        message.byzantineValidators = [];\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null) {\n            message.lastCommitInfo = LastCommitInfo.fromPartial(object.lastCommitInfo);\n        }\n        else {\n            message.lastCommitInfo = undefined;\n        }\n        if (object.byzantineValidators !== undefined &&\n            object.byzantineValidators !== null) {\n            for (const e of object.byzantineValidators) {\n                message.byzantineValidators.push(Evidence.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseRequestCheckTx = { type: 0 };\nexport const RequestCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCheckTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                case 2:\n                    message.type = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = checkTxTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.type !== undefined && (obj.type = checkTxTypeToJSON(message.type));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestCheckTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestDeliverTx = {};\nexport const RequestDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestDeliverTx };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tx = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestDeliverTx };\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestEndBlock = { height: 0 };\nexport const RequestEndBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestEndBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestEndBlock };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestCommit = {};\nexport const RequestCommit = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestCommit };\n        return message;\n    },\n};\nconst baseRequestListSnapshots = {};\nexport const RequestListSnapshots = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestListSnapshots };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseRequestListSnapshots };\n        return message;\n    },\n};\nconst baseRequestOfferSnapshot = {};\nexport const RequestOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRequestOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromJSON(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.snapshot !== undefined &&\n            (obj.snapshot = message.snapshot\n                ? Snapshot.toJSON(message.snapshot)\n                : undefined);\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRequestOfferSnapshot };\n        if (object.snapshot !== undefined && object.snapshot !== null) {\n            message.snapshot = Snapshot.fromPartial(object.snapshot);\n        }\n        else {\n            message.snapshot = undefined;\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseRequestLoadSnapshotChunk = { height: 0, format: 0, chunk: 0 };\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunk = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = Number(object.chunk);\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunk !== undefined && (obj.chunk = message.chunk);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestLoadSnapshotChunk,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = 0;\n        }\n        return message;\n    },\n};\nconst baseRequestApplySnapshotChunk = { index: 0, sender: \"\" };\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.chunk = reader.bytes();\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        message.sender !== undefined && (obj.sender = message.sender);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRequestApplySnapshotChunk,\n        };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponse = {};\nexport const Response = {\n    encode(message, writer = Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    break;\n                case 13:\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    break;\n                case 15:\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                case 16:\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromJSON(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromJSON(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromJSON(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromJSON(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromJSON(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromJSON(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromJSON(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromJSON(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromJSON(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromJSON(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromJSON(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromJSON(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromJSON(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exception !== undefined &&\n            (obj.exception = message.exception\n                ? ResponseException.toJSON(message.exception)\n                : undefined);\n        message.echo !== undefined &&\n            (obj.echo = message.echo ? ResponseEcho.toJSON(message.echo) : undefined);\n        message.flush !== undefined &&\n            (obj.flush = message.flush\n                ? ResponseFlush.toJSON(message.flush)\n                : undefined);\n        message.info !== undefined &&\n            (obj.info = message.info ? ResponseInfo.toJSON(message.info) : undefined);\n        message.setOption !== undefined &&\n            (obj.setOption = message.setOption\n                ? ResponseSetOption.toJSON(message.setOption)\n                : undefined);\n        message.initChain !== undefined &&\n            (obj.initChain = message.initChain\n                ? ResponseInitChain.toJSON(message.initChain)\n                : undefined);\n        message.query !== undefined &&\n            (obj.query = message.query\n                ? ResponseQuery.toJSON(message.query)\n                : undefined);\n        message.beginBlock !== undefined &&\n            (obj.beginBlock = message.beginBlock\n                ? ResponseBeginBlock.toJSON(message.beginBlock)\n                : undefined);\n        message.checkTx !== undefined &&\n            (obj.checkTx = message.checkTx\n                ? ResponseCheckTx.toJSON(message.checkTx)\n                : undefined);\n        message.deliverTx !== undefined &&\n            (obj.deliverTx = message.deliverTx\n                ? ResponseDeliverTx.toJSON(message.deliverTx)\n                : undefined);\n        message.endBlock !== undefined &&\n            (obj.endBlock = message.endBlock\n                ? ResponseEndBlock.toJSON(message.endBlock)\n                : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit\n                ? ResponseCommit.toJSON(message.commit)\n                : undefined);\n        message.listSnapshots !== undefined &&\n            (obj.listSnapshots = message.listSnapshots\n                ? ResponseListSnapshots.toJSON(message.listSnapshots)\n                : undefined);\n        message.offerSnapshot !== undefined &&\n            (obj.offerSnapshot = message.offerSnapshot\n                ? ResponseOfferSnapshot.toJSON(message.offerSnapshot)\n                : undefined);\n        message.loadSnapshotChunk !== undefined &&\n            (obj.loadSnapshotChunk = message.loadSnapshotChunk\n                ? ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk)\n                : undefined);\n        message.applySnapshotChunk !== undefined &&\n            (obj.applySnapshotChunk = message.applySnapshotChunk\n                ? ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponse };\n        if (object.exception !== undefined && object.exception !== null) {\n            message.exception = ResponseException.fromPartial(object.exception);\n        }\n        else {\n            message.exception = undefined;\n        }\n        if (object.echo !== undefined && object.echo !== null) {\n            message.echo = ResponseEcho.fromPartial(object.echo);\n        }\n        else {\n            message.echo = undefined;\n        }\n        if (object.flush !== undefined && object.flush !== null) {\n            message.flush = ResponseFlush.fromPartial(object.flush);\n        }\n        else {\n            message.flush = undefined;\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = ResponseInfo.fromPartial(object.info);\n        }\n        else {\n            message.info = undefined;\n        }\n        if (object.setOption !== undefined && object.setOption !== null) {\n            message.setOption = ResponseSetOption.fromPartial(object.setOption);\n        }\n        else {\n            message.setOption = undefined;\n        }\n        if (object.initChain !== undefined && object.initChain !== null) {\n            message.initChain = ResponseInitChain.fromPartial(object.initChain);\n        }\n        else {\n            message.initChain = undefined;\n        }\n        if (object.query !== undefined && object.query !== null) {\n            message.query = ResponseQuery.fromPartial(object.query);\n        }\n        else {\n            message.query = undefined;\n        }\n        if (object.beginBlock !== undefined && object.beginBlock !== null) {\n            message.beginBlock = ResponseBeginBlock.fromPartial(object.beginBlock);\n        }\n        else {\n            message.beginBlock = undefined;\n        }\n        if (object.checkTx !== undefined && object.checkTx !== null) {\n            message.checkTx = ResponseCheckTx.fromPartial(object.checkTx);\n        }\n        else {\n            message.checkTx = undefined;\n        }\n        if (object.deliverTx !== undefined && object.deliverTx !== null) {\n            message.deliverTx = ResponseDeliverTx.fromPartial(object.deliverTx);\n        }\n        else {\n            message.deliverTx = undefined;\n        }\n        if (object.endBlock !== undefined && object.endBlock !== null) {\n            message.endBlock = ResponseEndBlock.fromPartial(object.endBlock);\n        }\n        else {\n            message.endBlock = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = ResponseCommit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        if (object.listSnapshots !== undefined && object.listSnapshots !== null) {\n            message.listSnapshots = ResponseListSnapshots.fromPartial(object.listSnapshots);\n        }\n        else {\n            message.listSnapshots = undefined;\n        }\n        if (object.offerSnapshot !== undefined && object.offerSnapshot !== null) {\n            message.offerSnapshot = ResponseOfferSnapshot.fromPartial(object.offerSnapshot);\n        }\n        else {\n            message.offerSnapshot = undefined;\n        }\n        if (object.loadSnapshotChunk !== undefined &&\n            object.loadSnapshotChunk !== null) {\n            message.loadSnapshotChunk = ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk);\n        }\n        else {\n            message.loadSnapshotChunk = undefined;\n        }\n        if (object.applySnapshotChunk !== undefined &&\n            object.applySnapshotChunk !== null) {\n            message.applySnapshotChunk = ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk);\n        }\n        else {\n            message.applySnapshotChunk = undefined;\n        }\n        return message;\n    },\n};\nconst baseResponseException = { error: \"\" };\nexport const ResponseException = {\n    encode(message, writer = Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseException };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseException };\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEcho = { message: \"\" };\nexport const ResponseEcho = {\n    encode(message, writer = Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEcho };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.message = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = String(object.message);\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.message !== undefined && (obj.message = message.message);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEcho };\n        if (object.message !== undefined && object.message !== null) {\n            message.message = object.message;\n        }\n        else {\n            message.message = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseFlush = {};\nexport const ResponseFlush = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseFlush };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseResponseFlush };\n        return message;\n    },\n};\nconst baseResponseInfo = {\n    data: \"\",\n    version: \"\",\n    appVersion: 0,\n    lastBlockHeight: 0,\n};\nexport const ResponseInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== 0) {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== 0) {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.string();\n                    break;\n                case 3:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.lastBlockHeight = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.lastBlockAppHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = Number(object.lastBlockHeight);\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = bytesFromBase64(object.lastBlockAppHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined && (obj.data = message.data);\n        message.version !== undefined && (obj.version = message.version);\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        message.lastBlockHeight !== undefined &&\n            (obj.lastBlockHeight = message.lastBlockHeight);\n        message.lastBlockAppHash !== undefined &&\n            (obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash !== undefined\n                ? message.lastBlockAppHash\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInfo };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        if (object.lastBlockHeight !== undefined &&\n            object.lastBlockHeight !== null) {\n            message.lastBlockHeight = object.lastBlockHeight;\n        }\n        else {\n            message.lastBlockHeight = 0;\n        }\n        if (object.lastBlockAppHash !== undefined &&\n            object.lastBlockAppHash !== null) {\n            message.lastBlockAppHash = object.lastBlockAppHash;\n        }\n        else {\n            message.lastBlockAppHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseSetOption = { code: 0, log: \"\", info: \"\" };\nexport const ResponseSetOption = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseSetOption };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseSetOption };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseInitChain = {};\nexport const ResponseInitChain = {\n    encode(message, writer = Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.appHash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromJSON(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.consensusParams !== undefined &&\n            (obj.consensusParams = message.consensusParams\n                ? ConsensusParams.toJSON(message.consensusParams)\n                : undefined);\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseInitChain };\n        message.validators = [];\n        if (object.consensusParams !== undefined &&\n            object.consensusParams !== null) {\n            message.consensusParams = ConsensusParams.fromPartial(object.consensusParams);\n        }\n        else {\n            message.consensusParams = undefined;\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseQuery = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    index: 0,\n    height: 0,\n    codespace: \"\",\n};\nexport const ResponseQuery = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== 0) {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseQuery };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.key = reader.bytes();\n                    break;\n                case 7:\n                    message.value = reader.bytes();\n                    break;\n                case 8:\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    break;\n                case 9:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromJSON(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.index !== undefined && (obj.index = message.index);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.proofOps !== undefined &&\n            (obj.proofOps = message.proofOps\n                ? ProofOps.toJSON(message.proofOps)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseQuery };\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.proofOps !== undefined && object.proofOps !== null) {\n            message.proofOps = ProofOps.fromPartial(object.proofOps);\n        }\n        else {\n            message.proofOps = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseBeginBlock = {};\nexport const ResponseBeginBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseBeginBlock };\n        message.events = [];\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCheckTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseCheckTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCheckTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseDeliverTx = {\n    code: 0,\n    log: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    codespace: \"\",\n};\nexport const ResponseDeliverTx = {\n    encode(message, writer = Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.code = reader.uint32();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.log = reader.string();\n                    break;\n                case 4:\n                    message.info = reader.string();\n                    break;\n                case 5:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 6:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 7:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.codespace = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseDeliverTx };\n        message.events = [];\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        return message;\n    },\n};\nconst baseResponseEndBlock = {};\nexport const ResponseEndBlock = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromJSON(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromJSON(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorUpdates) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => e ? ValidatorUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorUpdates = [];\n        }\n        message.consensusParamUpdates !== undefined &&\n            (obj.consensusParamUpdates = message.consensusParamUpdates\n                ? ConsensusParams.toJSON(message.consensusParamUpdates)\n                : undefined);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseEndBlock };\n        message.validatorUpdates = [];\n        message.events = [];\n        if (object.validatorUpdates !== undefined &&\n            object.validatorUpdates !== null) {\n            for (const e of object.validatorUpdates) {\n                message.validatorUpdates.push(ValidatorUpdate.fromPartial(e));\n            }\n        }\n        if (object.consensusParamUpdates !== undefined &&\n            object.consensusParamUpdates !== null) {\n            message.consensusParamUpdates = ConsensusParams.fromPartial(object.consensusParamUpdates);\n        }\n        else {\n            message.consensusParamUpdates = undefined;\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseCommit = { retainHeight: 0 };\nexport const ResponseCommit = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== 0) {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseCommit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.retainHeight = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = Number(object.retainHeight);\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.retainHeight !== undefined &&\n            (obj.retainHeight = message.retainHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseCommit };\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.retainHeight !== undefined && object.retainHeight !== null) {\n            message.retainHeight = object.retainHeight;\n        }\n        else {\n            message.retainHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseListSnapshots = {};\nexport const ResponseListSnapshots = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshots) {\n            obj.snapshots = message.snapshots.map((e) => e ? Snapshot.toJSON(e) : undefined);\n        }\n        else {\n            obj.snapshots = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseListSnapshots };\n        message.snapshots = [];\n        if (object.snapshots !== undefined && object.snapshots !== null) {\n            for (const e of object.snapshots) {\n                message.snapshots.push(Snapshot.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseResponseOfferSnapshot = { result: 0 };\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResponseOfferSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseOfferSnapshot_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseOfferSnapshot_ResultToJSON(message.result));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResponseOfferSnapshot };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        return message;\n    },\n};\nconst baseResponseLoadSnapshotChunk = {};\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.chunk = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = bytesFromBase64(object.chunk);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.chunk !== undefined &&\n            (obj.chunk = base64FromBytes(message.chunk !== undefined ? message.chunk : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseLoadSnapshotChunk,\n        };\n        if (object.chunk !== undefined && object.chunk !== null) {\n            message.chunk = object.chunk;\n        }\n        else {\n            message.chunk = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseResponseApplySnapshotChunk = {\n    result: 0,\n    refetchChunks: 0,\n    rejectSenders: \"\",\n};\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.result = reader.int32();\n                    break;\n                case 2:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                    }\n                    else {\n                        message.refetchChunks.push(reader.uint32());\n                    }\n                    break;\n                case 3:\n                    message.rejectSenders.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = responseApplySnapshotChunk_ResultFromJSON(object.result);\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(Number(e));\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result = responseApplySnapshotChunk_ResultToJSON(message.result));\n        if (message.refetchChunks) {\n            obj.refetchChunks = message.refetchChunks.map((e) => e);\n        }\n        else {\n            obj.refetchChunks = [];\n        }\n        if (message.rejectSenders) {\n            obj.rejectSenders = message.rejectSenders.map((e) => e);\n        }\n        else {\n            obj.rejectSenders = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseResponseApplySnapshotChunk,\n        };\n        message.refetchChunks = [];\n        message.rejectSenders = [];\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = 0;\n        }\n        if (object.refetchChunks !== undefined && object.refetchChunks !== null) {\n            for (const e of object.refetchChunks) {\n                message.refetchChunks.push(e);\n            }\n        }\n        if (object.rejectSenders !== undefined && object.rejectSenders !== null) {\n            for (const e of object.rejectSenders) {\n                message.rejectSenders.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        return message;\n    },\n};\nconst baseLastCommitInfo = { round: 0 };\nexport const LastCommitInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.round = reader.int32();\n                    break;\n                case 2:\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.round !== undefined && (obj.round = message.round);\n        if (message.votes) {\n            obj.votes = message.votes.map((e) => e ? VoteInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.votes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastCommitInfo };\n        message.votes = [];\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.votes !== undefined && object.votes !== null) {\n            for (const e of object.votes) {\n                message.votes.push(VoteInfo.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEvent = { type: \"\" };\nexport const Event = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? EventAttribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(EventAttribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseEventAttribute = { index: false };\nexport const EventAttribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEventAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.index = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Boolean(object.index);\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.index !== undefined && (obj.index = message.index);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEventAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = false;\n        }\n        return message;\n    },\n};\nconst baseTxResult = { height: 0, index: 0 };\nexport const TxResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = reader.uint32();\n                    break;\n                case 3:\n                    message.tx = reader.bytes();\n                    break;\n                case 4:\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = bytesFromBase64(object.tx);\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.index !== undefined && (obj.index = message.index);\n        message.tx !== undefined &&\n            (obj.tx = base64FromBytes(message.tx !== undefined ? message.tx : new Uint8Array()));\n        message.result !== undefined &&\n            (obj.result = message.result\n                ? ResponseDeliverTx.toJSON(message.result)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResult };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = object.tx;\n        }\n        else {\n            message.tx = new Uint8Array();\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = ResponseDeliverTx.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidator = { power: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorUpdate = { power: 0 };\nexport const ValidatorUpdate = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorUpdate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorUpdate };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nconst baseVoteInfo = { signedLastBlock: false };\nexport const VoteInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVoteInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signedLastBlock = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = Boolean(object.signedLastBlock);\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.signedLastBlock !== undefined &&\n            (obj.signedLastBlock = message.signedLastBlock);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVoteInfo };\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.signedLastBlock !== undefined &&\n            object.signedLastBlock !== null) {\n            message.signedLastBlock = object.signedLastBlock;\n        }\n        else {\n            message.signedLastBlock = false;\n        }\n        return message;\n    },\n};\nconst baseEvidence = { type: 0, height: 0, totalVotingPower: 0 };\nexport const Evidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = evidenceTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = evidenceTypeToJSON(message.type));\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? Validator.toJSON(message.validator)\n                : undefined);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidence };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = Validator.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseSnapshot = { height: 0, format: 0, chunks: 0 };\nexport const Snapshot = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSnapshot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.format = reader.uint32();\n                    break;\n                case 3:\n                    message.chunks = reader.uint32();\n                    break;\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                case 5:\n                    message.metadata = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = Number(object.format);\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = Number(object.chunks);\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = bytesFromBase64(object.metadata);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.format !== undefined && (obj.format = message.format);\n        message.chunks !== undefined && (obj.chunks = message.chunks);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.metadata !== undefined &&\n            (obj.metadata = base64FromBytes(message.metadata !== undefined ? message.metadata : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSnapshot };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.format !== undefined && object.format !== null) {\n            message.format = object.format;\n        }\n        else {\n            message.format = 0;\n        }\n        if (object.chunks !== undefined && object.chunks !== null) {\n            message.chunks = object.chunks;\n        }\n        else {\n            message.chunks = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.metadata !== undefined && object.metadata !== null) {\n            message.metadata = object.metadata;\n        }\n        else {\n            message.metadata = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Echo(request) {\n        const data = RequestEcho.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Echo\", data);\n        return promise.then((data) => ResponseEcho.decode(new Reader(data)));\n    }\n    Flush(request) {\n        const data = RequestFlush.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Flush\", data);\n        return promise.then((data) => ResponseFlush.decode(new Reader(data)));\n    }\n    Info(request) {\n        const data = RequestInfo.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Info\", data);\n        return promise.then((data) => ResponseInfo.decode(new Reader(data)));\n    }\n    SetOption(request) {\n        const data = RequestSetOption.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"SetOption\", data);\n        return promise.then((data) => ResponseSetOption.decode(new Reader(data)));\n    }\n    DeliverTx(request) {\n        const data = RequestDeliverTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"DeliverTx\", data);\n        return promise.then((data) => ResponseDeliverTx.decode(new Reader(data)));\n    }\n    CheckTx(request) {\n        const data = RequestCheckTx.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"CheckTx\", data);\n        return promise.then((data) => ResponseCheckTx.decode(new Reader(data)));\n    }\n    Query(request) {\n        const data = RequestQuery.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Query\", data);\n        return promise.then((data) => ResponseQuery.decode(new Reader(data)));\n    }\n    Commit(request) {\n        const data = RequestCommit.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"Commit\", data);\n        return promise.then((data) => ResponseCommit.decode(new Reader(data)));\n    }\n    InitChain(request) {\n        const data = RequestInitChain.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"InitChain\", data);\n        return promise.then((data) => ResponseInitChain.decode(new Reader(data)));\n    }\n    BeginBlock(request) {\n        const data = RequestBeginBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"BeginBlock\", data);\n        return promise.then((data) => ResponseBeginBlock.decode(new Reader(data)));\n    }\n    EndBlock(request) {\n        const data = RequestEndBlock.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"EndBlock\", data);\n        return promise.then((data) => ResponseEndBlock.decode(new Reader(data)));\n    }\n    ListSnapshots(request) {\n        const data = RequestListSnapshots.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ListSnapshots\", data);\n        return promise.then((data) => ResponseListSnapshots.decode(new Reader(data)));\n    }\n    OfferSnapshot(request) {\n        const data = RequestOfferSnapshot.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"OfferSnapshot\", data);\n        return promise.then((data) => ResponseOfferSnapshot.decode(new Reader(data)));\n    }\n    LoadSnapshotChunk(request) {\n        const data = RequestLoadSnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"LoadSnapshotChunk\", data);\n        return promise.then((data) => ResponseLoadSnapshotChunk.decode(new Reader(data)));\n    }\n    ApplySnapshotChunk(request) {\n        const data = RequestApplySnapshotChunk.encode(request).finish();\n        const promise = this.rpc.request(\"tendermint.abci.ABCIApplication\", \"ApplySnapshotChunk\", data);\n        return promise.then((data) => ResponseApplySnapshotChunk.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../google/protobuf/duration\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseConsensusParams = {};\nexport const ConsensusParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensusParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromJSON(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromJSON(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined &&\n            (obj.block = message.block\n                ? BlockParams.toJSON(message.block)\n                : undefined);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? EvidenceParams.toJSON(message.evidence)\n                : undefined);\n        message.validator !== undefined &&\n            (obj.validator = message.validator\n                ? ValidatorParams.toJSON(message.validator)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? VersionParams.toJSON(message.version)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensusParams };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = BlockParams.fromPartial(object.block);\n        }\n        else {\n            message.block = undefined;\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = EvidenceParams.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        if (object.validator !== undefined && object.validator !== null) {\n            message.validator = ValidatorParams.fromPartial(object.validator);\n        }\n        else {\n            message.validator = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = VersionParams.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockParams = { maxBytes: 0, maxGas: 0, timeIotaMs: 0 };\nexport const BlockParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxBytes !== 0) {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== 0) {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        if (message.timeIotaMs !== 0) {\n            writer.uint32(24).int64(message.timeIotaMs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxGas = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.timeIotaMs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = Number(object.maxGas);\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = Number(object.timeIotaMs);\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        message.maxGas !== undefined && (obj.maxGas = message.maxGas);\n        message.timeIotaMs !== undefined && (obj.timeIotaMs = message.timeIotaMs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockParams };\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        if (object.maxGas !== undefined && object.maxGas !== null) {\n            message.maxGas = object.maxGas;\n        }\n        else {\n            message.maxGas = 0;\n        }\n        if (object.timeIotaMs !== undefined && object.timeIotaMs !== null) {\n            message.timeIotaMs = object.timeIotaMs;\n        }\n        else {\n            message.timeIotaMs = 0;\n        }\n        return message;\n    },\n};\nconst baseEvidenceParams = { maxAgeNumBlocks: 0, maxBytes: 0 };\nexport const EvidenceParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxAgeNumBlocks !== 0) {\n            writer.uint32(8).int64(message.maxAgeNumBlocks);\n        }\n        if (message.maxAgeDuration !== undefined) {\n            Duration.encode(message.maxAgeDuration, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxBytes !== 0) {\n            writer.uint32(24).int64(message.maxBytes);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEvidenceParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxAgeNumBlocks = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.maxAgeDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxBytes = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = Number(object.maxAgeNumBlocks);\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromJSON(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = Number(object.maxBytes);\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxAgeNumBlocks !== undefined &&\n            (obj.maxAgeNumBlocks = message.maxAgeNumBlocks);\n        message.maxAgeDuration !== undefined &&\n            (obj.maxAgeDuration = message.maxAgeDuration\n                ? Duration.toJSON(message.maxAgeDuration)\n                : undefined);\n        message.maxBytes !== undefined && (obj.maxBytes = message.maxBytes);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEvidenceParams };\n        if (object.maxAgeNumBlocks !== undefined &&\n            object.maxAgeNumBlocks !== null) {\n            message.maxAgeNumBlocks = object.maxAgeNumBlocks;\n        }\n        else {\n            message.maxAgeNumBlocks = 0;\n        }\n        if (object.maxAgeDuration !== undefined && object.maxAgeDuration !== null) {\n            message.maxAgeDuration = Duration.fromPartial(object.maxAgeDuration);\n        }\n        else {\n            message.maxAgeDuration = undefined;\n        }\n        if (object.maxBytes !== undefined && object.maxBytes !== null) {\n            message.maxBytes = object.maxBytes;\n        }\n        else {\n            message.maxBytes = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorParams = { pubKeyTypes: \"\" };\nexport const ValidatorParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pubKeyTypes) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKeyTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKeyTypes) {\n            obj.pubKeyTypes = message.pubKeyTypes.map((e) => e);\n        }\n        else {\n            obj.pubKeyTypes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorParams };\n        message.pubKeyTypes = [];\n        if (object.pubKeyTypes !== undefined && object.pubKeyTypes !== null) {\n            for (const e of object.pubKeyTypes) {\n                message.pubKeyTypes.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersionParams = { appVersion: 0 };\nexport const VersionParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.appVersion !== 0) {\n            writer.uint32(8).uint64(message.appVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersionParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.appVersion = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = Number(object.appVersion);\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.appVersion !== undefined && (obj.appVersion = message.appVersion);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersionParams };\n        if (object.appVersion !== undefined && object.appVersion !== null) {\n            message.appVersion = object.appVersion;\n        }\n        else {\n            message.appVersion = 0;\n        }\n        return message;\n    },\n};\nconst baseHashedParams = { blockMaxBytes: 0, blockMaxGas: 0 };\nexport const HashedParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockMaxBytes !== 0) {\n            writer.uint32(8).int64(message.blockMaxBytes);\n        }\n        if (message.blockMaxGas !== 0) {\n            writer.uint32(16).int64(message.blockMaxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHashedParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockMaxBytes = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.blockMaxGas = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = Number(object.blockMaxBytes);\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = Number(object.blockMaxGas);\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockMaxBytes !== undefined &&\n            (obj.blockMaxBytes = message.blockMaxBytes);\n        message.blockMaxGas !== undefined &&\n            (obj.blockMaxGas = message.blockMaxGas);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHashedParams };\n        if (object.blockMaxBytes !== undefined && object.blockMaxBytes !== null) {\n            message.blockMaxBytes = object.blockMaxBytes;\n        }\n        else {\n            message.blockMaxBytes = 0;\n        }\n        if (object.blockMaxGas !== undefined && object.blockMaxGas !== null) {\n            message.blockMaxGas = object.blockMaxGas;\n        }\n        else {\n            message.blockMaxGas = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseEquivocation = { height: 0, power: 0, consensusAddress: \"\" };\nexport const Equivocation = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.power !== 0) {\n            writer.uint32(24).int64(message.power);\n        }\n        if (message.consensusAddress !== \"\") {\n            writer.uint32(34).string(message.consensusAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseEquivocation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.consensusAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = String(object.consensusAddress);\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.power !== undefined && (obj.power = message.power);\n        message.consensusAddress !== undefined &&\n            (obj.consensusAddress = message.consensusAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseEquivocation };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        if (object.consensusAddress !== undefined &&\n            object.consensusAddress !== null) {\n            message.consensusAddress = object.consensusAddress;\n        }\n        else {\n            message.consensusAddress = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { BaseAccount } from \"../../../cosmos/auth/v1beta1/auth\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseBaseVestingAccount = { endTime: 0 };\nexport const BaseVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.originalVesting) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatedFree) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.delegatedVesting) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(40).int64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.originalVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.delegatedFree.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.delegatedVesting.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        if (message.originalVesting) {\n            obj.originalVesting = message.originalVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.originalVesting = [];\n        }\n        if (message.delegatedFree) {\n            obj.delegatedFree = message.delegatedFree.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedFree = [];\n        }\n        if (message.delegatedVesting) {\n            obj.delegatedVesting = message.delegatedVesting.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatedVesting = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseVestingAccount };\n        message.originalVesting = [];\n        message.delegatedFree = [];\n        message.delegatedVesting = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.originalVesting !== undefined &&\n            object.originalVesting !== null) {\n            for (const e of object.originalVesting) {\n                message.originalVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedFree !== undefined && object.delegatedFree !== null) {\n            for (const e of object.delegatedFree) {\n                message.delegatedFree.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.delegatedVesting !== undefined &&\n            object.delegatedVesting !== null) {\n            for (const e of object.delegatedVesting) {\n                message.delegatedVesting.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        return message;\n    },\n};\nconst baseContinuousVestingAccount = { startTime: 0 };\nexport const ContinuousVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseContinuousVestingAccount,\n        };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        return message;\n    },\n};\nconst baseDelayedVestingAccount = {};\nexport const DelayedVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelayedVestingAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelayedVestingAccount };\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        return message;\n    },\n};\nconst basePeriod = { length: 0 };\nexport const Period = {\n    encode(message, writer = Writer.create()) {\n        if (message.length !== 0) {\n            writer.uint32(8).int64(message.length);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriod };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.length = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = Number(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.length !== undefined && (obj.length = message.length);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriod };\n        message.amount = [];\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePeriodicVestingAccount = { startTime: 0 };\nexport const PeriodicVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseVestingAccount !== undefined) {\n            BaseVestingAccount.encode(message.baseVestingAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.startTime !== 0) {\n            writer.uint32(16).int64(message.startTime);\n        }\n        for (const v of message.vestingPeriods) {\n            Period.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseVestingAccount = BaseVestingAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.startTime = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.vestingPeriods.push(Period.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromJSON(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = Number(object.startTime);\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseVestingAccount !== undefined &&\n            (obj.baseVestingAccount = message.baseVestingAccount\n                ? BaseVestingAccount.toJSON(message.baseVestingAccount)\n                : undefined);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        if (message.vestingPeriods) {\n            obj.vestingPeriods = message.vestingPeriods.map((e) => e ? Period.toJSON(e) : undefined);\n        }\n        else {\n            obj.vestingPeriods = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePeriodicVestingAccount };\n        message.vestingPeriods = [];\n        if (object.baseVestingAccount !== undefined &&\n            object.baseVestingAccount !== null) {\n            message.baseVestingAccount = BaseVestingAccount.fromPartial(object.baseVestingAccount);\n        }\n        else {\n            message.baseVestingAccount = undefined;\n        }\n        if (object.startTime !== undefined && object.startTime !== null) {\n            message.startTime = object.startTime;\n        }\n        else {\n            message.startTime = 0;\n        }\n        if (object.vestingPeriods !== undefined && object.vestingPeriods !== null) {\n            for (const e of object.vestingPeriods) {\n                message.vestingPeriods.push(Period.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\n/**\n * State defines if a channel is in one of the following states:\n * CLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A channel has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /** STATE_TRYOPEN - A channel has acknowledged the handshake step on the counterparty chain. */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /**\n     * STATE_OPEN - A channel has completed the handshake. Open channels are\n     * ready to send and receive packets.\n     */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    /**\n     * STATE_CLOSED - A channel has been closed and can no longer be used to send or receive\n     * packets.\n     */\n    State[State[\"STATE_CLOSED\"] = 4] = \"STATE_CLOSED\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case 4:\n        case \"STATE_CLOSED\":\n            return State.STATE_CLOSED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        case State.STATE_CLOSED:\n            return \"STATE_CLOSED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** Order defines if a channel is ORDERED or UNORDERED */\nexport var Order;\n(function (Order) {\n    /** ORDER_NONE_UNSPECIFIED - zero-value for channel ordering */\n    Order[Order[\"ORDER_NONE_UNSPECIFIED\"] = 0] = \"ORDER_NONE_UNSPECIFIED\";\n    /**\n     * ORDER_UNORDERED - packets can be delivered in any order, which may differ from the order in\n     * which they were sent.\n     */\n    Order[Order[\"ORDER_UNORDERED\"] = 1] = \"ORDER_UNORDERED\";\n    /** ORDER_ORDERED - packets are delivered exactly in the order which they were sent */\n    Order[Order[\"ORDER_ORDERED\"] = 2] = \"ORDER_ORDERED\";\n    Order[Order[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(Order || (Order = {}));\nexport function orderFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"ORDER_NONE_UNSPECIFIED\":\n            return Order.ORDER_NONE_UNSPECIFIED;\n        case 1:\n        case \"ORDER_UNORDERED\":\n            return Order.ORDER_UNORDERED;\n        case 2:\n        case \"ORDER_ORDERED\":\n            return Order.ORDER_ORDERED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return Order.UNRECOGNIZED;\n    }\n}\nexport function orderToJSON(object) {\n    switch (object) {\n        case Order.ORDER_NONE_UNSPECIFIED:\n            return \"ORDER_NONE_UNSPECIFIED\";\n        case Order.ORDER_UNORDERED:\n            return \"ORDER_UNORDERED\";\n        case Order.ORDER_ORDERED:\n            return \"ORDER_ORDERED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n};\nexport const Channel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        return message;\n    },\n};\nconst baseIdentifiedChannel = {\n    state: 0,\n    ordering: 0,\n    connectionHops: \"\",\n    version: \"\",\n    portId: \"\",\n    channelId: \"\",\n};\nexport const IdentifiedChannel = {\n    encode(message, writer = Writer.create()) {\n        if (message.state !== 0) {\n            writer.uint32(8).int32(message.state);\n        }\n        if (message.ordering !== 0) {\n            writer.uint32(16).int32(message.ordering);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.connectionHops) {\n            writer.uint32(34).string(v);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(42).string(message.version);\n        }\n        if (message.portId !== \"\") {\n            writer.uint32(50).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(58).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.state = reader.int32();\n                    break;\n                case 2:\n                    message.ordering = reader.int32();\n                    break;\n                case 3:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.connectionHops.push(reader.string());\n                    break;\n                case 5:\n                    message.version = reader.string();\n                    break;\n                case 6:\n                    message.portId = reader.string();\n                    break;\n                case 7:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = orderFromJSON(object.ordering);\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(String(e));\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = String(object.version);\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.ordering !== undefined &&\n            (obj.ordering = orderToJSON(message.ordering));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        if (message.connectionHops) {\n            obj.connectionHops = message.connectionHops.map((e) => e);\n        }\n        else {\n            obj.connectionHops = [];\n        }\n        message.version !== undefined && (obj.version = message.version);\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedChannel };\n        message.connectionHops = [];\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.ordering !== undefined && object.ordering !== null) {\n            message.ordering = object.ordering;\n        }\n        else {\n            message.ordering = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.connectionHops !== undefined && object.connectionHops !== null) {\n            for (const e of object.connectionHops) {\n                message.connectionHops.push(e);\n            }\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = object.version;\n        }\n        else {\n            message.version = \"\";\n        }\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { portId: \"\", channelId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        return message;\n    },\n};\nconst basePacket = {\n    sequence: 0,\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    destinationPort: \"\",\n    destinationChannel: \"\",\n    timeoutTimestamp: 0,\n};\nexport const Packet = {\n    encode(message, writer = Writer.create()) {\n        if (message.sequence !== 0) {\n            writer.uint32(8).uint64(message.sequence);\n        }\n        if (message.sourcePort !== \"\") {\n            writer.uint32(18).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(26).string(message.sourceChannel);\n        }\n        if (message.destinationPort !== \"\") {\n            writer.uint32(34).string(message.destinationPort);\n        }\n        if (message.destinationChannel !== \"\") {\n            writer.uint32(42).string(message.destinationChannel);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(50).bytes(message.data);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(64).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.sourcePort = reader.string();\n                    break;\n                case 3:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 4:\n                    message.destinationPort = reader.string();\n                    break;\n                case 5:\n                    message.destinationChannel = reader.string();\n                    break;\n                case 6:\n                    message.data = reader.bytes();\n                    break;\n                case 7:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = String(object.destinationPort);\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = String(object.destinationChannel);\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.destinationPort !== undefined &&\n            (obj.destinationPort = message.destinationPort);\n        message.destinationChannel !== undefined &&\n            (obj.destinationChannel = message.destinationChannel);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacket };\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.destinationPort !== undefined &&\n            object.destinationPort !== null) {\n            message.destinationPort = object.destinationPort;\n        }\n        else {\n            message.destinationPort = \"\";\n        }\n        if (object.destinationChannel !== undefined &&\n            object.destinationChannel !== null) {\n            message.destinationChannel = object.destinationChannel;\n        }\n        else {\n            message.destinationChannel = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst basePacketState = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketState = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(34).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketState };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseAcknowledgement = {};\nexport const Acknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.result !== undefined) {\n            writer.uint32(170).bytes(message.result);\n        }\n        if (message.error !== undefined) {\n            writer.uint32(178).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 21:\n                    message.result = reader.bytes();\n                    break;\n                case 22:\n                    message.error = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = bytesFromBase64(object.result);\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = String(object.error);\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.result !== undefined &&\n            (obj.result =\n                message.result !== undefined\n                    ? base64FromBytes(message.result)\n                    : undefined);\n        message.error !== undefined && (obj.error = message.error);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAcknowledgement };\n        if (object.result !== undefined && object.result !== null) {\n            message.result = object.result;\n        }\n        else {\n            message.result = undefined;\n        }\n        if (object.error !== undefined && object.error !== null) {\n            message.error = object.error;\n        }\n        else {\n            message.error = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Header } from \"../../../tendermint/types/types\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\n/** BondStatus is the status of a validator. */\nexport var BondStatus;\n(function (BondStatus) {\n    /** BOND_STATUS_UNSPECIFIED - UNSPECIFIED defines an invalid validator status. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = 0] = \"BOND_STATUS_UNSPECIFIED\";\n    /** BOND_STATUS_UNBONDED - UNBONDED defines a validator that is not bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDED\"] = 1] = \"BOND_STATUS_UNBONDED\";\n    /** BOND_STATUS_UNBONDING - UNBONDING defines a validator that is unbonding. */\n    BondStatus[BondStatus[\"BOND_STATUS_UNBONDING\"] = 2] = \"BOND_STATUS_UNBONDING\";\n    /** BOND_STATUS_BONDED - BONDED defines a validator that is bonded. */\n    BondStatus[BondStatus[\"BOND_STATUS_BONDED\"] = 3] = \"BOND_STATUS_BONDED\";\n    BondStatus[BondStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BondStatus || (BondStatus = {}));\nexport function bondStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BOND_STATUS_UNSPECIFIED\":\n            return BondStatus.BOND_STATUS_UNSPECIFIED;\n        case 1:\n        case \"BOND_STATUS_UNBONDED\":\n            return BondStatus.BOND_STATUS_UNBONDED;\n        case 2:\n        case \"BOND_STATUS_UNBONDING\":\n            return BondStatus.BOND_STATUS_UNBONDING;\n        case 3:\n        case \"BOND_STATUS_BONDED\":\n            return BondStatus.BOND_STATUS_BONDED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BondStatus.UNRECOGNIZED;\n    }\n}\nexport function bondStatusToJSON(object) {\n    switch (object) {\n        case BondStatus.BOND_STATUS_UNSPECIFIED:\n            return \"BOND_STATUS_UNSPECIFIED\";\n        case BondStatus.BOND_STATUS_UNBONDED:\n            return \"BOND_STATUS_UNBONDED\";\n        case BondStatus.BOND_STATUS_UNBONDING:\n            return \"BOND_STATUS_UNBONDING\";\n        case BondStatus.BOND_STATUS_BONDED:\n            return \"BOND_STATUS_BONDED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseHistoricalInfo = {};\nexport const HistoricalInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.valset) {\n            Validator.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.valset.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        if (message.valset) {\n            obj.valset = message.valset.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.valset = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHistoricalInfo };\n        message.valset = [];\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.valset !== undefined && object.valset !== null) {\n            for (const e of object.valset) {\n                message.valset.push(Validator.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommissionRates = {\n    rate: \"\",\n    maxRate: \"\",\n    maxChangeRate: \"\",\n};\nexport const CommissionRates = {\n    encode(message, writer = Writer.create()) {\n        if (message.rate !== \"\") {\n            writer.uint32(10).string(message.rate);\n        }\n        if (message.maxRate !== \"\") {\n            writer.uint32(18).string(message.maxRate);\n        }\n        if (message.maxChangeRate !== \"\") {\n            writer.uint32(26).string(message.maxChangeRate);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommissionRates };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rate = reader.string();\n                    break;\n                case 2:\n                    message.maxRate = reader.string();\n                    break;\n                case 3:\n                    message.maxChangeRate = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = String(object.rate);\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = String(object.maxRate);\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = String(object.maxChangeRate);\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.maxRate !== undefined && (obj.maxRate = message.maxRate);\n        message.maxChangeRate !== undefined &&\n            (obj.maxChangeRate = message.maxChangeRate);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommissionRates };\n        if (object.rate !== undefined && object.rate !== null) {\n            message.rate = object.rate;\n        }\n        else {\n            message.rate = \"\";\n        }\n        if (object.maxRate !== undefined && object.maxRate !== null) {\n            message.maxRate = object.maxRate;\n        }\n        else {\n            message.maxRate = \"\";\n        }\n        if (object.maxChangeRate !== undefined && object.maxChangeRate !== null) {\n            message.maxChangeRate = object.maxChangeRate;\n        }\n        else {\n            message.maxChangeRate = \"\";\n        }\n        return message;\n    },\n};\nconst baseCommission = {};\nexport const Commission = {\n    encode(message, writer = Writer.create()) {\n        if (message.commissionRates !== undefined) {\n            CommissionRates.encode(message.commissionRates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.updateTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.updateTime), writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommission };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commissionRates = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.updateTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromJSON(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = fromJsonTimestamp(object.updateTime);\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.commissionRates !== undefined &&\n            (obj.commissionRates = message.commissionRates\n                ? CommissionRates.toJSON(message.commissionRates)\n                : undefined);\n        message.updateTime !== undefined &&\n            (obj.updateTime =\n                message.updateTime !== undefined\n                    ? message.updateTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommission };\n        if (object.commissionRates !== undefined &&\n            object.commissionRates !== null) {\n            message.commissionRates = CommissionRates.fromPartial(object.commissionRates);\n        }\n        else {\n            message.commissionRates = undefined;\n        }\n        if (object.updateTime !== undefined && object.updateTime !== null) {\n            message.updateTime = object.updateTime;\n        }\n        else {\n            message.updateTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseDescription = {\n    moniker: \"\",\n    identity: \"\",\n    website: \"\",\n    securityContact: \"\",\n    details: \"\",\n};\nexport const Description = {\n    encode(message, writer = Writer.create()) {\n        if (message.moniker !== \"\") {\n            writer.uint32(10).string(message.moniker);\n        }\n        if (message.identity !== \"\") {\n            writer.uint32(18).string(message.identity);\n        }\n        if (message.website !== \"\") {\n            writer.uint32(26).string(message.website);\n        }\n        if (message.securityContact !== \"\") {\n            writer.uint32(34).string(message.securityContact);\n        }\n        if (message.details !== \"\") {\n            writer.uint32(42).string(message.details);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDescription };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.moniker = reader.string();\n                    break;\n                case 2:\n                    message.identity = reader.string();\n                    break;\n                case 3:\n                    message.website = reader.string();\n                    break;\n                case 4:\n                    message.securityContact = reader.string();\n                    break;\n                case 5:\n                    message.details = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = String(object.moniker);\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = String(object.identity);\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = String(object.website);\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = String(object.securityContact);\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = String(object.details);\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.moniker !== undefined && (obj.moniker = message.moniker);\n        message.identity !== undefined && (obj.identity = message.identity);\n        message.website !== undefined && (obj.website = message.website);\n        message.securityContact !== undefined &&\n            (obj.securityContact = message.securityContact);\n        message.details !== undefined && (obj.details = message.details);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDescription };\n        if (object.moniker !== undefined && object.moniker !== null) {\n            message.moniker = object.moniker;\n        }\n        else {\n            message.moniker = \"\";\n        }\n        if (object.identity !== undefined && object.identity !== null) {\n            message.identity = object.identity;\n        }\n        else {\n            message.identity = \"\";\n        }\n        if (object.website !== undefined && object.website !== null) {\n            message.website = object.website;\n        }\n        else {\n            message.website = \"\";\n        }\n        if (object.securityContact !== undefined &&\n            object.securityContact !== null) {\n            message.securityContact = object.securityContact;\n        }\n        else {\n            message.securityContact = \"\";\n        }\n        if (object.details !== undefined && object.details !== null) {\n            message.details = object.details;\n        }\n        else {\n            message.details = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidator = {\n    operatorAddress: \"\",\n    jailed: false,\n    status: 0,\n    tokens: \"\",\n    delegatorShares: \"\",\n    unbondingHeight: 0,\n    minSelfDelegation: \"\",\n};\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.operatorAddress !== \"\") {\n            writer.uint32(10).string(message.operatorAddress);\n        }\n        if (message.consensusPubkey !== undefined) {\n            Any.encode(message.consensusPubkey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.jailed === true) {\n            writer.uint32(24).bool(message.jailed);\n        }\n        if (message.status !== 0) {\n            writer.uint32(32).int32(message.status);\n        }\n        if (message.tokens !== \"\") {\n            writer.uint32(42).string(message.tokens);\n        }\n        if (message.delegatorShares !== \"\") {\n            writer.uint32(50).string(message.delegatorShares);\n        }\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.unbondingHeight !== 0) {\n            writer.uint32(64).int64(message.unbondingHeight);\n        }\n        if (message.unbondingTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.unbondingTime), writer.uint32(74).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            Commission.encode(message.commission, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(90).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.operatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.consensusPubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.jailed = reader.bool();\n                    break;\n                case 4:\n                    message.status = reader.int32();\n                    break;\n                case 5:\n                    message.tokens = reader.string();\n                    break;\n                case 6:\n                    message.delegatorShares = reader.string();\n                    break;\n                case 7:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.unbondingHeight = longToNumber(reader.int64());\n                    break;\n                case 9:\n                    message.unbondingTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.commission = Commission.decode(reader, reader.uint32());\n                    break;\n                case 11:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = String(object.operatorAddress);\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromJSON(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = Boolean(object.jailed);\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = bondStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = String(object.tokens);\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = String(object.delegatorShares);\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = Number(object.unbondingHeight);\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = fromJsonTimestamp(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.operatorAddress !== undefined &&\n            (obj.operatorAddress = message.operatorAddress);\n        message.consensusPubkey !== undefined &&\n            (obj.consensusPubkey = message.consensusPubkey\n                ? Any.toJSON(message.consensusPubkey)\n                : undefined);\n        message.jailed !== undefined && (obj.jailed = message.jailed);\n        message.status !== undefined &&\n            (obj.status = bondStatusToJSON(message.status));\n        message.tokens !== undefined && (obj.tokens = message.tokens);\n        message.delegatorShares !== undefined &&\n            (obj.delegatorShares = message.delegatorShares);\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.unbondingHeight !== undefined &&\n            (obj.unbondingHeight = message.unbondingHeight);\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime =\n                message.unbondingTime !== undefined\n                    ? message.unbondingTime.toISOString()\n                    : null);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? Commission.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.operatorAddress !== undefined &&\n            object.operatorAddress !== null) {\n            message.operatorAddress = object.operatorAddress;\n        }\n        else {\n            message.operatorAddress = \"\";\n        }\n        if (object.consensusPubkey !== undefined &&\n            object.consensusPubkey !== null) {\n            message.consensusPubkey = Any.fromPartial(object.consensusPubkey);\n        }\n        else {\n            message.consensusPubkey = undefined;\n        }\n        if (object.jailed !== undefined && object.jailed !== null) {\n            message.jailed = object.jailed;\n        }\n        else {\n            message.jailed = false;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.tokens !== undefined && object.tokens !== null) {\n            message.tokens = object.tokens;\n        }\n        else {\n            message.tokens = \"\";\n        }\n        if (object.delegatorShares !== undefined &&\n            object.delegatorShares !== null) {\n            message.delegatorShares = object.delegatorShares;\n        }\n        else {\n            message.delegatorShares = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.unbondingHeight !== undefined &&\n            object.unbondingHeight !== null) {\n            message.unbondingHeight = object.unbondingHeight;\n        }\n        else {\n            message.unbondingHeight = 0;\n        }\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = object.unbondingTime;\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = Commission.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseValAddresses = { addresses: \"\" };\nexport const ValAddresses = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.addresses) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.addresses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.addresses) {\n            obj.addresses = message.addresses.map((e) => e);\n        }\n        else {\n            obj.addresses = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValAddresses };\n        message.addresses = [];\n        if (object.addresses !== undefined && object.addresses !== null) {\n            for (const e of object.addresses) {\n                message.addresses.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseDVPair = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const DVPair = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPair };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPair };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVPairs = {};\nexport const DVPairs = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.pairs) {\n            DVPair.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pairs.push(DVPair.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pairs) {\n            obj.pairs = message.pairs.map((e) => (e ? DVPair.toJSON(e) : undefined));\n        }\n        else {\n            obj.pairs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVPairs };\n        message.pairs = [];\n        if (object.pairs !== undefined && object.pairs !== null) {\n            for (const e of object.pairs) {\n                message.pairs.push(DVPair.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDVVTriplet = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const DVVTriplet = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplet };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplet };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseDVVTriplets = {};\nexport const DVVTriplets = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.triplets) {\n            DVVTriplet.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.triplets.push(DVVTriplet.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.triplets) {\n            obj.triplets = message.triplets.map((e) => e ? DVVTriplet.toJSON(e) : undefined);\n        }\n        else {\n            obj.triplets = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDVVTriplets };\n        message.triplets = [];\n        if (object.triplets !== undefined && object.triplets !== null) {\n            for (const e of object.triplets) {\n                message.triplets.push(DVVTriplet.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n    shares: \"\",\n};\nexport const Delegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.shares !== \"\") {\n            writer.uint32(26).string(message.shares);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegation };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.shares = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = String(object.shares);\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.shares !== undefined && (obj.shares = message.shares);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegation };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.shares !== undefined && object.shares !== null) {\n            message.shares = object.shares;\n        }\n        else {\n            message.shares = \"\";\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegation = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const UnbondingDelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        for (const v of message.entries) {\n            UnbondingDelegationEntry.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.entries.push(UnbondingDelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? UnbondingDelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseUnbondingDelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(UnbondingDelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseUnbondingDelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    balance: \"\",\n};\nexport const UnbondingDelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseUnbondingDelegationEntry,\n        };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntry = {\n    creationHeight: 0,\n    initialBalance: \"\",\n    sharesDst: \"\",\n};\nexport const RedelegationEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.creationHeight !== 0) {\n            writer.uint32(8).int64(message.creationHeight);\n        }\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(18).fork()).ldelim();\n        }\n        if (message.initialBalance !== \"\") {\n            writer.uint32(26).string(message.initialBalance);\n        }\n        if (message.sharesDst !== \"\") {\n            writer.uint32(34).string(message.sharesDst);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creationHeight = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.initialBalance = reader.string();\n                    break;\n                case 4:\n                    message.sharesDst = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = Number(object.creationHeight);\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = String(object.initialBalance);\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = String(object.sharesDst);\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creationHeight !== undefined &&\n            (obj.creationHeight = message.creationHeight);\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        message.initialBalance !== undefined &&\n            (obj.initialBalance = message.initialBalance);\n        message.sharesDst !== undefined && (obj.sharesDst = message.sharesDst);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationEntry };\n        if (object.creationHeight !== undefined && object.creationHeight !== null) {\n            message.creationHeight = object.creationHeight;\n        }\n        else {\n            message.creationHeight = 0;\n        }\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        if (object.initialBalance !== undefined && object.initialBalance !== null) {\n            message.initialBalance = object.initialBalance;\n        }\n        else {\n            message.initialBalance = \"\";\n        }\n        if (object.sharesDst !== undefined && object.sharesDst !== null) {\n            message.sharesDst = object.sharesDst;\n        }\n        else {\n            message.sharesDst = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegation = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const Redelegation = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        for (const v of message.entries) {\n            RedelegationEntry.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.entries.push(RedelegationEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegation };\n        message.entries = [];\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxValidators: 0,\n    maxEntries: 0,\n    historicalEntries: 0,\n    bondDenom: \"\",\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.unbondingTime !== undefined) {\n            Duration.encode(message.unbondingTime, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxValidators !== 0) {\n            writer.uint32(16).uint32(message.maxValidators);\n        }\n        if (message.maxEntries !== 0) {\n            writer.uint32(24).uint32(message.maxEntries);\n        }\n        if (message.historicalEntries !== 0) {\n            writer.uint32(32).uint32(message.historicalEntries);\n        }\n        if (message.bondDenom !== \"\") {\n            writer.uint32(42).string(message.bondDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.unbondingTime = Duration.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.maxValidators = reader.uint32();\n                    break;\n                case 3:\n                    message.maxEntries = reader.uint32();\n                    break;\n                case 4:\n                    message.historicalEntries = reader.uint32();\n                    break;\n                case 5:\n                    message.bondDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromJSON(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = Number(object.maxValidators);\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = Number(object.maxEntries);\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = Number(object.historicalEntries);\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = String(object.bondDenom);\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.unbondingTime !== undefined &&\n            (obj.unbondingTime = message.unbondingTime\n                ? Duration.toJSON(message.unbondingTime)\n                : undefined);\n        message.maxValidators !== undefined &&\n            (obj.maxValidators = message.maxValidators);\n        message.maxEntries !== undefined && (obj.maxEntries = message.maxEntries);\n        message.historicalEntries !== undefined &&\n            (obj.historicalEntries = message.historicalEntries);\n        message.bondDenom !== undefined && (obj.bondDenom = message.bondDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.unbondingTime !== undefined && object.unbondingTime !== null) {\n            message.unbondingTime = Duration.fromPartial(object.unbondingTime);\n        }\n        else {\n            message.unbondingTime = undefined;\n        }\n        if (object.maxValidators !== undefined && object.maxValidators !== null) {\n            message.maxValidators = object.maxValidators;\n        }\n        else {\n            message.maxValidators = 0;\n        }\n        if (object.maxEntries !== undefined && object.maxEntries !== null) {\n            message.maxEntries = object.maxEntries;\n        }\n        else {\n            message.maxEntries = 0;\n        }\n        if (object.historicalEntries !== undefined &&\n            object.historicalEntries !== null) {\n            message.historicalEntries = object.historicalEntries;\n        }\n        else {\n            message.historicalEntries = 0;\n        }\n        if (object.bondDenom !== undefined && object.bondDenom !== null) {\n            message.bondDenom = object.bondDenom;\n        }\n        else {\n            message.bondDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseDelegationResponse = {};\nexport const DelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegation !== undefined) {\n            Delegation.encode(message.delegation, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== undefined) {\n            Coin.encode(message.balance, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegation = Delegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balance = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromJSON(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromJSON(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegation !== undefined &&\n            (obj.delegation = message.delegation\n                ? Delegation.toJSON(message.delegation)\n                : undefined);\n        message.balance !== undefined &&\n            (obj.balance = message.balance\n                ? Coin.toJSON(message.balance)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegationResponse };\n        if (object.delegation !== undefined && object.delegation !== null) {\n            message.delegation = Delegation.fromPartial(object.delegation);\n        }\n        else {\n            message.delegation = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = Coin.fromPartial(object.balance);\n        }\n        else {\n            message.balance = undefined;\n        }\n        return message;\n    },\n};\nconst baseRedelegationEntryResponse = { balance: \"\" };\nexport const RedelegationEntryResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegationEntry !== undefined) {\n            RedelegationEntry.encode(message.redelegationEntry, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.balance !== \"\") {\n            writer.uint32(34).string(message.balance);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegationEntry = RedelegationEntry.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.balance = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromJSON(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = String(object.balance);\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegationEntry !== undefined &&\n            (obj.redelegationEntry = message.redelegationEntry\n                ? RedelegationEntry.toJSON(message.redelegationEntry)\n                : undefined);\n        message.balance !== undefined && (obj.balance = message.balance);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseRedelegationEntryResponse,\n        };\n        if (object.redelegationEntry !== undefined &&\n            object.redelegationEntry !== null) {\n            message.redelegationEntry = RedelegationEntry.fromPartial(object.redelegationEntry);\n        }\n        else {\n            message.redelegationEntry = undefined;\n        }\n        if (object.balance !== undefined && object.balance !== null) {\n            message.balance = object.balance;\n        }\n        else {\n            message.balance = \"\";\n        }\n        return message;\n    },\n};\nconst baseRedelegationResponse = {};\nexport const RedelegationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.redelegation !== undefined) {\n            Redelegation.encode(message.redelegation, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.entries) {\n            RedelegationEntryResponse.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.redelegation = Redelegation.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.entries.push(RedelegationEntryResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromJSON(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.redelegation !== undefined &&\n            (obj.redelegation = message.redelegation\n                ? Redelegation.toJSON(message.redelegation)\n                : undefined);\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? RedelegationEntryResponse.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseRedelegationResponse };\n        message.entries = [];\n        if (object.redelegation !== undefined && object.redelegation !== null) {\n            message.redelegation = Redelegation.fromPartial(object.redelegation);\n        }\n        else {\n            message.redelegation = undefined;\n        }\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(RedelegationEntryResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst basePool = { notBondedTokens: \"\", bondedTokens: \"\" };\nexport const Pool = {\n    encode(message, writer = Writer.create()) {\n        if (message.notBondedTokens !== \"\") {\n            writer.uint32(10).string(message.notBondedTokens);\n        }\n        if (message.bondedTokens !== \"\") {\n            writer.uint32(18).string(message.bondedTokens);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePool };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.notBondedTokens = reader.string();\n                    break;\n                case 2:\n                    message.bondedTokens = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = String(object.notBondedTokens);\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = String(object.bondedTokens);\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.notBondedTokens !== undefined &&\n            (obj.notBondedTokens = message.notBondedTokens);\n        message.bondedTokens !== undefined &&\n            (obj.bondedTokens = message.bondedTokens);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePool };\n        if (object.notBondedTokens !== undefined &&\n            object.notBondedTokens !== null) {\n            message.notBondedTokens = object.notBondedTokens;\n        }\n        else {\n            message.notBondedTokens = \"\";\n        }\n        if (object.bondedTokens !== undefined && object.bondedTokens !== null) {\n            message.bondedTokens = object.bondedTokens;\n        }\n        else {\n            message.bondedTokens = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","<template>\n\t<div v-if=\"initialized\">\n\t\t<SpWallet ref=\"wallet\" v-on:dropdown-opened=\"$refs.menu.closeDropdown()\" />\n\t\t<SpLayout>\n\t\t\t<template v-slot:sidebar>\n\t\t\t\t<Sidebar />\n\t\t\t</template>\n\t\t\t<template v-slot:content>\n\t\t\t\t<router-view />\n\t\t\t</template>\n\t\t</SpLayout>\n\t</div>\n</template>\n\n<style>\nbody {\n\tmargin: 0;\n}\n</style>\n\n<script>\nimport './scss/app.scss'\nimport '@starport/vue/lib/starport-vue.css'\nimport Sidebar from './components/Sidebar'\n\nexport default {\n\tcomponents: {\n\t\tSidebar\n\t},\n\tdata() {\n\t\treturn {\n\t\t\tinitialized: false\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n\tasync created() {\n\t\tawait this.$store.dispatch('common/env/init')\n\t\tthis.initialized = true\n\t},\n\terrorCaptured(err) {\n\t\tconsole.log(err)\n\t\treturn false\n\t}\n}\n</script>\n","<template>\n  <SpSidebar\n\t\t\t\t\tv-on:sidebar-open=\"sidebarOpen = true\"\n\t\t\t\t\tv-on:sidebar-close=\"sidebarOpen = false\"\n\t\t\t\t>\n\t\t\t\t\t<template v-slot:default>\n\t\t\t\t\t\t<SpLinkIcon link=\"/\" text=\"Dashboard\" icon=\"Dashboard\" />\n\t\t\t\t\t\t<SpLinkIcon link=\"/types\" text=\"Custom Type\" icon=\"Form\" />\n\t\t\t\t\t\t<div class=\"sp-dash\"></div>\n\t\t\t\t\t\t<SpLinkIcon href=\"https://github.com/tendermint/starport\" target=\"_blank\" text=\"Documentation\" icon=\"Docs\" />\n\t\t\t\t\t</template>\n\t\t\t\t\t<template v-slot:footer>\n\t\t\t\t\t\t<SpStatusAPI :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusRPC :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<SpStatusWS :showText=\"sidebarOpen\" />\n\t\t\t\t\t\t<div class=\"sp-text\">Build: v0.3.8</div>\n\t\t\t\t\t</template>\n\t\t\t\t</SpSidebar>\n</template>\n\n<script>\nexport default {\n  name: 'Sidebar',\n\tdata() {\n\t\treturn {\n\t\t\tsidebarOpen: true\n\t\t}\n\t},\n\tcomputed: {\n\t\thasWallet() {\n\t\t\treturn this.$store.hasModule([ 'common', 'wallet'])\n\t\t}\n\t},\n}\n</script>\n","import { render } from \"./Sidebar.vue?vue&type=template&id=21017ee9\"\nimport script from \"./Sidebar.vue?vue&type=script&lang=js\"\nexport * from \"./Sidebar.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { render } from \"./App.vue?vue&type=template&id=5695b462\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"\nscript.render = render\n\nexport default script","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/vesting/v1beta1/vesting.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgCreateVestingAccount } from \"./types/cosmos/vesting/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", MsgCreateVestingAccount],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgCreateVestingAccount: (data) => ({ typeUrl: \"/cosmos.vesting.v1beta1.MsgCreateVestingAccount\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { BaseVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { ContinuousVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { DelayedVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { Period } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nimport { PeriodicVestingAccount } from \"./module/types/cosmos/vesting/v1beta1/vesting\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            BaseVestingAccount: getStructure(BaseVestingAccount.fromPartial({})),\n            ContinuousVestingAccount: getStructure(ContinuousVestingAccount.fromPartial({})),\n            DelayedVestingAccount: getStructure(DelayedVestingAccount.fromPartial({})),\n            Period: getStructure(Period.fromPartial({})),\n            PeriodicVestingAccount: getStructure(PeriodicVestingAccount.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgCreateVestingAccount({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgCreateVestingAccount({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateVestingAccount(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateVestingAccount:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/crisis/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.crisis.v1beta1\";\nconst baseMsgVerifyInvariant = {\n    sender: \"\",\n    invariantModuleName: \"\",\n    invariantRoute: \"\",\n};\nexport const MsgVerifyInvariant = {\n    encode(message, writer = Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.invariantModuleName !== \"\") {\n            writer.uint32(18).string(message.invariantModuleName);\n        }\n        if (message.invariantRoute !== \"\") {\n            writer.uint32(26).string(message.invariantRoute);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVerifyInvariant };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.invariantModuleName = reader.string();\n                    break;\n                case 3:\n                    message.invariantRoute = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = String(object.invariantModuleName);\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = String(object.invariantRoute);\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.invariantModuleName !== undefined &&\n            (obj.invariantModuleName = message.invariantModuleName);\n        message.invariantRoute !== undefined &&\n            (obj.invariantRoute = message.invariantRoute);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVerifyInvariant };\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.invariantModuleName !== undefined &&\n            object.invariantModuleName !== null) {\n            message.invariantModuleName = object.invariantModuleName;\n        }\n        else {\n            message.invariantModuleName = \"\";\n        }\n        if (object.invariantRoute !== undefined && object.invariantRoute !== null) {\n            message.invariantRoute = object.invariantRoute;\n        }\n        else {\n            message.invariantRoute = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgVerifyInvariantResponse = {};\nexport const MsgVerifyInvariantResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgVerifyInvariantResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    VerifyInvariant(request) {\n        const data = MsgVerifyInvariant.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.crisis.v1beta1.Msg\", \"VerifyInvariant\", data);\n        return promise.then((data) => MsgVerifyInvariantResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgVerifyInvariant } from \"./types/cosmos/crisis/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", MsgVerifyInvariant],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgVerifyInvariant: (data) => ({ typeUrl: \"/cosmos.crisis.v1beta1.MsgVerifyInvariant\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {},\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async sendMsgVerifyInvariant({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgVerifyInvariant({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVerifyInvariant(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVerifyInvariant:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/evidence/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllEvidence\n         * @summary AllEvidence queries all evidence.\n         * @request GET:/cosmos/evidence/v1beta1/evidence\n         */\n        this.queryAllEvidence = (query, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryEvidence\n         * @summary Evidence queries evidence based on evidence hash.\n         * @request GET:/cosmos/evidence/v1beta1/evidence/{evidenceHash}\n         */\n        this.queryEvidence = (evidenceHash, params = {}) => this.request({\n            path: `/cosmos/evidence/v1beta1/evidence/${evidenceHash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitEvidence } from \"./types/cosmos/evidence/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", MsgSubmitEvidence],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitEvidence: (data) => ({ typeUrl: \"/cosmos.evidence.v1beta1.MsgSubmitEvidence\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Equivocation } from \"./module/types/cosmos/evidence/v1beta1/evidence\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Evidence: {},\n        AllEvidence: {},\n        _Structure: {\n            Equivocation: getStructure(Equivocation.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Evidence[JSON.stringify(params)] ?? {};\n        },\n        getAllEvidence: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllEvidence[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash, query)).data : (await (await initQueryClient(rootGetters)).queryEvidence(key.evidence_hash)).data;\n                commit('QUERY', { query: 'Evidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllEvidence({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllEvidence(query)).data : (await (await initQueryClient(rootGetters)).queryAllEvidence()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllEvidence({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllEvidence', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllEvidence', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllEvidence']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllEvidence', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitEvidence({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitEvidence({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitEvidence(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitEvidence:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* ProposalStatus enumerates the valid statuses of a proposal.\n\n - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status.\n - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\nperiod.\n - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\nperiod.\n - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\npassed.\n - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\nbeen rejected.\n - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\nfailed.\n*/\nexport var V1Beta1ProposalStatus;\n(function (V1Beta1ProposalStatus) {\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = \"PROPOSAL_STATUS_PASSED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = \"PROPOSAL_STATUS_REJECTED\";\n    V1Beta1ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = \"PROPOSAL_STATUS_FAILED\";\n})(V1Beta1ProposalStatus || (V1Beta1ProposalStatus = {}));\n/**\n* VoteOption enumerates the valid vote options for a given governance proposal.\n\n - VOTE_OPTION_UNSPECIFIED: VOTE_OPTION_UNSPECIFIED defines a no-op vote option.\n - VOTE_OPTION_YES: VOTE_OPTION_YES defines a yes vote option.\n - VOTE_OPTION_ABSTAIN: VOTE_OPTION_ABSTAIN defines an abstain vote option.\n - VOTE_OPTION_NO: VOTE_OPTION_NO defines a no vote option.\n - VOTE_OPTION_NO_WITH_VETO: VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option.\n*/\nexport var V1Beta1VoteOption;\n(function (V1Beta1VoteOption) {\n    V1Beta1VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = \"VOTE_OPTION_UNSPECIFIED\";\n    V1Beta1VoteOption[\"VOTE_OPTION_YES\"] = \"VOTE_OPTION_YES\";\n    V1Beta1VoteOption[\"VOTE_OPTION_ABSTAIN\"] = \"VOTE_OPTION_ABSTAIN\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO\"] = \"VOTE_OPTION_NO\";\n    V1Beta1VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = \"VOTE_OPTION_NO_WITH_VETO\";\n})(V1Beta1VoteOption || (V1Beta1VoteOption = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/gov/v1beta1/gov.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the gov module.\n         * @request GET:/cosmos/gov/v1beta1/params/{paramsType}\n         */\n        this.queryParams = (paramsType, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/params/${paramsType}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposals\n         * @summary Proposals queries all proposals based on given status.\n         * @request GET:/cosmos/gov/v1beta1/proposals\n         */\n        this.queryProposals = (query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProposal\n         * @summary Proposal queries proposal details based on ProposalID.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}\n         */\n        this.queryProposal = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposits\n         * @summary Deposits queries all deposits of a single proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits\n         */\n        this.queryDeposits = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDeposit\n         * @summary Deposit queries single deposit information based proposalID, depositAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/deposits/{depositor}\n         */\n        this.queryDeposit = (proposalId, depositor, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/deposits/${depositor}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTallyResult\n         * @summary TallyResult queries the tally of a proposal vote.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/tally\n         */\n        this.queryTallyResult = (proposalId, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/tally`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVotes\n         * @summary Votes queries votes of a given proposal.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes\n         */\n        this.queryVotes = (proposalId, query, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryVote\n         * @summary Vote queries voted information based on proposalID, voterAddr.\n         * @request GET:/cosmos/gov/v1beta1/proposals/{proposalId}/votes/{voter}\n         */\n        this.queryVote = (proposalId, voter, params = {}) => this.request({\n            path: `/cosmos/gov/v1beta1/proposals/${proposalId}/votes/${voter}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgSubmitProposal } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgDeposit } from \"./types/cosmos/gov/v1beta1/tx\";\nimport { MsgVote } from \"./types/cosmos/gov/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.gov.v1beta1.MsgSubmitProposal\", MsgSubmitProposal],\n    [\"/cosmos.gov.v1beta1.MsgDeposit\", MsgDeposit],\n    [\"/cosmos.gov.v1beta1.MsgVote\", MsgVote],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgSubmitProposal: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgSubmitProposal\", value: data }),\n        msgDeposit: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgDeposit\", value: data }),\n        msgVote: (data) => ({ typeUrl: \"/cosmos.gov.v1beta1.MsgVote\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { TextProposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Deposit } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Proposal } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyResult } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { Vote } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { DepositParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { VotingParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nimport { TallyParams } from \"./module/types/cosmos/gov/v1beta1/gov\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Proposal: {},\n        Proposals: {},\n        Vote: {},\n        Votes: {},\n        Params: {},\n        Deposit: {},\n        Deposits: {},\n        TallyResult: {},\n        _Structure: {\n            TextProposal: getStructure(TextProposal.fromPartial({})),\n            Deposit: getStructure(Deposit.fromPartial({})),\n            Proposal: getStructure(Proposal.fromPartial({})),\n            TallyResult: getStructure(TallyResult.fromPartial({})),\n            Vote: getStructure(Vote.fromPartial({})),\n            DepositParams: getStructure(DepositParams.fromPartial({})),\n            VotingParams: getStructure(VotingParams.fromPartial({})),\n            TallyParams: getStructure(TallyParams.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getProposal: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposal[JSON.stringify(params)] ?? {};\n        },\n        getProposals: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Proposals[JSON.stringify(params)] ?? {};\n        },\n        getVote: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Vote[JSON.stringify(params)] ?? {};\n        },\n        getVotes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Votes[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDeposit: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposit[JSON.stringify(params)] ?? {};\n        },\n        getDeposits: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Deposits[JSON.stringify(params)] ?? {};\n        },\n        getTallyResult: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TallyResult[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryProposal({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryProposal(key.proposal_id)).data;\n                commit('QUERY', { query: 'Proposal', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposal', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposal']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposal', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProposals({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProposals(query)).data : (await (await initQueryClient(rootGetters)).queryProposals()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryProposals({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Proposals', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProposals', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProposals']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProposals', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVote({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter, query)).data : (await (await initQueryClient(rootGetters)).queryVote(key.proposal_id, key.voter)).data;\n                commit('QUERY', { query: 'Vote', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVote', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVote']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVote', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryVotes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryVotes(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Votes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryVotes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getVotes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryVotes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(key.params_type, query)).data : (await (await initQueryClient(rootGetters)).queryParams(key.params_type)).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposit({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor, query)).data : (await (await initQueryClient(rootGetters)).queryDeposit(key.proposal_id, key.depositor)).data;\n                commit('QUERY', { query: 'Deposit', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposit', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposit']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposit', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDeposits({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDeposits(key.proposal_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Deposits', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDeposits', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDeposits']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDeposits', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTallyResult({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id, query)).data : (await (await initQueryClient(rootGetters)).queryTallyResult(key.proposal_id)).data;\n                commit('QUERY', { query: 'TallyResult', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTallyResult', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTallyResult']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTallyResult', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgSubmitProposal({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeposit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgVote({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgSubmitProposal({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitProposal(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitProposal:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeposit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeposit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeposit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeposit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgVote({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgVote(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgVote:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgVote:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/v1beta1/coin.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\nimport { Coin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecCoin } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { IntProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nimport { DecProto } from \"./module/types/cosmos/base/v1beta1/coin\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            Coin: getStructure(Coin.fromPartial({})),\n            DecCoin: getStructure(DecCoin.fromPartial({})),\n            IntProto: getStructure(IntProto.fromPartial({})),\n            DecProto: getStructure(DecProto.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* BondStatus is the status of a validator.\n\n - BOND_STATUS_UNSPECIFIED: UNSPECIFIED defines an invalid validator status.\n - BOND_STATUS_UNBONDED: UNBONDED defines a validator that is not bonded.\n - BOND_STATUS_UNBONDING: UNBONDING defines a validator that is unbonding.\n - BOND_STATUS_BONDED: BONDED defines a validator that is bonded.\n*/\nexport var V1Beta1BondStatus;\n(function (V1Beta1BondStatus) {\n    V1Beta1BondStatus[\"BOND_STATUS_UNSPECIFIED\"] = \"BOND_STATUS_UNSPECIFIED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDED\"] = \"BOND_STATUS_UNBONDED\";\n    V1Beta1BondStatus[\"BOND_STATUS_UNBONDING\"] = \"BOND_STATUS_UNBONDING\";\n    V1Beta1BondStatus[\"BOND_STATUS_BONDED\"] = \"BOND_STATUS_BONDED\";\n})(V1Beta1BondStatus || (V1Beta1BondStatus = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/staking/v1beta1/staking.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorDelegations\n         * @summary DelegatorDelegations queries all delegations of a given delegator address.\n         * @request GET:/cosmos/staking/v1beta1/delegations/{delegatorAddr}\n         */\n        this.queryDelegatorDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryRedelegations\n         * @summary Redelegations queries redelegations of given address.\n         * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/redelegations\n         */\n        this.queryRedelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/redelegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorUnbondingDelegations\n       * @summary DelegatorUnbondingDelegations queries all unbonding delegations of a given\n      delegator address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/unbonding_delegations\n       */\n        this.queryDelegatorUnbondingDelegations = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidators\n       * @summary DelegatorValidators queries all validators info for given delegator\n      address.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators\n       */\n        this.queryDelegatorValidators = (delegatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegatorValidator\n       * @summary DelegatorValidator queries validator info for given delegator validator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/delegators/{delegatorAddr}/validators/{validatorAddr}\n       */\n        this.queryDelegatorValidator = (delegatorAddr, validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/delegators/${delegatorAddr}/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryHistoricalInfo\n         * @summary HistoricalInfo queries the historical info for given height.\n         * @request GET:/cosmos/staking/v1beta1/historical_info/{height}\n         */\n        this.queryHistoricalInfo = (height, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/historical_info/${height}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Parameters queries the staking parameters.\n         * @request GET:/cosmos/staking/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPool\n         * @summary Pool queries the pool info.\n         * @request GET:/cosmos/staking/v1beta1/pool\n         */\n        this.queryPool = (params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidators\n         * @summary Validators queries all validators that match the given status.\n         * @request GET:/cosmos/staking/v1beta1/validators\n         */\n        this.queryValidators = (query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidator\n         * @summary Validator queries validator info for given validator address.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}\n         */\n        this.queryValidator = (validatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorDelegations\n         * @summary ValidatorDelegations queries delegate info for given validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations\n         */\n        this.queryValidatorDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegation\n         * @summary Delegation queries delegate info for given validator delegator pair.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}\n         */\n        this.queryDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnbondingDelegation\n       * @summary UnbondingDelegation queries unbonding info for given validator delegator\n      pair.\n       * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/delegations/{delegatorAddr}/unbonding_delegation\n       */\n        this.queryUnbondingDelegation = (validatorAddr, delegatorAddr, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/delegations/${delegatorAddr}/unbonding_delegation`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorUnbondingDelegations\n         * @summary ValidatorUnbondingDelegations queries unbonding delegations of a validator.\n         * @request GET:/cosmos/staking/v1beta1/validators/{validatorAddr}/unbonding_delegations\n         */\n        this.queryValidatorUnbondingDelegations = (validatorAddr, query, params = {}) => this.request({\n            path: `/cosmos/staking/v1beta1/validators/${validatorAddr}/unbonding_delegations`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport { Description, CommissionRates, } from \"../../../cosmos/staking/v1beta1/staking\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseMsgCreateValidator = {\n    minSelfDelegation: \"\",\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgCreateValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commission !== undefined) {\n            CommissionRates.encode(message.commission, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(26).string(message.minSelfDelegation);\n        }\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(34).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(42).string(message.validatorAddress);\n        }\n        if (message.pubkey !== undefined) {\n            Any.encode(message.pubkey, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.value !== undefined) {\n            Coin.encode(message.value, writer.uint32(58).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgCreateValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commission = CommissionRates.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                case 4:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 5:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 6:\n                    message.pubkey = Any.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.value = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromJSON(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromJSON(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromJSON(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.commission !== undefined &&\n            (obj.commission = message.commission\n                ? CommissionRates.toJSON(message.commission)\n                : undefined);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.pubkey !== undefined &&\n            (obj.pubkey = message.pubkey ? Any.toJSON(message.pubkey) : undefined);\n        message.value !== undefined &&\n            (obj.value = message.value ? Coin.toJSON(message.value) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgCreateValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.commission !== undefined && object.commission !== null) {\n            message.commission = CommissionRates.fromPartial(object.commission);\n        }\n        else {\n            message.commission = undefined;\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.pubkey !== undefined && object.pubkey !== null) {\n            message.pubkey = Any.fromPartial(object.pubkey);\n        }\n        else {\n            message.pubkey = undefined;\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = Coin.fromPartial(object.value);\n        }\n        else {\n            message.value = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateValidatorResponse = {};\nexport const MsgCreateValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgEditValidator = {\n    validatorAddress: \"\",\n    commissionRate: \"\",\n    minSelfDelegation: \"\",\n};\nexport const MsgEditValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== undefined) {\n            Description.encode(message.description, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.commissionRate !== \"\") {\n            writer.uint32(26).string(message.commissionRate);\n        }\n        if (message.minSelfDelegation !== \"\") {\n            writer.uint32(34).string(message.minSelfDelegation);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgEditValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = Description.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.commissionRate = reader.string();\n                    break;\n                case 4:\n                    message.minSelfDelegation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromJSON(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = String(object.commissionRate);\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = String(object.minSelfDelegation);\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description\n                ? Description.toJSON(message.description)\n                : undefined);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.commissionRate !== undefined &&\n            (obj.commissionRate = message.commissionRate);\n        message.minSelfDelegation !== undefined &&\n            (obj.minSelfDelegation = message.minSelfDelegation);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgEditValidator };\n        if (object.description !== undefined && object.description !== null) {\n            message.description = Description.fromPartial(object.description);\n        }\n        else {\n            message.description = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.commissionRate !== undefined && object.commissionRate !== null) {\n            message.commissionRate = object.commissionRate;\n        }\n        else {\n            message.commissionRate = \"\";\n        }\n        if (object.minSelfDelegation !== undefined &&\n            object.minSelfDelegation !== null) {\n            message.minSelfDelegation = object.minSelfDelegation;\n        }\n        else {\n            message.minSelfDelegation = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgEditValidatorResponse = {};\nexport const MsgEditValidatorResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgEditValidatorResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgDelegate = { delegatorAddress: \"\", validatorAddress: \"\" };\nexport const MsgDelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgDelegateResponse = {};\nexport const MsgDelegateResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDelegateResponse };\n        return message;\n    },\n};\nconst baseMsgBeginRedelegate = {\n    delegatorAddress: \"\",\n    validatorSrcAddress: \"\",\n    validatorDstAddress: \"\",\n};\nexport const MsgBeginRedelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorSrcAddress !== \"\") {\n            writer.uint32(18).string(message.validatorSrcAddress);\n        }\n        if (message.validatorDstAddress !== \"\") {\n            writer.uint32(26).string(message.validatorDstAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgBeginRedelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorSrcAddress = reader.string();\n                    break;\n                case 3:\n                    message.validatorDstAddress = reader.string();\n                    break;\n                case 4:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = String(object.validatorSrcAddress);\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = String(object.validatorDstAddress);\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorSrcAddress !== undefined &&\n            (obj.validatorSrcAddress = message.validatorSrcAddress);\n        message.validatorDstAddress !== undefined &&\n            (obj.validatorDstAddress = message.validatorDstAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgBeginRedelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorSrcAddress !== undefined &&\n            object.validatorSrcAddress !== null) {\n            message.validatorSrcAddress = object.validatorSrcAddress;\n        }\n        else {\n            message.validatorSrcAddress = \"\";\n        }\n        if (object.validatorDstAddress !== undefined &&\n            object.validatorDstAddress !== null) {\n            message.validatorDstAddress = object.validatorDstAddress;\n        }\n        else {\n            message.validatorDstAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgBeginRedelegateResponse = {};\nexport const MsgBeginRedelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgBeginRedelegateResponse,\n        };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegate = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgUndelegate = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.amount !== undefined) {\n            Coin.encode(message.amount, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegate };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount = Coin.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromJSON(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.amount !== undefined &&\n            (obj.amount = message.amount ? Coin.toJSON(message.amount) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegate };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Coin.fromPartial(object.amount);\n        }\n        else {\n            message.amount = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgUndelegateResponse = {};\nexport const MsgUndelegateResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.completionTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.completionTime), writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUndelegateResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.completionTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = fromJsonTimestamp(object.completionTime);\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.completionTime !== undefined &&\n            (obj.completionTime =\n                message.completionTime !== undefined\n                    ? message.completionTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUndelegateResponse };\n        if (object.completionTime !== undefined && object.completionTime !== null) {\n            message.completionTime = object.completionTime;\n        }\n        else {\n            message.completionTime = undefined;\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateValidator(request) {\n        const data = MsgCreateValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"CreateValidator\", data);\n        return promise.then((data) => MsgCreateValidatorResponse.decode(new Reader(data)));\n    }\n    EditValidator(request) {\n        const data = MsgEditValidator.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"EditValidator\", data);\n        return promise.then((data) => MsgEditValidatorResponse.decode(new Reader(data)));\n    }\n    Delegate(request) {\n        const data = MsgDelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Delegate\", data);\n        return promise.then((data) => MsgDelegateResponse.decode(new Reader(data)));\n    }\n    BeginRedelegate(request) {\n        const data = MsgBeginRedelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"BeginRedelegate\", data);\n        return promise.then((data) => MsgBeginRedelegateResponse.decode(new Reader(data)));\n    }\n    Undelegate(request) {\n        const data = MsgUndelegate.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.staking.v1beta1.Msg\", \"Undelegate\", data);\n        return promise.then((data) => MsgUndelegateResponse.decode(new Reader(data)));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgEditValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgCreateValidator } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgUndelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nimport { MsgBeginRedelegate } from \"./types/cosmos/staking/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.staking.v1beta1.MsgDelegate\", MsgDelegate],\n    [\"/cosmos.staking.v1beta1.MsgEditValidator\", MsgEditValidator],\n    [\"/cosmos.staking.v1beta1.MsgCreateValidator\", MsgCreateValidator],\n    [\"/cosmos.staking.v1beta1.MsgUndelegate\", MsgUndelegate],\n    [\"/cosmos.staking.v1beta1.MsgBeginRedelegate\", MsgBeginRedelegate],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgDelegate\", value: data }),\n        msgEditValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgEditValidator\", value: data }),\n        msgCreateValidator: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgCreateValidator\", value: data }),\n        msgUndelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgUndelegate\", value: data }),\n        msgBeginRedelegate: (data) => ({ typeUrl: \"/cosmos.staking.v1beta1.MsgBeginRedelegate\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { HistoricalInfo } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { CommissionRates } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Commission } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Description } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Validator } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { ValAddresses } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPair } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVPairs } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplet } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DVVTriplets } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Delegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { UnbondingDelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntry } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Redelegation } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Params } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { DelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationEntryResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { RedelegationResponse } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { Pool } from \"./module/types/cosmos/staking/v1beta1/staking\";\nimport { LastValidatorPower } from \"./module/types/cosmos/staking/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Validators: {},\n        Validator: {},\n        ValidatorDelegations: {},\n        ValidatorUnbondingDelegations: {},\n        Delegation: {},\n        UnbondingDelegation: {},\n        DelegatorDelegations: {},\n        DelegatorUnbondingDelegations: {},\n        Redelegations: {},\n        DelegatorValidators: {},\n        DelegatorValidator: {},\n        HistoricalInfo: {},\n        Pool: {},\n        Params: {},\n        _Structure: {\n            HistoricalInfo: getStructure(HistoricalInfo.fromPartial({})),\n            CommissionRates: getStructure(CommissionRates.fromPartial({})),\n            Commission: getStructure(Commission.fromPartial({})),\n            Description: getStructure(Description.fromPartial({})),\n            Validator: getStructure(Validator.fromPartial({})),\n            ValAddresses: getStructure(ValAddresses.fromPartial({})),\n            DVPair: getStructure(DVPair.fromPartial({})),\n            DVPairs: getStructure(DVPairs.fromPartial({})),\n            DVVTriplet: getStructure(DVVTriplet.fromPartial({})),\n            DVVTriplets: getStructure(DVVTriplets.fromPartial({})),\n            Delegation: getStructure(Delegation.fromPartial({})),\n            UnbondingDelegation: getStructure(UnbondingDelegation.fromPartial({})),\n            UnbondingDelegationEntry: getStructure(UnbondingDelegationEntry.fromPartial({})),\n            RedelegationEntry: getStructure(RedelegationEntry.fromPartial({})),\n            Redelegation: getStructure(Redelegation.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            DelegationResponse: getStructure(DelegationResponse.fromPartial({})),\n            RedelegationEntryResponse: getStructure(RedelegationEntryResponse.fromPartial({})),\n            RedelegationResponse: getStructure(RedelegationResponse.fromPartial({})),\n            Pool: getStructure(Pool.fromPartial({})),\n            LastValidatorPower: getStructure(LastValidatorPower.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validators[JSON.stringify(params)] ?? {};\n        },\n        getValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Validator[JSON.stringify(params)] ?? {};\n        },\n        getValidatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getValidatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Delegation[JSON.stringify(params)] ?? {};\n        },\n        getUnbondingDelegation: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnbondingDelegation[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorDelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorUnbondingDelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorUnbondingDelegations[JSON.stringify(params)] ?? {};\n        },\n        getRedelegations: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Redelegations[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidator: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidator[JSON.stringify(params)] ?? {};\n        },\n        getHistoricalInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.HistoricalInfo[JSON.stringify(params)] ?? {};\n        },\n        getPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Pool[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidators(query)).data : (await (await initQueryClient(rootGetters)).queryValidators()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidators({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Validators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidator(key.validator_addr)).data;\n                commit('QUERY', { query: 'Validator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorUnbondingDelegations(key.validator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'Delegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnbondingDelegation({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryUnbondingDelegation(key.validator_addr, key.delegator_addr)).data;\n                commit('QUERY', { query: 'UnbondingDelegation', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnbondingDelegation', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnbondingDelegation']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnbondingDelegation', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorUnbondingDelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorUnbondingDelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorUnbondingDelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorUnbondingDelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorUnbondingDelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorUnbondingDelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryRedelegations({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryRedelegations(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Redelegations', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryRedelegations', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getRedelegations']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryRedelegations', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_addr, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidator({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidator(key.delegator_addr, key.validator_addr)).data;\n                commit('QUERY', { query: 'DelegatorValidator', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidator', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidator']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidator', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryHistoricalInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height, query)).data : (await (await initQueryClient(rootGetters)).queryHistoricalInfo(key.height)).data;\n                commit('QUERY', { query: 'HistoricalInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryHistoricalInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getHistoricalInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryHistoricalInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPool(query)).data : (await (await initQueryClient(rootGetters)).queryPool()).data;\n                commit('QUERY', { query: 'Pool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgEditValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateValidator({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUndelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgBeginRedelegate({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgEditValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgEditValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgEditValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateValidator({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateValidator(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateValidator:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUndelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUndelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUndelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgBeginRedelegate({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgBeginRedelegate(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgBeginRedelegate:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/distribution/v1beta1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryCommunityPool\n         * @summary CommunityPool queries the community pool coins.\n         * @request GET:/cosmos/distribution/v1beta1/community_pool\n         */\n        this.queryCommunityPool = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/community_pool`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryDelegationTotalRewards\n       * @summary DelegationTotalRewards queries the total rewards accrued by a each\n      validator.\n       * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards\n       */\n        this.queryDelegationTotalRewards = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegationRewards\n         * @summary DelegationRewards queries the total rewards accrued by a delegation.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/rewards/{validatorAddress}\n         */\n        this.queryDelegationRewards = (delegatorAddress, validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/rewards/${validatorAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorValidators\n         * @summary DelegatorValidators queries the validators of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/validators\n         */\n        this.queryDelegatorValidators = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/validators`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDelegatorWithdrawAddress\n         * @summary DelegatorWithdrawAddress queries withdraw address of a delegator.\n         * @request GET:/cosmos/distribution/v1beta1/delegators/{delegatorAddress}/withdraw_address\n         */\n        this.queryDelegatorWithdrawAddress = (delegatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/delegators/${delegatorAddress}/withdraw_address`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries params of the distribution module.\n         * @request GET:/cosmos/distribution/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorCommission\n         * @summary ValidatorCommission queries accumulated commission for a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/commission\n         */\n        this.queryValidatorCommission = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/commission`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorOutstandingRewards\n         * @summary ValidatorOutstandingRewards queries rewards of a validator address.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/outstanding_rewards\n         */\n        this.queryValidatorOutstandingRewards = (validatorAddress, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/outstanding_rewards`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryValidatorSlashes\n         * @summary ValidatorSlashes queries slash events of a validator.\n         * @request GET:/cosmos/distribution/v1beta1/validators/{validatorAddress}/slashes\n         */\n        this.queryValidatorSlashes = (validatorAddress, query, params = {}) => this.request({\n            path: `/cosmos/distribution/v1beta1/validators/${validatorAddress}/slashes`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseMsgSetWithdrawAddress = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const MsgSetWithdrawAddress = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSetWithdrawAddress };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSetWithdrawAddress };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSetWithdrawAddressResponse = {};\nexport const MsgSetWithdrawAddressResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgSetWithdrawAddressResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorReward = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const MsgWithdrawDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawDelegatorReward,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawDelegatorRewardResponse = {};\nexport const MsgWithdrawDelegatorRewardResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawDelegatorRewardResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommission = { validatorAddress: \"\" };\nexport const MsgWithdrawValidatorCommission = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommission,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgWithdrawValidatorCommissionResponse = {};\nexport const MsgWithdrawValidatorCommissionResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgWithdrawValidatorCommissionResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgFundCommunityPool = { depositor: \"\" };\nexport const MsgFundCommunityPool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgFundCommunityPool };\n        message.amount = [];\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgFundCommunityPoolResponse = {};\nexport const MsgFundCommunityPoolResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgFundCommunityPoolResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SetWithdrawAddress(request) {\n        const data = MsgSetWithdrawAddress.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"SetWithdrawAddress\", data);\n        return promise.then((data) => MsgSetWithdrawAddressResponse.decode(new Reader(data)));\n    }\n    WithdrawDelegatorReward(request) {\n        const data = MsgWithdrawDelegatorReward.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawDelegatorReward\", data);\n        return promise.then((data) => MsgWithdrawDelegatorRewardResponse.decode(new Reader(data)));\n    }\n    WithdrawValidatorCommission(request) {\n        const data = MsgWithdrawValidatorCommission.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"WithdrawValidatorCommission\", data);\n        return promise.then((data) => MsgWithdrawValidatorCommissionResponse.decode(new Reader(data)));\n    }\n    FundCommunityPool(request) {\n        const data = MsgFundCommunityPool.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.distribution.v1beta1.Msg\", \"FundCommunityPool\", data);\n        return promise.then((data) => MsgFundCommunityPoolResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgFundCommunityPool } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawValidatorCommission } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgWithdrawDelegatorReward } from \"./types/cosmos/distribution/v1beta1/tx\";\nimport { MsgSetWithdrawAddress } from \"./types/cosmos/distribution/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", MsgFundCommunityPool],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", MsgWithdrawValidatorCommission],\n    [\"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", MsgWithdrawDelegatorReward],\n    [\"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", MsgSetWithdrawAddress],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgFundCommunityPool: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgFundCommunityPool\", value: data }),\n        msgWithdrawValidatorCommission: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawValidatorCommission\", value: data }),\n        msgWithdrawDelegatorReward: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgWithdrawDelegatorReward\", value: data }),\n        msgSetWithdrawAddress: (data) => ({ typeUrl: \"/cosmos.distribution.v1beta1.MsgSetWithdrawAddress\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorHistoricalRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorCurrentRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorAccumulatedCommission } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorOutstandingRewards } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvent } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { ValidatorSlashEvents } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { FeePool } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposal } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorStartingInfo } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegationDelegatorReward } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { CommunityPoolSpendProposalWithDeposit } from \"./module/types/cosmos/distribution/v1beta1/distribution\";\nimport { DelegatorWithdrawInfo } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorOutstandingRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorAccumulatedCommissionRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorHistoricalRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorCurrentRewardsRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { DelegatorStartingInfoRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nimport { ValidatorSlashEventRecord } from \"./module/types/cosmos/distribution/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        ValidatorOutstandingRewards: {},\n        ValidatorCommission: {},\n        ValidatorSlashes: {},\n        DelegationRewards: {},\n        DelegationTotalRewards: {},\n        DelegatorValidators: {},\n        DelegatorWithdrawAddress: {},\n        CommunityPool: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            ValidatorHistoricalRewards: getStructure(ValidatorHistoricalRewards.fromPartial({})),\n            ValidatorCurrentRewards: getStructure(ValidatorCurrentRewards.fromPartial({})),\n            ValidatorAccumulatedCommission: getStructure(ValidatorAccumulatedCommission.fromPartial({})),\n            ValidatorOutstandingRewards: getStructure(ValidatorOutstandingRewards.fromPartial({})),\n            ValidatorSlashEvent: getStructure(ValidatorSlashEvent.fromPartial({})),\n            ValidatorSlashEvents: getStructure(ValidatorSlashEvents.fromPartial({})),\n            FeePool: getStructure(FeePool.fromPartial({})),\n            CommunityPoolSpendProposal: getStructure(CommunityPoolSpendProposal.fromPartial({})),\n            DelegatorStartingInfo: getStructure(DelegatorStartingInfo.fromPartial({})),\n            DelegationDelegatorReward: getStructure(DelegationDelegatorReward.fromPartial({})),\n            CommunityPoolSpendProposalWithDeposit: getStructure(CommunityPoolSpendProposalWithDeposit.fromPartial({})),\n            DelegatorWithdrawInfo: getStructure(DelegatorWithdrawInfo.fromPartial({})),\n            ValidatorOutstandingRewardsRecord: getStructure(ValidatorOutstandingRewardsRecord.fromPartial({})),\n            ValidatorAccumulatedCommissionRecord: getStructure(ValidatorAccumulatedCommissionRecord.fromPartial({})),\n            ValidatorHistoricalRewardsRecord: getStructure(ValidatorHistoricalRewardsRecord.fromPartial({})),\n            ValidatorCurrentRewardsRecord: getStructure(ValidatorCurrentRewardsRecord.fromPartial({})),\n            DelegatorStartingInfoRecord: getStructure(DelegatorStartingInfoRecord.fromPartial({})),\n            ValidatorSlashEventRecord: getStructure(ValidatorSlashEventRecord.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getValidatorOutstandingRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorOutstandingRewards[JSON.stringify(params)] ?? {};\n        },\n        getValidatorCommission: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorCommission[JSON.stringify(params)] ?? {};\n        },\n        getValidatorSlashes: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ValidatorSlashes[JSON.stringify(params)] ?? {};\n        },\n        getDelegationRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegationTotalRewards: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegationTotalRewards[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorValidators: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorValidators[JSON.stringify(params)] ?? {};\n        },\n        getDelegatorWithdrawAddress: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DelegatorWithdrawAddress[JSON.stringify(params)] ?? {};\n        },\n        getCommunityPool: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.CommunityPool[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorOutstandingRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorOutstandingRewards(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorOutstandingRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorOutstandingRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorOutstandingRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorOutstandingRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorCommission({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorCommission(key.validator_address)).data;\n                commit('QUERY', { query: 'ValidatorCommission', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorCommission', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorCommission']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorCommission', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryValidatorSlashes({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryValidatorSlashes(key.validator_address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ValidatorSlashes', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryValidatorSlashes', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getValidatorSlashes']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryValidatorSlashes', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationRewards(key.delegator_address, key.validator_address)).data;\n                commit('QUERY', { query: 'DelegationRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegationTotalRewards({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegationTotalRewards(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegationTotalRewards', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegationTotalRewards', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegationTotalRewards']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegationTotalRewards', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorValidators({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorValidators(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorValidators', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorValidators', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorValidators']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorValidators', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDelegatorWithdrawAddress({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address, query)).data : (await (await initQueryClient(rootGetters)).queryDelegatorWithdrawAddress(key.delegator_address)).data;\n                commit('QUERY', { query: 'DelegatorWithdrawAddress', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDelegatorWithdrawAddress', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDelegatorWithdrawAddress']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDelegatorWithdrawAddress', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryCommunityPool({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryCommunityPool(query)).data : (await (await initQueryClient(rootGetters)).queryCommunityPool()).data;\n                commit('QUERY', { query: 'CommunityPool', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryCommunityPool', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getCommunityPool']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryCommunityPool', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgFundCommunityPool({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawValidatorCommission({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgWithdrawDelegatorReward({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSetWithdrawAddress({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgFundCommunityPool({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgFundCommunityPool(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgFundCommunityPool:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawValidatorCommission({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawValidatorCommission(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawValidatorCommission:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgWithdrawDelegatorReward({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgWithdrawDelegatorReward(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgWithdrawDelegatorReward:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSetWithdrawAddress({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSetWithdrawAddress(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSetWithdrawAddress:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/bank/v1beta1/bank.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllBalances\n         * @summary AllBalances queries the balance of all coins for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}\n         */\n        this.queryAllBalances = (address, query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryBalance\n         * @summary Balance queries the balance of a single coin for a single account.\n         * @request GET:/cosmos/bank/v1beta1/balances/{address}/{denom}\n         */\n        this.queryBalance = (address, denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/balances/${address}/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomsMetadata\n         * @summary DenomsMetadata queries the client metadata for all registered coin denominations.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata\n         */\n        this.queryDenomsMetadata = (query, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomMetadata\n         * @summary DenomsMetadata queries the client metadata of a given coin denomination.\n         * @request GET:/cosmos/bank/v1beta1/denoms_metadata/{denom}\n         */\n        this.queryDenomMetadata = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/denoms_metadata/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of x/bank module.\n         * @request GET:/cosmos/bank/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryTotalSupply\n         * @summary TotalSupply queries the total supply of all coins.\n         * @request GET:/cosmos/bank/v1beta1/supply\n         */\n        this.queryTotalSupply = (params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySupplyOf\n         * @summary SupplyOf queries the supply of a single coin.\n         * @request GET:/cosmos/bank/v1beta1/supply/{denom}\n         */\n        this.querySupplyOf = (denom, params = {}) => this.request({\n            path: `/cosmos/bank/v1beta1/supply/${denom}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseParams = { defaultSendEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.sendEnabled) {\n            SendEnabled.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.defaultSendEnabled === true) {\n            writer.uint32(16).bool(message.defaultSendEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled.push(SendEnabled.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.defaultSendEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromJSON(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = Boolean(object.defaultSendEnabled);\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.sendEnabled) {\n            obj.sendEnabled = message.sendEnabled.map((e) => e ? SendEnabled.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendEnabled = [];\n        }\n        message.defaultSendEnabled !== undefined &&\n            (obj.defaultSendEnabled = message.defaultSendEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.sendEnabled = [];\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            for (const e of object.sendEnabled) {\n                message.sendEnabled.push(SendEnabled.fromPartial(e));\n            }\n        }\n        if (object.defaultSendEnabled !== undefined &&\n            object.defaultSendEnabled !== null) {\n            message.defaultSendEnabled = object.defaultSendEnabled;\n        }\n        else {\n            message.defaultSendEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseSendEnabled = { denom: \"\", enabled: false };\nexport const SendEnabled = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.enabled === true) {\n            writer.uint32(16).bool(message.enabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSendEnabled };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.enabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = Boolean(object.enabled);\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.enabled !== undefined && (obj.enabled = message.enabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSendEnabled };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.enabled !== undefined && object.enabled !== null) {\n            message.enabled = object.enabled;\n        }\n        else {\n            message.enabled = false;\n        }\n        return message;\n    },\n};\nconst baseInput = { address: \"\" };\nexport const Input = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseOutput = { address: \"\" };\nexport const Output = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOutput };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOutput };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSupply = {};\nexport const Supply = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.total) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSupply };\n        message.total = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.total) {\n            obj.total = message.total.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.total = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSupply };\n        message.total = [];\n        if (object.total !== undefined && object.total !== null) {\n            for (const e of object.total) {\n                message.total.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDenomUnit = { denom: \"\", exponent: 0, aliases: \"\" };\nexport const DenomUnit = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.exponent !== 0) {\n            writer.uint32(16).uint32(message.exponent);\n        }\n        for (const v of message.aliases) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.exponent = reader.uint32();\n                    break;\n                case 3:\n                    message.aliases.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = Number(object.exponent);\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.exponent !== undefined && (obj.exponent = message.exponent);\n        if (message.aliases) {\n            obj.aliases = message.aliases.map((e) => e);\n        }\n        else {\n            obj.aliases = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomUnit };\n        message.aliases = [];\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.exponent !== undefined && object.exponent !== null) {\n            message.exponent = object.exponent;\n        }\n        else {\n            message.exponent = 0;\n        }\n        if (object.aliases !== undefined && object.aliases !== null) {\n            for (const e of object.aliases) {\n                message.aliases.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMetadata = { description: \"\", base: \"\", display: \"\" };\nexport const Metadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.description !== \"\") {\n            writer.uint32(10).string(message.description);\n        }\n        for (const v of message.denomUnits) {\n            DenomUnit.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.base !== \"\") {\n            writer.uint32(26).string(message.base);\n        }\n        if (message.display !== \"\") {\n            writer.uint32(34).string(message.display);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.description = reader.string();\n                    break;\n                case 2:\n                    message.denomUnits.push(DenomUnit.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.base = reader.string();\n                    break;\n                case 4:\n                    message.display = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromJSON(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = String(object.base);\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = String(object.display);\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.description !== undefined &&\n            (obj.description = message.description);\n        if (message.denomUnits) {\n            obj.denomUnits = message.denomUnits.map((e) => e ? DenomUnit.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomUnits = [];\n        }\n        message.base !== undefined && (obj.base = message.base);\n        message.display !== undefined && (obj.display = message.display);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMetadata };\n        message.denomUnits = [];\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.denomUnits !== undefined && object.denomUnits !== null) {\n            for (const e of object.denomUnits) {\n                message.denomUnits.push(DenomUnit.fromPartial(e));\n            }\n        }\n        if (object.base !== undefined && object.base !== null) {\n            message.base = object.base;\n        }\n        else {\n            message.base = \"\";\n        }\n        if (object.display !== undefined && object.display !== null) {\n            message.display = object.display;\n        }\n        else {\n            message.display = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Input, Output } from \"../../../cosmos/bank/v1beta1/bank\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseMsgSend = { fromAddress: \"\", toAddress: \"\" };\nexport const MsgSend = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSend };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgSendResponse = {};\nexport const MsgSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgSendResponse };\n        return message;\n    },\n};\nconst baseMsgMultiSend = {};\nexport const MsgMultiSend = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.inputs) {\n            Input.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.outputs) {\n            Output.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.inputs.push(Input.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.outputs.push(Output.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromJSON(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.inputs) {\n            obj.inputs = message.inputs.map((e) => (e ? Input.toJSON(e) : undefined));\n        }\n        else {\n            obj.inputs = [];\n        }\n        if (message.outputs) {\n            obj.outputs = message.outputs.map((e) => e ? Output.toJSON(e) : undefined);\n        }\n        else {\n            obj.outputs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgMultiSend };\n        message.inputs = [];\n        message.outputs = [];\n        if (object.inputs !== undefined && object.inputs !== null) {\n            for (const e of object.inputs) {\n                message.inputs.push(Input.fromPartial(e));\n            }\n        }\n        if (object.outputs !== undefined && object.outputs !== null) {\n            for (const e of object.outputs) {\n                message.outputs.push(Output.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgMultiSendResponse = {};\nexport const MsgMultiSendResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgMultiSendResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgMultiSendResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Send(request) {\n        const data = MsgSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"Send\", data);\n        return promise.then((data) => MsgSendResponse.decode(new Reader(data)));\n    }\n    MultiSend(request) {\n        const data = MsgMultiSend.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.bank.v1beta1.Msg\", \"MultiSend\", data);\n        return promise.then((data) => MsgMultiSendResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgMultiSend } from \"./types/cosmos/bank/v1beta1/tx\";\nimport { MsgSend } from \"./types/cosmos/bank/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.bank.v1beta1.MsgMultiSend\", MsgMultiSend],\n    [\"/cosmos.bank.v1beta1.MsgSend\", MsgSend],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgMultiSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgMultiSend\", value: data }),\n        msgSend: (data) => ({ typeUrl: \"/cosmos.bank.v1beta1.MsgSend\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","/* eslint-disable */\nimport { Params, Metadata } from \"../../../cosmos/bank/v1beta1/bank\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.bank.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.balances) {\n            Balance.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.supply) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.denomMetadata) {\n            Metadata.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.balances.push(Balance.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.supply.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.denomMetadata.push(Metadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromJSON(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.balances) {\n            obj.balances = message.balances.map((e) => e ? Balance.toJSON(e) : undefined);\n        }\n        else {\n            obj.balances = [];\n        }\n        if (message.supply) {\n            obj.supply = message.supply.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.supply = [];\n        }\n        if (message.denomMetadata) {\n            obj.denomMetadata = message.denomMetadata.map((e) => e ? Metadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.denomMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.balances = [];\n        message.supply = [];\n        message.denomMetadata = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.balances !== undefined && object.balances !== null) {\n            for (const e of object.balances) {\n                message.balances.push(Balance.fromPartial(e));\n            }\n        }\n        if (object.supply !== undefined && object.supply !== null) {\n            for (const e of object.supply) {\n                message.supply.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.denomMetadata !== undefined && object.denomMetadata !== null) {\n            for (const e of object.denomMetadata) {\n                message.denomMetadata.push(Metadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBalance = { address: \"\" };\nexport const Balance = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.coins) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBalance };\n        message.coins = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.coins.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.coins) {\n            obj.coins = message.coins.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.coins = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBalance };\n        message.coins = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.coins !== undefined && object.coins !== null) {\n            for (const e of object.coins) {\n                message.coins.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Params } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { SendEnabled } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Input } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Output } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Supply } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { DenomUnit } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Metadata } from \"./module/types/cosmos/bank/v1beta1/bank\";\nimport { Balance } from \"./module/types/cosmos/bank/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Balance: {},\n        AllBalances: {},\n        TotalSupply: {},\n        SupplyOf: {},\n        Params: {},\n        DenomMetadata: {},\n        DenomsMetadata: {},\n        _Structure: {\n            Params: getStructure(Params.fromPartial({})),\n            SendEnabled: getStructure(SendEnabled.fromPartial({})),\n            Input: getStructure(Input.fromPartial({})),\n            Output: getStructure(Output.fromPartial({})),\n            Supply: getStructure(Supply.fromPartial({})),\n            DenomUnit: getStructure(DenomUnit.fromPartial({})),\n            Metadata: getStructure(Metadata.fromPartial({})),\n            Balance: getStructure(Balance.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getBalance: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Balance[JSON.stringify(params)] ?? {};\n        },\n        getAllBalances: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllBalances[JSON.stringify(params)] ?? {};\n        },\n        getTotalSupply: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.TotalSupply[JSON.stringify(params)] ?? {};\n        },\n        getSupplyOf: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SupplyOf[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getDenomMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomMetadata[JSON.stringify(params)] ?? {};\n        },\n        getDenomsMetadata: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomsMetadata[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryBalance({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryBalance(key.address, key.denom)).data;\n                commit('QUERY', { query: 'Balance', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryBalance', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getBalance']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryBalance', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllBalances({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, query)).data : (await (await initQueryClient(rootGetters)).queryAllBalances(key.address)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryAllBalances(key.address, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'AllBalances', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllBalances', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllBalances']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllBalances', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryTotalSupply({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryTotalSupply(query)).data : (await (await initQueryClient(rootGetters)).queryTotalSupply()).data;\n                commit('QUERY', { query: 'TotalSupply', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryTotalSupply', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getTotalSupply']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryTotalSupply', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySupplyOf({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom, query)).data : (await (await initQueryClient(rootGetters)).querySupplyOf(key.denom)).data;\n                commit('QUERY', { query: 'SupplyOf', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySupplyOf', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSupplyOf']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySupplyOf', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom, query)).data : (await (await initQueryClient(rootGetters)).queryDenomMetadata(key.denom)).data;\n                commit('QUERY', { query: 'DenomMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomsMetadata({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomsMetadata(query)).data : (await (await initQueryClient(rootGetters)).queryDenomsMetadata()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomsMetadata({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomsMetadata', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomsMetadata', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomsMetadata']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomsMetadata', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgMultiSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSend({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgMultiSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgMultiSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgMultiSend:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSend({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSend(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSend:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSend:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* State defines if a connection is in one of the following states:\nINIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A connection end has just started the opening handshake.\n - STATE_TRYOPEN: A connection end has acknowledged the handshake step on the counterparty\nchain.\n - STATE_OPEN: A connection end has completed the handshake.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/connection/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryClientConnections\n       * @summary ClientConnections queries the connection paths associated with a client\n      state.\n       * @request GET:/ibc/core/connection/v1beta1/client_connections/{clientId}\n       */\n        this.queryClientConnections = (clientId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/client_connections/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnections\n         * @summary Connections queries all the IBC connections of a chain.\n         * @request GET:/ibc/core/connection/v1beta1/connections\n         */\n        this.queryConnections = (query, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryConnection\n         * @summary Connection queries an IBC connection end.\n         * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}\n         */\n        this.queryConnection = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionClientState\n       * @summary ConnectionClientState queries the client state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/client_state\n       */\n        this.queryConnectionClientState = (connectionId, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionConsensusState\n       * @summary ConnectionConsensusState queries the consensus state associated with the\n      connection.\n       * @request GET:/ibc/core/connection/v1beta1/connections/{connectionId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConnectionConsensusState = (connectionId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/connection/v1beta1/connections/${connectionId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgConnectionOpenAck } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenConfirm } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenInit } from \"./types/ibc/core/connection/v1/tx\";\nimport { MsgConnectionOpenTry } from \"./types/ibc/core/connection/v1/tx\";\nconst types = [\n    [\"/ibc.core.connection.v1.MsgConnectionOpenAck\", MsgConnectionOpenAck],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", MsgConnectionOpenConfirm],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenInit\", MsgConnectionOpenInit],\n    [\"/ibc.core.connection.v1.MsgConnectionOpenTry\", MsgConnectionOpenTry],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgConnectionOpenAck: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenAck\", value: data }),\n        msgConnectionOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenConfirm\", value: data }),\n        msgConnectionOpenInit: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenInit\", value: data }),\n        msgConnectionOpenTry: (data) => ({ typeUrl: \"/ibc.core.connection.v1.MsgConnectionOpenTry\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ConnectionEnd } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { IdentifiedConnection } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Counterparty } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ClientPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { ConnectionPaths } from \"./module/types/ibc/core/connection/v1/connection\";\nimport { Version } from \"./module/types/ibc/core/connection/v1/connection\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Connection: {},\n        Connections: {},\n        ClientConnections: {},\n        ConnectionClientState: {},\n        ConnectionConsensusState: {},\n        _Structure: {\n            ConnectionEnd: getStructure(ConnectionEnd.fromPartial({})),\n            IdentifiedConnection: getStructure(IdentifiedConnection.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            ClientPaths: getStructure(ClientPaths.fromPartial({})),\n            ConnectionPaths: getStructure(ConnectionPaths.fromPartial({})),\n            Version: getStructure(Version.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getConnection: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connection[JSON.stringify(params)] ?? {};\n        },\n        getConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Connections[JSON.stringify(params)] ?? {};\n        },\n        getClientConnections: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientConnections[JSON.stringify(params)] ?? {};\n        },\n        getConnectionClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionClientState[JSON.stringify(params)] ?? {};\n        },\n        getConnectionConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryConnection({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnection(key.connection_id)).data;\n                commit('QUERY', { query: 'Connection', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnection', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnection']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnection', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnections(query)).data : (await (await initQueryClient(rootGetters)).queryConnections()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnections({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Connections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientConnections({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientConnections(key.client_id)).data;\n                commit('QUERY', { query: 'ClientConnections', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientConnections', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientConnections']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientConnections', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionClientState(key.connection_id)).data;\n                commit('QUERY', { query: 'ConnectionClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionConsensusState(key.connection_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ConnectionConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgConnectionOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgConnectionOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgConnectionOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgConnectionOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgConnectionOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgConnectionOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/base/abci/v1beta1/abci.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nconst types = [];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\nimport { TxResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { ABCIMessageLog } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { StringEvent } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Attribute } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { GasInfo } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { Result } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SimulationResponse } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { MsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { TxMsgData } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nimport { SearchTxsResult } from \"./module/types/cosmos/base/abci/v1beta1/abci\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        _Structure: {\n            TxResponse: getStructure(TxResponse.fromPartial({})),\n            ABCIMessageLog: getStructure(ABCIMessageLog.fromPartial({})),\n            StringEvent: getStructure(StringEvent.fromPartial({})),\n            Attribute: getStructure(Attribute.fromPartial({})),\n            GasInfo: getStructure(GasInfo.fromPartial({})),\n            Result: getStructure(Result.fromPartial({})),\n            SimulationResponse: getStructure(SimulationResponse.fromPartial({})),\n            MsgData: getStructure(MsgData.fromPartial({})),\n            TxMsgData: getStructure(TxMsgData.fromPartial({})),\n            SearchTxsResult: getStructure(SearchTxsResult.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\n/**\n* - ORDER_NONE_UNSPECIFIED: zero-value for channel ordering\n - ORDER_UNORDERED: packets can be delivered in any order, which may differ from the order in\nwhich they were sent.\n - ORDER_ORDERED: packets are delivered exactly in the order which they were sent\n*/\nexport var V1Order;\n(function (V1Order) {\n    V1Order[\"ORDER_NONE_UNSPECIFIED\"] = \"ORDER_NONE_UNSPECIFIED\";\n    V1Order[\"ORDER_UNORDERED\"] = \"ORDER_UNORDERED\";\n    V1Order[\"ORDER_ORDERED\"] = \"ORDER_ORDERED\";\n})(V1Order || (V1Order = {}));\n/**\n* State defines if a channel is in one of the following states:\nCLOSED, INIT, TRYOPEN, OPEN or UNINITIALIZED.\n\n - STATE_UNINITIALIZED_UNSPECIFIED: Default State\n - STATE_INIT: A channel has just started the opening handshake.\n - STATE_TRYOPEN: A channel has acknowledged the handshake step on the counterparty chain.\n - STATE_OPEN: A channel has completed the handshake. Open channels are\nready to send and receive packets.\n - STATE_CLOSED: A channel has been closed and can no longer be used to send or receive\npackets.\n*/\nexport var V1State;\n(function (V1State) {\n    V1State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    V1State[\"STATE_INIT\"] = \"STATE_INIT\";\n    V1State[\"STATE_TRYOPEN\"] = \"STATE_TRYOPEN\";\n    V1State[\"STATE_OPEN\"] = \"STATE_OPEN\";\n    V1State[\"STATE_CLOSED\"] = \"STATE_CLOSED\";\n})(V1State || (V1State = {}));\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/channel/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannels\n         * @summary Channels queries all the IBC channels of a chain.\n         * @request GET:/ibc/core/channel/v1beta1/channels\n         */\n        this.queryChannels = (query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryChannel\n         * @summary Channel queries an IBC Channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}\n         */\n        this.queryChannel = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelClientState\n       * @summary ChannelClientState queries for the client state for the channel associated\n      with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/client_state\n       */\n        this.queryChannelClientState = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/client_state`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryChannelConsensusState\n       * @summary ChannelConsensusState queries for the consensus state for the channel\n      associated with the provided channel identifiers.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/consensus_state/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryChannelConsensusState = (channelId, portId, revisionNumber, revisionHeight, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/consensus_state/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryNextSequenceReceive\n         * @summary NextSequenceReceive returns the next receive sequence for a given channel.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/next_sequence\n         */\n        this.queryNextSequenceReceive = (channelId, portId, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/next_sequence`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketAcknowledgements\n       * @summary PacketAcknowledgements returns all the packet acknowledgements associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acknowledgements\n       */\n        this.queryPacketAcknowledgements = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acknowledgements`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketAcknowledgement\n         * @summary PacketAcknowledgement queries a stored packet acknowledgement hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_acks/{sequence}\n         */\n        this.queryPacketAcknowledgement = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_acks/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryPacketCommitments\n       * @summary PacketCommitments returns all the packet commitments hashes associated\n      with a channel.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments\n       */\n        this.queryPacketCommitments = (channelId, portId, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedAcks\n       * @summary UnreceivedAcks returns all the unreceived IBC acknowledgements associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetAckSequences}/unreceived_acks\n       */\n        this.queryUnreceivedAcks = (channelId, portId, packetAckSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetAckSequences}/unreceived_acks`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryUnreceivedPackets\n       * @summary UnreceivedPackets returns all the unreceived IBC packets associated with a\n      channel and sequences.\n       * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{packetCommitmentSequences}/unreceived_packets\n       */\n        this.queryUnreceivedPackets = (channelId, portId, packetCommitmentSequences, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${packetCommitmentSequences}/unreceived_packets`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketCommitment\n         * @summary PacketCommitment queries a stored packet commitment hash.\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_commitments/{sequence}\n         */\n        this.queryPacketCommitment = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_commitments/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPacketReceipt\n         * @summary PacketReceipt queries if a given packet sequence has been received on the queried chain\n         * @request GET:/ibc/core/channel/v1beta1/channels/{channelId}/ports/{portId}/packet_receipts/{sequence}\n         */\n        this.queryPacketReceipt = (channelId, portId, sequence, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/channels/${channelId}/ports/${portId}/packet_receipts/${sequence}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConnectionChannels\n       * @summary ConnectionChannels queries all the channels associated with a connection\n      end.\n       * @request GET:/ibc/core/channel/v1beta1/connections/{connection}/channels\n       */\n        this.queryConnectionChannels = (connection, query, params = {}) => this.request({\n            path: `/ibc/core/channel/v1beta1/connections/${connection}/channels`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgChannelOpenInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeout } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenAck } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseInit } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelCloseConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenConfirm } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgChannelOpenTry } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgRecvPacket } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgTimeoutOnClose } from \"./types/ibc/core/channel/v1/tx\";\nimport { MsgAcknowledgement } from \"./types/ibc/core/channel/v1/tx\";\nconst types = [\n    [\"/ibc.core.channel.v1.MsgChannelOpenInit\", MsgChannelOpenInit],\n    [\"/ibc.core.channel.v1.MsgTimeout\", MsgTimeout],\n    [\"/ibc.core.channel.v1.MsgChannelOpenAck\", MsgChannelOpenAck],\n    [\"/ibc.core.channel.v1.MsgChannelCloseInit\", MsgChannelCloseInit],\n    [\"/ibc.core.channel.v1.MsgChannelCloseConfirm\", MsgChannelCloseConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenConfirm\", MsgChannelOpenConfirm],\n    [\"/ibc.core.channel.v1.MsgChannelOpenTry\", MsgChannelOpenTry],\n    [\"/ibc.core.channel.v1.MsgRecvPacket\", MsgRecvPacket],\n    [\"/ibc.core.channel.v1.MsgTimeoutOnClose\", MsgTimeoutOnClose],\n    [\"/ibc.core.channel.v1.MsgAcknowledgement\", MsgAcknowledgement],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgChannelOpenInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenInit\", value: data }),\n        msgTimeout: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeout\", value: data }),\n        msgChannelOpenAck: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenAck\", value: data }),\n        msgChannelCloseInit: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseInit\", value: data }),\n        msgChannelCloseConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelCloseConfirm\", value: data }),\n        msgChannelOpenConfirm: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenConfirm\", value: data }),\n        msgChannelOpenTry: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgChannelOpenTry\", value: data }),\n        msgRecvPacket: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgRecvPacket\", value: data }),\n        msgTimeoutOnClose: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgTimeoutOnClose\", value: data }),\n        msgAcknowledgement: (data) => ({ typeUrl: \"/ibc.core.channel.v1.MsgAcknowledgement\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Channel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { IdentifiedChannel } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Counterparty } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Packet } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketState } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { Acknowledgement } from \"./module/types/ibc/core/channel/v1/channel\";\nimport { PacketSequence } from \"./module/types/ibc/core/channel/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Channel: {},\n        Channels: {},\n        ConnectionChannels: {},\n        ChannelClientState: {},\n        ChannelConsensusState: {},\n        PacketCommitment: {},\n        PacketCommitments: {},\n        PacketReceipt: {},\n        PacketAcknowledgement: {},\n        PacketAcknowledgements: {},\n        UnreceivedPackets: {},\n        UnreceivedAcks: {},\n        NextSequenceReceive: {},\n        _Structure: {\n            Channel: getStructure(Channel.fromPartial({})),\n            IdentifiedChannel: getStructure(IdentifiedChannel.fromPartial({})),\n            Counterparty: getStructure(Counterparty.fromPartial({})),\n            Packet: getStructure(Packet.fromPartial({})),\n            PacketState: getStructure(PacketState.fromPartial({})),\n            Acknowledgement: getStructure(Acknowledgement.fromPartial({})),\n            PacketSequence: getStructure(PacketSequence.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getChannel: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channel[JSON.stringify(params)] ?? {};\n        },\n        getChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Channels[JSON.stringify(params)] ?? {};\n        },\n        getConnectionChannels: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConnectionChannels[JSON.stringify(params)] ?? {};\n        },\n        getChannelClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelClientState[JSON.stringify(params)] ?? {};\n        },\n        getChannelConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ChannelConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitment: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitment[JSON.stringify(params)] ?? {};\n        },\n        getPacketCommitments: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketCommitments[JSON.stringify(params)] ?? {};\n        },\n        getPacketReceipt: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketReceipt[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgement: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgement[JSON.stringify(params)] ?? {};\n        },\n        getPacketAcknowledgements: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PacketAcknowledgements[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedPackets: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedPackets[JSON.stringify(params)] ?? {};\n        },\n        getUnreceivedAcks: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.UnreceivedAcks[JSON.stringify(params)] ?? {};\n        },\n        getNextSequenceReceive: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.NextSequenceReceive[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryChannel({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannel(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'Channel', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannel', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannel']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannel', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannels(query)).data : (await (await initQueryClient(rootGetters)).queryChannels()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryChannels({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'Channels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConnectionChannels({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, query)).data : (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConnectionChannels(key.connection, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConnectionChannels', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConnectionChannels', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConnectionChannels']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConnectionChannels', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryChannelClientState(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'ChannelClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryChannelConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryChannelConsensusState(key.channel_id, key.port_id, key.revision_number, key.revision_height)).data;\n                commit('QUERY', { query: 'ChannelConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryChannelConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getChannelConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryChannelConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitment({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitment(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketCommitment', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitment', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitment']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitment', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketCommitments({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketCommitments(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketCommitments', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketCommitments', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketCommitments']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketCommitments', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketReceipt({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketReceipt(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketReceipt', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketReceipt', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketReceipt']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketReceipt', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgement({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgement(key.channel_id, key.port_id, key.sequence)).data;\n                commit('QUERY', { query: 'PacketAcknowledgement', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgement', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgement']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgement', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPacketAcknowledgements({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPacketAcknowledgements(key.channel_id, key.port_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PacketAcknowledgements', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPacketAcknowledgements', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPacketAcknowledgements']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPacketAcknowledgements', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedPackets({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedPackets(key.channel_id, key.port_id, key.packet_commitment_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedPackets', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedPackets', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedPackets']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedPackets', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryUnreceivedAcks({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences, query)).data : (await (await initQueryClient(rootGetters)).queryUnreceivedAcks(key.channel_id, key.port_id, key.packet_ack_sequences)).data;\n                commit('QUERY', { query: 'UnreceivedAcks', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryUnreceivedAcks', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getUnreceivedAcks']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryUnreceivedAcks', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryNextSequenceReceive({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id, query)).data : (await (await initQueryClient(rootGetters)).queryNextSequenceReceive(key.channel_id, key.port_id)).data;\n                commit('QUERY', { query: 'NextSequenceReceive', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryNextSequenceReceive', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getNextSequenceReceive']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryNextSequenceReceive', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgChannelOpenInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeout({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenAck({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseInit({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelCloseConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenConfirm({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgChannelOpenTry({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgRecvPacket({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgTimeoutOnClose({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgAcknowledgement({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgChannelOpenInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeout({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeout(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeout:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeout:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenAck({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenAck(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenAck:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseInit({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseInit(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseInit:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelCloseConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelCloseConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelCloseConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenConfirm({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenConfirm(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenConfirm:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgChannelOpenTry({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgChannelOpenTry(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgChannelOpenTry:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgRecvPacket({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgRecvPacket(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgRecvPacket:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgTimeoutOnClose({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTimeoutOnClose(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTimeoutOnClose:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgAcknowledgement({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgAcknowledgement(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgAcknowledgement:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/core/client/v1/client.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientParams\n         * @summary ClientParams queries all parameters of the ibc client.\n         * @request GET:/ibc/client/v1beta1/params\n         */\n        this.queryClientParams = (params = {}) => this.request({\n            path: `/ibc/client/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientStates\n         * @summary ClientStates queries all the IBC light clients of a chain.\n         * @request GET:/ibc/core/client/v1beta1/client_states\n         */\n        this.queryClientStates = (query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryClientState\n         * @summary ClientState queries an IBC light client.\n         * @request GET:/ibc/core/client/v1beta1/client_states/{clientId}\n         */\n        this.queryClientState = (clientId, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/client_states/${clientId}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusStates\n       * @summary ConsensusStates queries all the consensus state associated with a given\n      client.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}\n       */\n        this.queryConsensusStates = (clientId, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n       * No description\n       *\n       * @tags Query\n       * @name QueryConsensusState\n       * @summary ConsensusState queries a consensus state associated with a client state at\n      a given height.\n       * @request GET:/ibc/core/client/v1beta1/consensus_states/{clientId}/revision/{revisionNumber}/height/{revisionHeight}\n       */\n        this.queryConsensusState = (clientId, revisionNumber, revisionHeight, query, params = {}) => this.request({\n            path: `/ibc/core/client/v1beta1/consensus_states/${clientId}/revision/${revisionNumber}/height/${revisionHeight}`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUpgradeClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgUpdateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgCreateClient } from \"./types/ibc/core/client/v1/tx\";\nimport { MsgSubmitMisbehaviour } from \"./types/ibc/core/client/v1/tx\";\nconst types = [\n    [\"/ibc.core.client.v1.MsgUpgradeClient\", MsgUpgradeClient],\n    [\"/ibc.core.client.v1.MsgUpdateClient\", MsgUpdateClient],\n    [\"/ibc.core.client.v1.MsgCreateClient\", MsgCreateClient],\n    [\"/ibc.core.client.v1.MsgSubmitMisbehaviour\", MsgSubmitMisbehaviour],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUpgradeClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpgradeClient\", value: data }),\n        msgUpdateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgUpdateClient\", value: data }),\n        msgCreateClient: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgCreateClient\", value: data }),\n        msgSubmitMisbehaviour: (data) => ({ typeUrl: \"/ibc.core.client.v1.MsgSubmitMisbehaviour\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { IdentifiedClientState } from \"./module/types/ibc/core/client/v1/client\";\nimport { ConsensusStateWithHeight } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientConsensusStates } from \"./module/types/ibc/core/client/v1/client\";\nimport { ClientUpdateProposal } from \"./module/types/ibc/core/client/v1/client\";\nimport { Height } from \"./module/types/ibc/core/client/v1/client\";\nimport { Params } from \"./module/types/ibc/core/client/v1/client\";\nimport { GenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nimport { IdentifiedGenesisMetadata } from \"./module/types/ibc/core/client/v1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        ClientState: {},\n        ClientStates: {},\n        ConsensusState: {},\n        ConsensusStates: {},\n        ClientParams: {},\n        _Structure: {\n            IdentifiedClientState: getStructure(IdentifiedClientState.fromPartial({})),\n            ConsensusStateWithHeight: getStructure(ConsensusStateWithHeight.fromPartial({})),\n            ClientConsensusStates: getStructure(ClientConsensusStates.fromPartial({})),\n            ClientUpdateProposal: getStructure(ClientUpdateProposal.fromPartial({})),\n            Height: getStructure(Height.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            GenesisMetadata: getStructure(GenesisMetadata.fromPartial({})),\n            IdentifiedGenesisMetadata: getStructure(IdentifiedGenesisMetadata.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getClientState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientState[JSON.stringify(params)] ?? {};\n        },\n        getClientStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientStates[JSON.stringify(params)] ?? {};\n        },\n        getConsensusState: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusState[JSON.stringify(params)] ?? {};\n        },\n        getConsensusStates: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ConsensusStates[JSON.stringify(params)] ?? {};\n        },\n        getClientParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.ClientParams[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryClientState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientState(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryClientState(key.client_id)).data;\n                commit('QUERY', { query: 'ClientState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientStates(query)).data : (await (await initQueryClient(rootGetters)).queryClientStates()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryClientStates({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ClientStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusState({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusState(key.client_id, key.revision_number, key.revision_height, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusState', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusState', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusState']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusState', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryConsensusStates({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, query)).data : (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id)).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryConsensusStates(key.client_id, { ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'ConsensusStates', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryConsensusStates', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getConsensusStates']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryConsensusStates', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryClientParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryClientParams(query)).data : (await (await initQueryClient(rootGetters)).queryClientParams()).data;\n                commit('QUERY', { query: 'ClientParams', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryClientParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getClientParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryClientParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUpgradeClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateClient({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgSubmitMisbehaviour({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUpgradeClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpgradeClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpgradeClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateClient({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateClient(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateClient:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgSubmitMisbehaviour({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgSubmitMisbehaviour(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgSubmitMisbehaviour:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title property/property.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryAllProperties\n         * @summary Returns all properties from a specific owner\n         * @request GET:/rafaelsousa/realestate/property/listproperties/{ownerAddr}\n         */\n        this.queryAllProperties = (ownerAddr, params = {}) => this.request({\n            path: `/rafaelsousa/realestate/property/listproperties/${ownerAddr}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwnerAll\n         * @request GET:/rafaelsousa/realestate/property/owner\n         */\n        this.queryOwnerAll = (query, params = {}) => this.request({\n            path: `/rafaelsousa/realestate/property/owner`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryOwner\n         * @summary this line is used by starport scaffolding # 2\n         * @request GET:/rafaelsousa/realestate/property/owner/{id}\n         */\n        this.queryOwner = (id, params = {}) => this.request({\n            path: `/rafaelsousa/realestate/property/owner/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryPropertyAll\n         * @request GET:/rafaelsousa/realestate/property/property\n         */\n        this.queryPropertyAll = (query, params = {}) => this.request({\n            path: `/rafaelsousa/realestate/property/property`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryProperty\n         * @request GET:/rafaelsousa/realestate/property/property/{id}\n         */\n        this.queryProperty = (id, params = {}) => this.request({\n            path: `/rafaelsousa/realestate/property/property/${id}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgDeleteOwner } from \"./types/property/tx\";\nimport { MsgCreateProperty } from \"./types/property/tx\";\nimport { MsgCreateOwner } from \"./types/property/tx\";\nimport { MsgUpdateOwner } from \"./types/property/tx\";\nimport { MsgUpdateProperty } from \"./types/property/tx\";\nimport { MsgDeleteProperty } from \"./types/property/tx\";\nconst types = [\n    [\"/rafaelsousa.realestate.property.MsgDeleteOwner\", MsgDeleteOwner],\n    [\"/rafaelsousa.realestate.property.MsgCreateProperty\", MsgCreateProperty],\n    [\"/rafaelsousa.realestate.property.MsgCreateOwner\", MsgCreateOwner],\n    [\"/rafaelsousa.realestate.property.MsgUpdateOwner\", MsgUpdateOwner],\n    [\"/rafaelsousa.realestate.property.MsgUpdateProperty\", MsgUpdateProperty],\n    [\"/rafaelsousa.realestate.property.MsgDeleteProperty\", MsgDeleteProperty],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgDeleteOwner: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgDeleteOwner\", value: data }),\n        msgCreateProperty: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgCreateProperty\", value: data }),\n        msgCreateOwner: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgCreateOwner\", value: data }),\n        msgUpdateOwner: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgUpdateOwner\", value: data }),\n        msgUpdateProperty: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgUpdateProperty\", value: data }),\n        msgDeleteProperty: (data) => ({ typeUrl: \"/rafaelsousa.realestate.property.MsgDeleteProperty\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { Owner } from \"./module/types/property/owner\";\nimport { Property } from \"./module/types/property/property\";\nimport { PropertyCollection } from \"./module/types/property/property\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Owner: {},\n        OwnerAll: {},\n        Property: {},\n        PropertyAll: {},\n        AllProperties: {},\n        _Structure: {\n            Owner: getStructure(Owner.fromPartial({})),\n            Property: getStructure(Property.fromPartial({})),\n            PropertyCollection: getStructure(PropertyCollection.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getOwner: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Owner[JSON.stringify(params)] ?? {};\n        },\n        getOwnerAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.OwnerAll[JSON.stringify(params)] ?? {};\n        },\n        getProperty: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Property[JSON.stringify(params)] ?? {};\n        },\n        getPropertyAll: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.PropertyAll[JSON.stringify(params)] ?? {};\n        },\n        getAllProperties: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.AllProperties[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryOwner({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryOwner(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryOwner(key.id)).data;\n                commit('QUERY', { query: 'Owner', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwner', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwner']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryOwner', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryOwnerAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryOwnerAll(query)).data : (await (await initQueryClient(rootGetters)).queryOwnerAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryOwnerAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'OwnerAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryOwnerAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getOwnerAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryOwnerAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryProperty({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryProperty(key.id, query)).data : (await (await initQueryClient(rootGetters)).queryProperty(key.id)).data;\n                commit('QUERY', { query: 'Property', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryProperty', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getProperty']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryProperty', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryPropertyAll({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryPropertyAll(query)).data : (await (await initQueryClient(rootGetters)).queryPropertyAll()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryPropertyAll({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'PropertyAll', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryPropertyAll', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getPropertyAll']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryPropertyAll', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryAllProperties({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryAllProperties(key.owner_addr, query)).data : (await (await initQueryClient(rootGetters)).queryAllProperties(key.owner_addr)).data;\n                commit('QUERY', { query: 'AllProperties', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryAllProperties', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getAllProperties']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryAllProperties', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgDeleteOwner({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteOwner(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteOwner:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateProperty({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateProperty(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProperty:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgCreateOwner({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateOwner(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateOwner:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateOwner({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateOwner(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateOwner:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgUpdateProperty({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateProperty(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProperty:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async sendMsgDeleteProperty({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteProperty(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProperty:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgDeleteOwner({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteOwner:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateProperty({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateProperty(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateProperty:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgCreateOwner({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgCreateOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgCreateOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgCreateOwner:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateOwner({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateOwner(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateOwner:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateOwner:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgUpdateProperty({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUpdateProperty(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUpdateProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUpdateProperty:Create', 'Could not create message.');\n                }\n            }\n        },\n        async MsgDeleteProperty({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgDeleteProperty(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgDeleteProperty:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgDeleteProperty:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title cosmos/slashing/v1beta1/slashing.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries the parameters of slashing module\n         * @request GET:/cosmos/slashing/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfos\n         * @summary SigningInfos queries signing info of all validators\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos\n         */\n        this.querySigningInfos = (query, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QuerySigningInfo\n         * @summary SigningInfo queries the signing info of given cons address\n         * @request GET:/cosmos/slashing/v1beta1/signing_infos/{consAddress}\n         */\n        this.querySigningInfo = (consAddress, params = {}) => this.request({\n            path: `/cosmos/slashing/v1beta1/signing_infos/${consAddress}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseMsgUnjail = { validatorAddr: \"\" };\nexport const MsgUnjail = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddr !== \"\") {\n            writer.uint32(10).string(message.validatorAddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjail };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = String(object.validatorAddr);\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddr !== undefined &&\n            (obj.validatorAddr = message.validatorAddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgUnjail };\n        if (object.validatorAddr !== undefined && object.validatorAddr !== null) {\n            message.validatorAddr = object.validatorAddr;\n        }\n        else {\n            message.validatorAddr = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgUnjailResponse = {};\nexport const MsgUnjailResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgUnjailResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgUnjailResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Unjail(request) {\n        const data = MsgUnjail.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.slashing.v1beta1.Msg\", \"Unjail\", data);\n        return promise.then((data) => MsgUnjailResponse.decode(new Reader(data)));\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgUnjail } from \"./types/cosmos/slashing/v1beta1/tx\";\nconst types = [\n    [\"/cosmos.slashing.v1beta1.MsgUnjail\", MsgUnjail],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgUnjail: (data) => ({ typeUrl: \"/cosmos.slashing.v1beta1.MsgUnjail\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { ValidatorSigningInfo } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { Params } from \"./module/types/cosmos/slashing/v1beta1/slashing\";\nimport { SigningInfo } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { ValidatorMissedBlocks } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nimport { MissedBlock } from \"./module/types/cosmos/slashing/v1beta1/genesis\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        Params: {},\n        SigningInfo: {},\n        SigningInfos: {},\n        _Structure: {\n            ValidatorSigningInfo: getStructure(ValidatorSigningInfo.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n            SigningInfo: getStructure(SigningInfo.fromPartial({})),\n            ValidatorMissedBlocks: getStructure(ValidatorMissedBlocks.fromPartial({})),\n            MissedBlock: getStructure(MissedBlock.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfo: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfo[JSON.stringify(params)] ?? {};\n        },\n        getSigningInfos: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.SigningInfos[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfo({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address, query)).data : (await (await initQueryClient(rootGetters)).querySigningInfo(key.cons_address)).data;\n                commit('QUERY', { query: 'SigningInfo', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfo', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfo']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfo', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QuerySigningInfos({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).querySigningInfos(query)).data : (await (await initQueryClient(rootGetters)).querySigningInfos()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).querySigningInfos({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'SigningInfos', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QuerySigningInfos', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getSigningInfos']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QuerySigningInfos', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgUnjail({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgUnjail({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgUnjail(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgUnjail:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgUnjail:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","/* eslint-disable */\n/* tslint:disable */\n/*\n * ---------------------------------------------------------------\n * ## THIS FILE WAS GENERATED VIA SWAGGER-TYPESCRIPT-API        ##\n * ##                                                           ##\n * ## AUTHOR: acacode                                           ##\n * ## SOURCE: https://github.com/acacode/swagger-typescript-api ##\n * ---------------------------------------------------------------\n */\nexport var ContentType;\n(function (ContentType) {\n    ContentType[\"Json\"] = \"application/json\";\n    ContentType[\"FormData\"] = \"multipart/form-data\";\n    ContentType[\"UrlEncoded\"] = \"application/x-www-form-urlencoded\";\n})(ContentType || (ContentType = {}));\nexport class HttpClient {\n    constructor(apiConfig = {}) {\n        this.baseUrl = \"\";\n        this.securityData = null;\n        this.securityWorker = null;\n        this.abortControllers = new Map();\n        this.baseApiParams = {\n            credentials: \"same-origin\",\n            headers: {},\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n        };\n        this.setSecurityData = (data) => {\n            this.securityData = data;\n        };\n        this.contentFormatters = {\n            [ContentType.Json]: (input) => input !== null && (typeof input === \"object\" || typeof input === \"string\") ? JSON.stringify(input) : input,\n            [ContentType.FormData]: (input) => Object.keys(input || {}).reduce((data, key) => {\n                data.append(key, input[key]);\n                return data;\n            }, new FormData()),\n            [ContentType.UrlEncoded]: (input) => this.toQueryString(input),\n        };\n        this.createAbortSignal = (cancelToken) => {\n            if (this.abortControllers.has(cancelToken)) {\n                const abortController = this.abortControllers.get(cancelToken);\n                if (abortController) {\n                    return abortController.signal;\n                }\n                return void 0;\n            }\n            const abortController = new AbortController();\n            this.abortControllers.set(cancelToken, abortController);\n            return abortController.signal;\n        };\n        this.abortRequest = (cancelToken) => {\n            const abortController = this.abortControllers.get(cancelToken);\n            if (abortController) {\n                abortController.abort();\n                this.abortControllers.delete(cancelToken);\n            }\n        };\n        this.request = ({ body, secure, path, type, query, format = \"json\", baseUrl, cancelToken, ...params }) => {\n            const secureParams = (secure && this.securityWorker && this.securityWorker(this.securityData)) || {};\n            const requestParams = this.mergeRequestParams(params, secureParams);\n            const queryString = query && this.toQueryString(query);\n            const payloadFormatter = this.contentFormatters[type || ContentType.Json];\n            return fetch(`${baseUrl || this.baseUrl || \"\"}${path}${queryString ? `?${queryString}` : \"\"}`, {\n                ...requestParams,\n                headers: {\n                    ...(type && type !== ContentType.FormData ? { \"Content-Type\": type } : {}),\n                    ...(requestParams.headers || {}),\n                },\n                signal: cancelToken ? this.createAbortSignal(cancelToken) : void 0,\n                body: typeof body === \"undefined\" || body === null ? null : payloadFormatter(body),\n            }).then(async (response) => {\n                const r = response;\n                r.data = null;\n                r.error = null;\n                const data = await response[format]()\n                    .then((data) => {\n                    if (r.ok) {\n                        r.data = data;\n                    }\n                    else {\n                        r.error = data;\n                    }\n                    return r;\n                })\n                    .catch((e) => {\n                    r.error = e;\n                    return r;\n                });\n                if (cancelToken) {\n                    this.abortControllers.delete(cancelToken);\n                }\n                if (!response.ok)\n                    throw data;\n                return data;\n            });\n        };\n        Object.assign(this, apiConfig);\n    }\n    addQueryParam(query, key) {\n        const value = query[key];\n        return (encodeURIComponent(key) +\n            \"=\" +\n            encodeURIComponent(Array.isArray(value) ? value.join(\",\") : typeof value === \"number\" ? value : `${value}`));\n    }\n    toQueryString(rawQuery) {\n        const query = rawQuery || {};\n        const keys = Object.keys(query).filter((key) => \"undefined\" !== typeof query[key]);\n        return keys\n            .map((key) => typeof query[key] === \"object\" && !Array.isArray(query[key])\n            ? this.toQueryString(query[key])\n            : this.addQueryParam(query, key))\n            .join(\"&\");\n    }\n    addQueryParams(rawQuery) {\n        const queryString = this.toQueryString(rawQuery);\n        return queryString ? `?${queryString}` : \"\";\n    }\n    mergeRequestParams(params1, params2) {\n        return {\n            ...this.baseApiParams,\n            ...params1,\n            ...(params2 || {}),\n            headers: {\n                ...(this.baseApiParams.headers || {}),\n                ...(params1.headers || {}),\n                ...((params2 && params2.headers) || {}),\n            },\n        };\n    }\n}\n/**\n * @title ibc/applications/transfer/v1/tx.proto\n * @version version not set\n */\nexport class Api extends HttpClient {\n    constructor() {\n        super(...arguments);\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTraces\n         * @summary DenomTraces queries all denomination traces.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces\n         */\n        this.queryDenomTraces = (query, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces`,\n            method: \"GET\",\n            query: query,\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryDenomTrace\n         * @summary DenomTrace queries a denomination trace information.\n         * @request GET:/ibc/applications/transfer/v1beta1/denom_traces/{hash}\n         */\n        this.queryDenomTrace = (hash, params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/denom_traces/${hash}`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n        /**\n         * No description\n         *\n         * @tags Query\n         * @name QueryParams\n         * @summary Params queries all parameters of the ibc-transfer module.\n         * @request GET:/ibc/applications/transfer/v1beta1/params\n         */\n        this.queryParams = (params = {}) => this.request({\n            path: `/ibc/applications/transfer/v1beta1/params`,\n            method: \"GET\",\n            format: \"json\",\n            ...params,\n        });\n    }\n}\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport { SigningStargateClient } from \"@cosmjs/stargate\";\nimport { Registry } from \"@cosmjs/proto-signing\";\nimport { Api } from \"./rest\";\nimport { MsgTransfer } from \"./types/ibc/applications/transfer/v1/tx\";\nconst types = [\n    [\"/ibc.applications.transfer.v1.MsgTransfer\", MsgTransfer],\n];\nconst registry = new Registry(types);\nconst defaultFee = {\n    amount: [],\n    gas: \"200000\",\n};\nconst txClient = async (wallet, { addr: addr } = { addr: \"http://localhost:26657\" }) => {\n    if (!wallet)\n        throw new Error(\"wallet is required\");\n    const client = await SigningStargateClient.connectWithSigner(addr, wallet, { registry });\n    const { address } = (await wallet.getAccounts())[0];\n    return {\n        signAndBroadcast: (msgs, { fee = defaultFee, memo = null }) => memo ? client.signAndBroadcast(address, msgs, fee, memo) : client.signAndBroadcast(address, msgs, fee),\n        msgTransfer: (data) => ({ typeUrl: \"/ibc.applications.transfer.v1.MsgTransfer\", value: data }),\n    };\n};\nconst queryClient = async ({ addr: addr } = { addr: \"http://localhost:1317\" }) => {\n    return new Api({ baseUrl: addr });\n};\nexport { txClient, queryClient, };\n","import { txClient, queryClient } from './module';\n// @ts-ignore\nimport { SpVuexError } from '@starport/vuex';\nimport { FungibleTokenPacketData } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { DenomTrace } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nimport { Params } from \"./module/types/ibc/applications/transfer/v1/transfer\";\nasync function initTxClient(vuexGetters) {\n    return await txClient(vuexGetters['common/wallet/signer'], {\n        addr: vuexGetters['common/env/apiTendermint']\n    });\n}\nasync function initQueryClient(vuexGetters) {\n    return await queryClient({\n        addr: vuexGetters['common/env/apiCosmos']\n    });\n}\nfunction getStructure(template) {\n    let structure = { fields: [] };\n    for (const [key, value] of Object.entries(template)) {\n        let field = {};\n        field.name = key;\n        field.type = typeof value;\n        structure.fields.push(field);\n    }\n    return structure;\n}\nconst getDefaultState = () => {\n    return {\n        DenomTrace: {},\n        DenomTraces: {},\n        Params: {},\n        _Structure: {\n            FungibleTokenPacketData: getStructure(FungibleTokenPacketData.fromPartial({})),\n            DenomTrace: getStructure(DenomTrace.fromPartial({})),\n            Params: getStructure(Params.fromPartial({})),\n        },\n        _Subscriptions: new Set(),\n    };\n};\n// initial state\nconst state = getDefaultState();\nexport default {\n    namespaced: true,\n    state,\n    mutations: {\n        RESET_STATE(state) {\n            Object.assign(state, getDefaultState());\n        },\n        QUERY(state, { query, key, value }) {\n            state[query][JSON.stringify(key)] = value;\n        },\n        SUBSCRIBE(state, subscription) {\n            state._Subscriptions.add(subscription);\n        },\n        UNSUBSCRIBE(state, subscription) {\n            state._Subscriptions.delete(subscription);\n        }\n    },\n    getters: {\n        getDenomTrace: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTrace[JSON.stringify(params)] ?? {};\n        },\n        getDenomTraces: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.DenomTraces[JSON.stringify(params)] ?? {};\n        },\n        getParams: (state) => (params = {}) => {\n            if (!params.query) {\n                params.query = null;\n            }\n            return state.Params[JSON.stringify(params)] ?? {};\n        },\n        getTypeStructure: (state) => (type) => {\n            return state._Structure[type].fields;\n        }\n    },\n    actions: {\n        init({ dispatch, rootGetters }) {\n            console.log('init');\n            if (rootGetters['common/env/client']) {\n                rootGetters['common/env/client'].on('newblock', () => {\n                    dispatch('StoreUpdate');\n                });\n            }\n        },\n        resetState({ commit }) {\n            commit('RESET_STATE');\n        },\n        unsubscribe({ commit }, subscription) {\n            commit('UNSUBSCRIBE', subscription);\n        },\n        async StoreUpdate({ state, dispatch }) {\n            state._Subscriptions.forEach((subscription) => {\n                dispatch(subscription.action, subscription.payload);\n            });\n        },\n        async QueryDenomTrace({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash, query)).data : (await (await initQueryClient(rootGetters)).queryDenomTrace(key.hash)).data;\n                commit('QUERY', { query: 'DenomTrace', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTrace', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTrace']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTrace', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryDenomTraces({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryDenomTraces(query)).data : (await (await initQueryClient(rootGetters)).queryDenomTraces()).data;\n                while (all && value.pagination && value.pagination.nextKey != null) {\n                    let next_values = (await (await initQueryClient(rootGetters)).queryDenomTraces({ ...query, 'pagination.key': value.pagination.nextKey })).data;\n                    for (let prop of Object.keys(next_values)) {\n                        if (Array.isArray(next_values[prop])) {\n                            value[prop] = [...value[prop], ...next_values[prop]];\n                        }\n                        else {\n                            value[prop] = next_values[prop];\n                        }\n                    }\n                }\n                commit('QUERY', { query: 'DenomTraces', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryDenomTraces', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getDenomTraces']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryDenomTraces', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async QueryParams({ commit, rootGetters, getters }, { options: { subscribe = false, all = false }, params: { ...key }, query = null }) {\n            try {\n                let value = query ? (await (await initQueryClient(rootGetters)).queryParams(query)).data : (await (await initQueryClient(rootGetters)).queryParams()).data;\n                commit('QUERY', { query: 'Params', key: { params: { ...key }, query }, value });\n                if (subscribe)\n                    commit('SUBSCRIBE', { action: 'QueryParams', payload: { options: { all }, params: { ...key }, query } });\n                return getters['getParams']({ params: { ...key }, query }) ?? {};\n            }\n            catch (e) {\n                console.error(new SpVuexError('QueryClient:QueryParams', 'API Node Unavailable. Could not perform query.'));\n                return {};\n            }\n        },\n        async sendMsgTransfer({ rootGetters }, { value, fee, memo }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                const result = await (await initTxClient(rootGetters)).signAndBroadcast([msg], { fee: { amount: fee,\n                        gas: \"200000\" }, memo });\n                return result;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Send', 'Could not broadcast Tx.');\n                }\n            }\n        },\n        async MsgTransfer({ rootGetters }, { value }) {\n            try {\n                const msg = await (await initTxClient(rootGetters)).msgTransfer(value);\n                return msg;\n            }\n            catch (e) {\n                if (e.toString() == 'wallet is required') {\n                    throw new SpVuexError('TxClient:MsgTransfer:Init', 'Could not initialize signing client. Wallet is required.');\n                }\n                else {\n                    throw new SpVuexError('TxClient:MsgTransfer:Create', 'Could not create message.');\n                }\n            }\n        },\n    }\n};\n","// THIS FILE IS GENERATED AUTOMATICALLY. DO NOT MODIFY.\nimport CosmosCosmosSdkCosmosVestingV1Beta1 from './cosmos/cosmos-sdk/cosmos.vesting.v1beta1';\nimport CosmosCosmosSdkCosmosCrisisV1Beta1 from './cosmos/cosmos-sdk/cosmos.crisis.v1beta1';\nimport CosmosCosmosSdkCosmosEvidenceV1Beta1 from './cosmos/cosmos-sdk/cosmos.evidence.v1beta1';\nimport CosmosCosmosSdkCosmosGovV1Beta1 from './cosmos/cosmos-sdk/cosmos.gov.v1beta1';\nimport CosmosCosmosSdkCosmosBaseV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.v1beta1';\nimport CosmosCosmosSdkCosmosStakingV1Beta1 from './cosmos/cosmos-sdk/cosmos.staking.v1beta1';\nimport CosmosCosmosSdkCosmosDistributionV1Beta1 from './cosmos/cosmos-sdk/cosmos.distribution.v1beta1';\nimport CosmosCosmosSdkCosmosBankV1Beta1 from './cosmos/cosmos-sdk/cosmos.bank.v1beta1';\nimport CosmosCosmosSdkIbcCoreConnectionV1 from './cosmos/cosmos-sdk/ibc.core.connection.v1';\nimport CosmosCosmosSdkCosmosBaseAbciV1Beta1 from './cosmos/cosmos-sdk/cosmos.base.abci.v1beta1';\nimport CosmosCosmosSdkIbcCoreChannelV1 from './cosmos/cosmos-sdk/ibc.core.channel.v1';\nimport CosmosCosmosSdkIbcCoreClientV1 from './cosmos/cosmos-sdk/ibc.core.client.v1';\nimport RafaelsousaRealestateRafaelsousaRealestateProperty from './rafaelsousa/realestate/rafaelsousa.realestate.property';\nimport CosmosCosmosSdkCosmosSlashingV1Beta1 from './cosmos/cosmos-sdk/cosmos.slashing.v1beta1';\nimport CosmosCosmosSdkIbcApplicationsTransferV1 from './cosmos/cosmos-sdk/ibc.applications.transfer.v1';\nexport default {\n    CosmosCosmosSdkCosmosVestingV1Beta1: load(CosmosCosmosSdkCosmosVestingV1Beta1, 'cosmos.vesting.v1beta1'),\n    CosmosCosmosSdkCosmosCrisisV1Beta1: load(CosmosCosmosSdkCosmosCrisisV1Beta1, 'cosmos.crisis.v1beta1'),\n    CosmosCosmosSdkCosmosEvidenceV1Beta1: load(CosmosCosmosSdkCosmosEvidenceV1Beta1, 'cosmos.evidence.v1beta1'),\n    CosmosCosmosSdkCosmosGovV1Beta1: load(CosmosCosmosSdkCosmosGovV1Beta1, 'cosmos.gov.v1beta1'),\n    CosmosCosmosSdkCosmosBaseV1Beta1: load(CosmosCosmosSdkCosmosBaseV1Beta1, 'cosmos.base.v1beta1'),\n    CosmosCosmosSdkCosmosStakingV1Beta1: load(CosmosCosmosSdkCosmosStakingV1Beta1, 'cosmos.staking.v1beta1'),\n    CosmosCosmosSdkCosmosDistributionV1Beta1: load(CosmosCosmosSdkCosmosDistributionV1Beta1, 'cosmos.distribution.v1beta1'),\n    CosmosCosmosSdkCosmosBankV1Beta1: load(CosmosCosmosSdkCosmosBankV1Beta1, 'cosmos.bank.v1beta1'),\n    CosmosCosmosSdkIbcCoreConnectionV1: load(CosmosCosmosSdkIbcCoreConnectionV1, 'ibc.core.connection.v1'),\n    CosmosCosmosSdkCosmosBaseAbciV1Beta1: load(CosmosCosmosSdkCosmosBaseAbciV1Beta1, 'cosmos.base.abci.v1beta1'),\n    CosmosCosmosSdkIbcCoreChannelV1: load(CosmosCosmosSdkIbcCoreChannelV1, 'ibc.core.channel.v1'),\n    CosmosCosmosSdkIbcCoreClientV1: load(CosmosCosmosSdkIbcCoreClientV1, 'ibc.core.client.v1'),\n    RafaelsousaRealestateRafaelsousaRealestateProperty: load(RafaelsousaRealestateRafaelsousaRealestateProperty, 'rafaelsousa.realestate.property'),\n    CosmosCosmosSdkCosmosSlashingV1Beta1: load(CosmosCosmosSdkCosmosSlashingV1Beta1, 'cosmos.slashing.v1beta1'),\n    CosmosCosmosSdkIbcApplicationsTransferV1: load(CosmosCosmosSdkIbcApplicationsTransferV1, 'ibc.applications.transfer.v1'),\n};\nfunction load(mod, fullns) {\n    return function init(store) {\n        const fullnsLevels = fullns.split('/');\n        for (let i = 1; i < fullnsLevels.length; i++) {\n            let ns = fullnsLevels.slice(0, i);\n            if (!store.hasModule(ns)) {\n                store.registerModule(ns, { namespaced: true });\n            }\n        }\n        if (store.hasModule(fullnsLevels)) {\n            throw new Error('Duplicate module name detected: ' + fullnsLevels.pop());\n        }\n        else {\n            store.registerModule(fullnsLevels, mod);\n            store.subscribe((mutation) => {\n                if (mutation.type == 'common/env/INITIALIZE_WS_COMPLETE') {\n                    store.dispatch(fullns + '/init', null, {\n                        root: true\n                    });\n                }\n            });\n        }\n    };\n}\n","import { env, starport, blocks, wallet,transfers } from '@starport/vuex'\nimport generated from './generated'\nexport default function init(store) {\n\tfor (const moduleInit of Object.values(generated)) {\n\t\tmoduleInit(store)\n\t}\n\ttransfers(store)\n\tstarport(store)\n\tblocks(store)\n\tenv(store)\n\twallet(store)\n}\n","import { createStore } from 'vuex'\nimport init from './config'\n\nconst store = createStore({\n\tstate() {\n\t\treturn {}\n\t},\n\tmutations: {},\n\tactions: {},\n})\ninit(store)\nexport default store\n","<template>\n\t<div>\n\t\t<div class=\"container\">\n\t\t\t<SpTokenSend :address=\"address\" />\n\t\t\t<SpTransferList :address=\"address\" />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Index',\n\tcomputed: {\n\t\taddress() {\n\t\t\treturn this.$store.getters['common/wallet/address']\n\t\t}\n\t}\n}\n</script>\n","import { render } from \"./Index.vue?vue&type=template&id=e30ba36a\"\nimport script from \"./Index.vue?vue&type=script&lang=js\"\nexport * from \"./Index.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","<template>\n\t<div>\n\t\t<div class=\"container\">\n      \t<!-- this line is used by starport scaffolding # 4 -->\n\t\t<SpType modulePath=\"rafaelsousa.realestate.property\" moduleType=\"Owner\"  />\n\t\t<SpType modulePath=\"rafaelsousa.realestate.property\" moduleType=\"Property\"  />\n\t\t</div>\n\t</div>\n</template>\n\n<script>\nexport default {\n\tname: 'Types'\n}\n</script>\n\n","import { render } from \"./Types.vue?vue&type=template&id=3fbc5809\"\nimport script from \"./Types.vue?vue&type=script&lang=js\"\nexport * from \"./Types.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script","import { createRouter, createWebHistory } from 'vue-router'\nimport Index from '@/views/Index.vue'\nimport Types from '@/views/Types.vue'\n\nconst routerHistory = createWebHistory()\nconst routes = [\n\t{\n\t\tpath: '/',\n\t\tcomponent: Index\n\t},\n\t{ path: '/types', component: Types }\n]\n\nconst router = createRouter({\n\thistory: routerHistory,\n\troutes\n})\n\nexport default router\n","import { createApp } from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport router from './router'\nimport vueLib from '@starport/vue'\n\nconst app = createApp(App)\napp.config.globalProperties._depsLoaded = true\napp.use(store).use(router).use(vueLib).mount('#app')\n","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=5695b462&lang=css\"","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedChannel, PacketState, } from \"../../../../ibc/core/channel/v1/channel\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseGenesisState = { nextChannelSequence: 0 };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.channels) {\n            IdentifiedChannel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.acknowledgements) {\n            PacketState.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.commitments) {\n            PacketState.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.receipts) {\n            PacketState.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.sendSequences) {\n            PacketSequence.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.recvSequences) {\n            PacketSequence.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.ackSequences) {\n            PacketSequence.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.nextChannelSequence !== 0) {\n            writer.uint32(64).uint64(message.nextChannelSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.channels.push(IdentifiedChannel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.acknowledgements.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.commitments.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.receipts.push(PacketState.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.sendSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.recvSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.ackSequences.push(PacketSequence.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.nextChannelSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromJSON(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromJSON(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromJSON(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = Number(object.nextChannelSequence);\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.channels) {\n            obj.channels = message.channels.map((e) => e ? IdentifiedChannel.toJSON(e) : undefined);\n        }\n        else {\n            obj.channels = [];\n        }\n        if (message.acknowledgements) {\n            obj.acknowledgements = message.acknowledgements.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.acknowledgements = [];\n        }\n        if (message.commitments) {\n            obj.commitments = message.commitments.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.commitments = [];\n        }\n        if (message.receipts) {\n            obj.receipts = message.receipts.map((e) => e ? PacketState.toJSON(e) : undefined);\n        }\n        else {\n            obj.receipts = [];\n        }\n        if (message.sendSequences) {\n            obj.sendSequences = message.sendSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.sendSequences = [];\n        }\n        if (message.recvSequences) {\n            obj.recvSequences = message.recvSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.recvSequences = [];\n        }\n        if (message.ackSequences) {\n            obj.ackSequences = message.ackSequences.map((e) => e ? PacketSequence.toJSON(e) : undefined);\n        }\n        else {\n            obj.ackSequences = [];\n        }\n        message.nextChannelSequence !== undefined &&\n            (obj.nextChannelSequence = message.nextChannelSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.channels = [];\n        message.acknowledgements = [];\n        message.commitments = [];\n        message.receipts = [];\n        message.sendSequences = [];\n        message.recvSequences = [];\n        message.ackSequences = [];\n        if (object.channels !== undefined && object.channels !== null) {\n            for (const e of object.channels) {\n                message.channels.push(IdentifiedChannel.fromPartial(e));\n            }\n        }\n        if (object.acknowledgements !== undefined &&\n            object.acknowledgements !== null) {\n            for (const e of object.acknowledgements) {\n                message.acknowledgements.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.commitments !== undefined && object.commitments !== null) {\n            for (const e of object.commitments) {\n                message.commitments.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.receipts !== undefined && object.receipts !== null) {\n            for (const e of object.receipts) {\n                message.receipts.push(PacketState.fromPartial(e));\n            }\n        }\n        if (object.sendSequences !== undefined && object.sendSequences !== null) {\n            for (const e of object.sendSequences) {\n                message.sendSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.recvSequences !== undefined && object.recvSequences !== null) {\n            for (const e of object.recvSequences) {\n                message.recvSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.ackSequences !== undefined && object.ackSequences !== null) {\n            for (const e of object.ackSequences) {\n                message.ackSequences.push(PacketSequence.fromPartial(e));\n            }\n        }\n        if (object.nextChannelSequence !== undefined &&\n            object.nextChannelSequence !== null) {\n            message.nextChannelSequence = object.nextChannelSequence;\n        }\n        else {\n            message.nextChannelSequence = 0;\n        }\n        return message;\n    },\n};\nconst basePacketSequence = { portId: \"\", channelId: \"\", sequence: 0 };\nexport const PacketSequence = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePacketSequence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePacketSequence };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, ValidatorSigningInfo, } from \"../../../cosmos/slashing/v1beta1/slashing\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseGenesisState = {};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.signingInfos) {\n            SigningInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.missedBlocks) {\n            ValidatorMissedBlocks.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.signingInfos.push(SigningInfo.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.missedBlocks.push(ValidatorMissedBlocks.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromJSON(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        if (message.signingInfos) {\n            obj.signingInfos = message.signingInfos.map((e) => e ? SigningInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.signingInfos = [];\n        }\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? ValidatorMissedBlocks.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.signingInfos = [];\n        message.missedBlocks = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.signingInfos !== undefined && object.signingInfos !== null) {\n            for (const e of object.signingInfos) {\n                message.signingInfos.push(SigningInfo.fromPartial(e));\n            }\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(ValidatorMissedBlocks.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSigningInfo = { address: \"\" };\nexport const SigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.validatorSigningInfo !== undefined) {\n            ValidatorSigningInfo.encode(message.validatorSigningInfo, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.validatorSigningInfo = ValidatorSigningInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromJSON(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.validatorSigningInfo !== undefined &&\n            (obj.validatorSigningInfo = message.validatorSigningInfo\n                ? ValidatorSigningInfo.toJSON(message.validatorSigningInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.validatorSigningInfo !== undefined &&\n            object.validatorSigningInfo !== null) {\n            message.validatorSigningInfo = ValidatorSigningInfo.fromPartial(object.validatorSigningInfo);\n        }\n        else {\n            message.validatorSigningInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorMissedBlocks = { address: \"\" };\nexport const ValidatorMissedBlocks = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        for (const v of message.missedBlocks) {\n            MissedBlock.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.missedBlocks.push(MissedBlock.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        if (message.missedBlocks) {\n            obj.missedBlocks = message.missedBlocks.map((e) => e ? MissedBlock.toJSON(e) : undefined);\n        }\n        else {\n            obj.missedBlocks = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorMissedBlocks };\n        message.missedBlocks = [];\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.missedBlocks !== undefined && object.missedBlocks !== null) {\n            for (const e of object.missedBlocks) {\n                message.missedBlocks.push(MissedBlock.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMissedBlock = { index: 0, missed: false };\nexport const MissedBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).int64(message.index);\n        }\n        if (message.missed === true) {\n            writer.uint32(16).bool(message.missed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMissedBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.missed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = Boolean(object.missed);\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.missed !== undefined && (obj.missed = message.missed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMissedBlock };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.missed !== undefined && object.missed !== null) {\n            message.missed = object.missed;\n        }\n        else {\n            message.missed = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { MerklePrefix } from \"../../../../ibc/core/commitment/v1/commitment\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\n/**\n * State defines if a connection is in one of the following states:\n * INIT, TRYOPEN, OPEN or UNINITIALIZED.\n */\nexport var State;\n(function (State) {\n    /** STATE_UNINITIALIZED_UNSPECIFIED - Default State */\n    State[State[\"STATE_UNINITIALIZED_UNSPECIFIED\"] = 0] = \"STATE_UNINITIALIZED_UNSPECIFIED\";\n    /** STATE_INIT - A connection end has just started the opening handshake. */\n    State[State[\"STATE_INIT\"] = 1] = \"STATE_INIT\";\n    /**\n     * STATE_TRYOPEN - A connection end has acknowledged the handshake step on the counterparty\n     * chain.\n     */\n    State[State[\"STATE_TRYOPEN\"] = 2] = \"STATE_TRYOPEN\";\n    /** STATE_OPEN - A connection end has completed the handshake. */\n    State[State[\"STATE_OPEN\"] = 3] = \"STATE_OPEN\";\n    State[State[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(State || (State = {}));\nexport function stateFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"STATE_UNINITIALIZED_UNSPECIFIED\":\n            return State.STATE_UNINITIALIZED_UNSPECIFIED;\n        case 1:\n        case \"STATE_INIT\":\n            return State.STATE_INIT;\n        case 2:\n        case \"STATE_TRYOPEN\":\n            return State.STATE_TRYOPEN;\n        case 3:\n        case \"STATE_OPEN\":\n            return State.STATE_OPEN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return State.UNRECOGNIZED;\n    }\n}\nexport function stateToJSON(object) {\n    switch (object) {\n        case State.STATE_UNINITIALIZED_UNSPECIFIED:\n            return \"STATE_UNINITIALIZED_UNSPECIFIED\";\n        case State.STATE_INIT:\n            return \"STATE_INIT\";\n        case State.STATE_TRYOPEN:\n            return \"STATE_TRYOPEN\";\n        case State.STATE_OPEN:\n            return \"STATE_OPEN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseConnectionEnd = { clientId: \"\", state: 0, delayPeriod: 0 };\nexport const ConnectionEnd = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(24).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.state = reader.int32();\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionEnd };\n        message.versions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseIdentifiedConnection = {\n    id: \"\",\n    clientId: \"\",\n    state: 0,\n    delayPeriod: 0,\n};\nexport const IdentifiedConnection = {\n    encode(message, writer = Writer.create()) {\n        if (message.id !== \"\") {\n            writer.uint32(10).string(message.id);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(18).string(message.clientId);\n        }\n        for (const v of message.versions) {\n            Version.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.state !== 0) {\n            writer.uint32(32).int32(message.state);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(48).uint64(message.delayPeriod);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.id = reader.string();\n                    break;\n                case 2:\n                    message.clientId = reader.string();\n                    break;\n                case 3:\n                    message.versions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.state = reader.int32();\n                    break;\n                case 5:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = String(object.id);\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = stateFromJSON(object.state);\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.id !== undefined && (obj.id = message.id);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.versions) {\n            obj.versions = message.versions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.versions = [];\n        }\n        message.state !== undefined && (obj.state = stateToJSON(message.state));\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedConnection };\n        message.versions = [];\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.versions !== undefined && object.versions !== null) {\n            for (const e of object.versions) {\n                message.versions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = 0;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        return message;\n    },\n};\nconst baseCounterparty = { clientId: \"\", connectionId: \"\" };\nexport const Counterparty = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.connectionId !== \"\") {\n            writer.uint32(18).string(message.connectionId);\n        }\n        if (message.prefix !== undefined) {\n            MerklePrefix.encode(message.prefix, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCounterparty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.connectionId = reader.string();\n                    break;\n                case 3:\n                    message.prefix = MerklePrefix.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromJSON(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.prefix !== undefined &&\n            (obj.prefix = message.prefix\n                ? MerklePrefix.toJSON(message.prefix)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCounterparty };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = MerklePrefix.fromPartial(object.prefix);\n        }\n        else {\n            message.prefix = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientPaths = { paths: \"\" };\nexport const ClientPaths = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.paths) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientPaths };\n        message.paths = [];\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseConnectionPaths = { clientId: \"\", paths: \"\" };\nexport const ConnectionPaths = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.paths) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.paths.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.paths) {\n            obj.paths = message.paths.map((e) => e);\n        }\n        else {\n            obj.paths = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConnectionPaths };\n        message.paths = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.paths !== undefined && object.paths !== null) {\n            for (const e of object.paths) {\n                message.paths.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVersion = { identifier: \"\", features: \"\" };\nexport const Version = {\n    encode(message, writer = Writer.create()) {\n        if (message.identifier !== \"\") {\n            writer.uint32(10).string(message.identifier);\n        }\n        for (const v of message.features) {\n            writer.uint32(18).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVersion };\n        message.features = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.identifier = reader.string();\n                    break;\n                case 2:\n                    message.features.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = String(object.identifier);\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.identifier !== undefined && (obj.identifier = message.identifier);\n        if (message.features) {\n            obj.features = message.features.map((e) => e);\n        }\n        else {\n            obj.features = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVersion };\n        message.features = [];\n        if (object.identifier !== undefined && object.identifier !== null) {\n            message.identifier = object.identifier;\n        }\n        else {\n            message.identifier = \"\";\n        }\n        if (object.features !== undefined && object.features !== null) {\n            for (const e of object.features) {\n                message.features.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst baseProof = { total: 0, index: 0 };\nexport const Proof = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).int64(message.total);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).int64(message.index);\n        }\n        if (message.leafHash.length !== 0) {\n            writer.uint32(26).bytes(message.leafHash);\n        }\n        for (const v of message.aunts) {\n            writer.uint32(34).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProof };\n        message.aunts = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.index = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.leafHash = reader.bytes();\n                    break;\n                case 4:\n                    message.aunts.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = bytesFromBase64(object.leafHash);\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.index !== undefined && (obj.index = message.index);\n        message.leafHash !== undefined &&\n            (obj.leafHash = base64FromBytes(message.leafHash !== undefined ? message.leafHash : new Uint8Array()));\n        if (message.aunts) {\n            obj.aunts = message.aunts.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.aunts = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProof };\n        message.aunts = [];\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.leafHash !== undefined && object.leafHash !== null) {\n            message.leafHash = object.leafHash;\n        }\n        else {\n            message.leafHash = new Uint8Array();\n        }\n        if (object.aunts !== undefined && object.aunts !== null) {\n            for (const e of object.aunts) {\n                message.aunts.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseValueOp = {};\nexport const ValueOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValueOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValueOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseDominoOp = { key: \"\", input: \"\", output: \"\" };\nexport const DominoOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.input !== \"\") {\n            writer.uint32(18).string(message.input);\n        }\n        if (message.output !== \"\") {\n            writer.uint32(26).string(message.output);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDominoOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.input = reader.string();\n                    break;\n                case 3:\n                    message.output = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = String(object.input);\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = String(object.output);\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.input !== undefined && (obj.input = message.input);\n        message.output !== undefined && (obj.output = message.output);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDominoOp };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.input !== undefined && object.input !== null) {\n            message.input = object.input;\n        }\n        else {\n            message.input = \"\";\n        }\n        if (object.output !== undefined && object.output !== null) {\n            message.output = object.output;\n        }\n        else {\n            message.output = \"\";\n        }\n        return message;\n    },\n};\nconst baseProofOp = { type: \"\" };\nexport const ProofOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(18).bytes(message.key);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(26).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.key = reader.bytes();\n                    break;\n                case 3:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOp };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofOps = {};\nexport const ProofOps = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.ops) {\n            ProofOp.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofOps };\n        message.ops = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ops.push(ProofOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.ops) {\n            obj.ops = message.ops.map((e) => (e ? ProofOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.ops = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofOps };\n        message.ops = [];\n        if (object.ops !== undefined && object.ops !== null) {\n            for (const e of object.ops) {\n                message.ops.push(ProofOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin, Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseParams = {\n    communityTax: \"\",\n    baseProposerReward: \"\",\n    bonusProposerReward: \"\",\n    withdrawAddrEnabled: false,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.communityTax !== \"\") {\n            writer.uint32(10).string(message.communityTax);\n        }\n        if (message.baseProposerReward !== \"\") {\n            writer.uint32(18).string(message.baseProposerReward);\n        }\n        if (message.bonusProposerReward !== \"\") {\n            writer.uint32(26).string(message.bonusProposerReward);\n        }\n        if (message.withdrawAddrEnabled === true) {\n            writer.uint32(32).bool(message.withdrawAddrEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityTax = reader.string();\n                    break;\n                case 2:\n                    message.baseProposerReward = reader.string();\n                    break;\n                case 3:\n                    message.bonusProposerReward = reader.string();\n                    break;\n                case 4:\n                    message.withdrawAddrEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = String(object.communityTax);\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = String(object.baseProposerReward);\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = String(object.bonusProposerReward);\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = Boolean(object.withdrawAddrEnabled);\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.communityTax !== undefined &&\n            (obj.communityTax = message.communityTax);\n        message.baseProposerReward !== undefined &&\n            (obj.baseProposerReward = message.baseProposerReward);\n        message.bonusProposerReward !== undefined &&\n            (obj.bonusProposerReward = message.bonusProposerReward);\n        message.withdrawAddrEnabled !== undefined &&\n            (obj.withdrawAddrEnabled = message.withdrawAddrEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.communityTax !== undefined && object.communityTax !== null) {\n            message.communityTax = object.communityTax;\n        }\n        else {\n            message.communityTax = \"\";\n        }\n        if (object.baseProposerReward !== undefined &&\n            object.baseProposerReward !== null) {\n            message.baseProposerReward = object.baseProposerReward;\n        }\n        else {\n            message.baseProposerReward = \"\";\n        }\n        if (object.bonusProposerReward !== undefined &&\n            object.bonusProposerReward !== null) {\n            message.bonusProposerReward = object.bonusProposerReward;\n        }\n        else {\n            message.bonusProposerReward = \"\";\n        }\n        if (object.withdrawAddrEnabled !== undefined &&\n            object.withdrawAddrEnabled !== null) {\n            message.withdrawAddrEnabled = object.withdrawAddrEnabled;\n        }\n        else {\n            message.withdrawAddrEnabled = false;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewards = { referenceCount: 0 };\nexport const ValidatorHistoricalRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.cumulativeRewardRatio) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.referenceCount !== 0) {\n            writer.uint32(16).uint32(message.referenceCount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeRewardRatio.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.referenceCount = reader.uint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = Number(object.referenceCount);\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.cumulativeRewardRatio) {\n            obj.cumulativeRewardRatio = message.cumulativeRewardRatio.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.cumulativeRewardRatio = [];\n        }\n        message.referenceCount !== undefined &&\n            (obj.referenceCount = message.referenceCount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewards,\n        };\n        message.cumulativeRewardRatio = [];\n        if (object.cumulativeRewardRatio !== undefined &&\n            object.cumulativeRewardRatio !== null) {\n            for (const e of object.cumulativeRewardRatio) {\n                message.cumulativeRewardRatio.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.referenceCount !== undefined && object.referenceCount !== null) {\n            message.referenceCount = object.referenceCount;\n        }\n        else {\n            message.referenceCount = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewards = { period: 0 };\nexport const ValidatorCurrentRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        message.period !== undefined && (obj.period = message.period);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommission = {};\nexport const ValidatorAccumulatedCommission = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.commission) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.commission.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.commission) {\n            obj.commission = message.commission.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.commission = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommission,\n        };\n        message.commission = [];\n        if (object.commission !== undefined && object.commission !== null) {\n            for (const e of object.commission) {\n                message.commission.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewards = {};\nexport const ValidatorOutstandingRewards = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.rewards) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.rewards) {\n            obj.rewards = message.rewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.rewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewards,\n        };\n        message.rewards = [];\n        if (object.rewards !== undefined && object.rewards !== null) {\n            for (const e of object.rewards) {\n                message.rewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvent = { validatorPeriod: 0, fraction: \"\" };\nexport const ValidatorSlashEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorPeriod !== 0) {\n            writer.uint32(8).uint64(message.validatorPeriod);\n        }\n        if (message.fraction !== \"\") {\n            writer.uint32(18).string(message.fraction);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvent };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.fraction = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = Number(object.validatorPeriod);\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = String(object.fraction);\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorPeriod !== undefined &&\n            (obj.validatorPeriod = message.validatorPeriod);\n        message.fraction !== undefined && (obj.fraction = message.fraction);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvent };\n        if (object.validatorPeriod !== undefined &&\n            object.validatorPeriod !== null) {\n            message.validatorPeriod = object.validatorPeriod;\n        }\n        else {\n            message.validatorPeriod = 0;\n        }\n        if (object.fraction !== undefined && object.fraction !== null) {\n            message.fraction = object.fraction;\n        }\n        else {\n            message.fraction = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEvents = {};\nexport const ValidatorSlashEvents = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEvent.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorSlashEvents.push(ValidatorSlashEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSlashEvents };\n        message.validatorSlashEvents = [];\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseFeePool = {};\nexport const FeePool = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.communityPool) {\n            DecCoin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.communityPool.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.communityPool) {\n            obj.communityPool = message.communityPool.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.communityPool = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseFeePool };\n        message.communityPool = [];\n        if (object.communityPool !== undefined && object.communityPool !== null) {\n            for (const e of object.communityPool) {\n                message.communityPool.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposal = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n};\nexport const CommunityPoolSpendProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposal,\n        };\n        message.amount = [];\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfo = {\n    previousPeriod: 0,\n    stake: \"\",\n    height: 0,\n};\nexport const DelegatorStartingInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.previousPeriod !== 0) {\n            writer.uint32(8).uint64(message.previousPeriod);\n        }\n        if (message.stake !== \"\") {\n            writer.uint32(18).string(message.stake);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).uint64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorStartingInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.previousPeriod = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.stake = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = Number(object.previousPeriod);\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = String(object.stake);\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.previousPeriod !== undefined &&\n            (obj.previousPeriod = message.previousPeriod);\n        message.stake !== undefined && (obj.stake = message.stake);\n        message.height !== undefined && (obj.height = message.height);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorStartingInfo };\n        if (object.previousPeriod !== undefined && object.previousPeriod !== null) {\n            message.previousPeriod = object.previousPeriod;\n        }\n        else {\n            message.previousPeriod = 0;\n        }\n        if (object.stake !== undefined && object.stake !== null) {\n            message.stake = object.stake;\n        }\n        else {\n            message.stake = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        return message;\n    },\n};\nconst baseDelegationDelegatorReward = { validatorAddress: \"\" };\nexport const DelegationDelegatorReward = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.reward) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.reward.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.reward) {\n            obj.reward = message.reward.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.reward = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegationDelegatorReward,\n        };\n        message.reward = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.reward !== undefined && object.reward !== null) {\n            for (const e of object.reward) {\n                message.reward.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommunityPoolSpendProposalWithDeposit = {\n    title: \"\",\n    description: \"\",\n    recipient: \"\",\n    amount: \"\",\n    deposit: \"\",\n};\nexport const CommunityPoolSpendProposalWithDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.recipient !== \"\") {\n            writer.uint32(26).string(message.recipient);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(34).string(message.amount);\n        }\n        if (message.deposit !== \"\") {\n            writer.uint32(42).string(message.deposit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.recipient = reader.string();\n                    break;\n                case 4:\n                    message.amount = reader.string();\n                    break;\n                case 5:\n                    message.deposit = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = String(object.recipient);\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = String(object.deposit);\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.recipient !== undefined && (obj.recipient = message.recipient);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.deposit !== undefined && (obj.deposit = message.deposit);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCommunityPoolSpendProposalWithDeposit,\n        };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.recipient !== undefined && object.recipient !== null) {\n            message.recipient = object.recipient;\n        }\n        else {\n            message.recipient = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        if (object.deposit !== undefined && object.deposit !== null) {\n            message.deposit = object.deposit;\n        }\n        else {\n            message.deposit = \"\";\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.slashing.v1beta1\";\nconst baseValidatorSigningInfo = {\n    address: \"\",\n    startHeight: 0,\n    indexOffset: 0,\n    tombstoned: false,\n    missedBlocksCounter: 0,\n};\nexport const ValidatorSigningInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.startHeight !== 0) {\n            writer.uint32(16).int64(message.startHeight);\n        }\n        if (message.indexOffset !== 0) {\n            writer.uint32(24).int64(message.indexOffset);\n        }\n        if (message.jailedUntil !== undefined) {\n            Timestamp.encode(toTimestamp(message.jailedUntil), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.tombstoned === true) {\n            writer.uint32(40).bool(message.tombstoned);\n        }\n        if (message.missedBlocksCounter !== 0) {\n            writer.uint32(48).int64(message.missedBlocksCounter);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSigningInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.startHeight = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.indexOffset = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.jailedUntil = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.tombstoned = reader.bool();\n                    break;\n                case 6:\n                    message.missedBlocksCounter = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = Number(object.startHeight);\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = Number(object.indexOffset);\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = fromJsonTimestamp(object.jailedUntil);\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = Boolean(object.tombstoned);\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = Number(object.missedBlocksCounter);\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.startHeight !== undefined &&\n            (obj.startHeight = message.startHeight);\n        message.indexOffset !== undefined &&\n            (obj.indexOffset = message.indexOffset);\n        message.jailedUntil !== undefined &&\n            (obj.jailedUntil =\n                message.jailedUntil !== undefined\n                    ? message.jailedUntil.toISOString()\n                    : null);\n        message.tombstoned !== undefined && (obj.tombstoned = message.tombstoned);\n        message.missedBlocksCounter !== undefined &&\n            (obj.missedBlocksCounter = message.missedBlocksCounter);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSigningInfo };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.startHeight !== undefined && object.startHeight !== null) {\n            message.startHeight = object.startHeight;\n        }\n        else {\n            message.startHeight = 0;\n        }\n        if (object.indexOffset !== undefined && object.indexOffset !== null) {\n            message.indexOffset = object.indexOffset;\n        }\n        else {\n            message.indexOffset = 0;\n        }\n        if (object.jailedUntil !== undefined && object.jailedUntil !== null) {\n            message.jailedUntil = object.jailedUntil;\n        }\n        else {\n            message.jailedUntil = undefined;\n        }\n        if (object.tombstoned !== undefined && object.tombstoned !== null) {\n            message.tombstoned = object.tombstoned;\n        }\n        else {\n            message.tombstoned = false;\n        }\n        if (object.missedBlocksCounter !== undefined &&\n            object.missedBlocksCounter !== null) {\n            message.missedBlocksCounter = object.missedBlocksCounter;\n        }\n        else {\n            message.missedBlocksCounter = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { signedBlocksWindow: 0 };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedBlocksWindow !== 0) {\n            writer.uint32(8).int64(message.signedBlocksWindow);\n        }\n        if (message.minSignedPerWindow.length !== 0) {\n            writer.uint32(18).bytes(message.minSignedPerWindow);\n        }\n        if (message.downtimeJailDuration !== undefined) {\n            Duration.encode(message.downtimeJailDuration, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.slashFractionDoubleSign.length !== 0) {\n            writer.uint32(34).bytes(message.slashFractionDoubleSign);\n        }\n        if (message.slashFractionDowntime.length !== 0) {\n            writer.uint32(42).bytes(message.slashFractionDowntime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedBlocksWindow = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.minSignedPerWindow = reader.bytes();\n                    break;\n                case 3:\n                    message.downtimeJailDuration = Duration.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.slashFractionDoubleSign = reader.bytes();\n                    break;\n                case 5:\n                    message.slashFractionDowntime = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = Number(object.signedBlocksWindow);\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = bytesFromBase64(object.minSignedPerWindow);\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromJSON(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = bytesFromBase64(object.slashFractionDoubleSign);\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = bytesFromBase64(object.slashFractionDowntime);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedBlocksWindow !== undefined &&\n            (obj.signedBlocksWindow = message.signedBlocksWindow);\n        message.minSignedPerWindow !== undefined &&\n            (obj.minSignedPerWindow = base64FromBytes(message.minSignedPerWindow !== undefined\n                ? message.minSignedPerWindow\n                : new Uint8Array()));\n        message.downtimeJailDuration !== undefined &&\n            (obj.downtimeJailDuration = message.downtimeJailDuration\n                ? Duration.toJSON(message.downtimeJailDuration)\n                : undefined);\n        message.slashFractionDoubleSign !== undefined &&\n            (obj.slashFractionDoubleSign = base64FromBytes(message.slashFractionDoubleSign !== undefined\n                ? message.slashFractionDoubleSign\n                : new Uint8Array()));\n        message.slashFractionDowntime !== undefined &&\n            (obj.slashFractionDowntime = base64FromBytes(message.slashFractionDowntime !== undefined\n                ? message.slashFractionDowntime\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.signedBlocksWindow !== undefined &&\n            object.signedBlocksWindow !== null) {\n            message.signedBlocksWindow = object.signedBlocksWindow;\n        }\n        else {\n            message.signedBlocksWindow = 0;\n        }\n        if (object.minSignedPerWindow !== undefined &&\n            object.minSignedPerWindow !== null) {\n            message.minSignedPerWindow = object.minSignedPerWindow;\n        }\n        else {\n            message.minSignedPerWindow = new Uint8Array();\n        }\n        if (object.downtimeJailDuration !== undefined &&\n            object.downtimeJailDuration !== null) {\n            message.downtimeJailDuration = Duration.fromPartial(object.downtimeJailDuration);\n        }\n        else {\n            message.downtimeJailDuration = undefined;\n        }\n        if (object.slashFractionDoubleSign !== undefined &&\n            object.slashFractionDoubleSign !== null) {\n            message.slashFractionDoubleSign = object.slashFractionDoubleSign;\n        }\n        else {\n            message.slashFractionDoubleSign = new Uint8Array();\n        }\n        if (object.slashFractionDowntime !== undefined &&\n            object.slashFractionDowntime !== null) {\n            message.slashFractionDowntime = object.slashFractionDowntime;\n        }\n        else {\n            message.slashFractionDowntime = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, Writer } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.evidence.v1beta1\";\nconst baseMsgSubmitEvidence = { submitter: \"\" };\nexport const MsgSubmitEvidence = {\n    encode(message, writer = Writer.create()) {\n        if (message.submitter !== \"\") {\n            writer.uint32(10).string(message.submitter);\n        }\n        if (message.evidence !== undefined) {\n            Any.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitEvidence };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.submitter = reader.string();\n                    break;\n                case 2:\n                    message.evidence = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = String(object.submitter);\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromJSON(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.submitter !== undefined && (obj.submitter = message.submitter);\n        message.evidence !== undefined &&\n            (obj.evidence = message.evidence\n                ? Any.toJSON(message.evidence)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitEvidence };\n        if (object.submitter !== undefined && object.submitter !== null) {\n            message.submitter = object.submitter;\n        }\n        else {\n            message.submitter = \"\";\n        }\n        if (object.evidence !== undefined && object.evidence !== null) {\n            message.evidence = Any.fromPartial(object.evidence);\n        }\n        else {\n            message.evidence = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitEvidenceResponse = {};\nexport const MsgSubmitEvidenceResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 4:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitEvidenceResponse,\n        };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitEvidence(request) {\n        const data = MsgSubmitEvidence.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.evidence.v1beta1.Msg\", \"SubmitEvidence\", data);\n        return promise.then((data) => MsgSubmitEvidenceResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { DecCoin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { ValidatorAccumulatedCommission, ValidatorHistoricalRewards, ValidatorCurrentRewards, DelegatorStartingInfo, ValidatorSlashEvent, Params, FeePool, } from \"../../../cosmos/distribution/v1beta1/distribution\";\nexport const protobufPackage = \"cosmos.distribution.v1beta1\";\nconst baseDelegatorWithdrawInfo = {\n    delegatorAddress: \"\",\n    withdrawAddress: \"\",\n};\nexport const DelegatorWithdrawInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.withdrawAddress !== \"\") {\n            writer.uint32(18).string(message.withdrawAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDelegatorWithdrawInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.withdrawAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = String(object.withdrawAddress);\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.withdrawAddress !== undefined &&\n            (obj.withdrawAddress = message.withdrawAddress);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDelegatorWithdrawInfo };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.withdrawAddress !== undefined &&\n            object.withdrawAddress !== null) {\n            message.withdrawAddress = object.withdrawAddress;\n        }\n        else {\n            message.withdrawAddress = \"\";\n        }\n        return message;\n    },\n};\nconst baseValidatorOutstandingRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorOutstandingRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        for (const v of message.outstandingRewards) {\n            DecCoin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.outstandingRewards.push(DecCoin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? DecCoin.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorOutstandingRewardsRecord,\n        };\n        message.outstandingRewards = [];\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(DecCoin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseValidatorAccumulatedCommissionRecord = {\n    validatorAddress: \"\",\n};\nexport const ValidatorAccumulatedCommissionRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.accumulated !== undefined) {\n            ValidatorAccumulatedCommission.encode(message.accumulated, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.accumulated = ValidatorAccumulatedCommission.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromJSON(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.accumulated !== undefined &&\n            (obj.accumulated = message.accumulated\n                ? ValidatorAccumulatedCommission.toJSON(message.accumulated)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorAccumulatedCommissionRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.accumulated !== undefined && object.accumulated !== null) {\n            message.accumulated = ValidatorAccumulatedCommission.fromPartial(object.accumulated);\n        }\n        else {\n            message.accumulated = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorHistoricalRewardsRecord = {\n    validatorAddress: \"\",\n    period: 0,\n};\nexport const ValidatorHistoricalRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.period !== 0) {\n            writer.uint32(16).uint64(message.period);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorHistoricalRewards.encode(message.rewards, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.rewards = ValidatorHistoricalRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.period !== undefined && (obj.period = message.period);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorHistoricalRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorHistoricalRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorHistoricalRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorCurrentRewardsRecord = { validatorAddress: \"\" };\nexport const ValidatorCurrentRewardsRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.rewards !== undefined) {\n            ValidatorCurrentRewards.encode(message.rewards, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.rewards = ValidatorCurrentRewards.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromJSON(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.rewards !== undefined &&\n            (obj.rewards = message.rewards\n                ? ValidatorCurrentRewards.toJSON(message.rewards)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorCurrentRewardsRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.rewards !== undefined && object.rewards !== null) {\n            message.rewards = ValidatorCurrentRewards.fromPartial(object.rewards);\n        }\n        else {\n            message.rewards = undefined;\n        }\n        return message;\n    },\n};\nconst baseDelegatorStartingInfoRecord = {\n    delegatorAddress: \"\",\n    validatorAddress: \"\",\n};\nexport const DelegatorStartingInfoRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.delegatorAddress !== \"\") {\n            writer.uint32(10).string(message.delegatorAddress);\n        }\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(18).string(message.validatorAddress);\n        }\n        if (message.startingInfo !== undefined) {\n            DelegatorStartingInfo.encode(message.startingInfo, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.delegatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 3:\n                    message.startingInfo = DelegatorStartingInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = String(object.delegatorAddress);\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromJSON(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.delegatorAddress !== undefined &&\n            (obj.delegatorAddress = message.delegatorAddress);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.startingInfo !== undefined &&\n            (obj.startingInfo = message.startingInfo\n                ? DelegatorStartingInfo.toJSON(message.startingInfo)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseDelegatorStartingInfoRecord,\n        };\n        if (object.delegatorAddress !== undefined &&\n            object.delegatorAddress !== null) {\n            message.delegatorAddress = object.delegatorAddress;\n        }\n        else {\n            message.delegatorAddress = \"\";\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.startingInfo !== undefined && object.startingInfo !== null) {\n            message.startingInfo = DelegatorStartingInfo.fromPartial(object.startingInfo);\n        }\n        else {\n            message.startingInfo = undefined;\n        }\n        return message;\n    },\n};\nconst baseValidatorSlashEventRecord = {\n    validatorAddress: \"\",\n    height: 0,\n    period: 0,\n};\nexport const ValidatorSlashEventRecord = {\n    encode(message, writer = Writer.create()) {\n        if (message.validatorAddress !== \"\") {\n            writer.uint32(10).string(message.validatorAddress);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).uint64(message.height);\n        }\n        if (message.period !== 0) {\n            writer.uint32(24).uint64(message.period);\n        }\n        if (message.validatorSlashEvent !== undefined) {\n            ValidatorSlashEvent.encode(message.validatorSlashEvent, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validatorAddress = reader.string();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.period = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.validatorSlashEvent = ValidatorSlashEvent.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = String(object.validatorAddress);\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = Number(object.period);\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromJSON(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = message.validatorAddress);\n        message.height !== undefined && (obj.height = message.height);\n        message.period !== undefined && (obj.period = message.period);\n        message.validatorSlashEvent !== undefined &&\n            (obj.validatorSlashEvent = message.validatorSlashEvent\n                ? ValidatorSlashEvent.toJSON(message.validatorSlashEvent)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseValidatorSlashEventRecord,\n        };\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.period !== undefined && object.period !== null) {\n            message.period = object.period;\n        }\n        else {\n            message.period = 0;\n        }\n        if (object.validatorSlashEvent !== undefined &&\n            object.validatorSlashEvent !== null) {\n            message.validatorSlashEvent = ValidatorSlashEvent.fromPartial(object.validatorSlashEvent);\n        }\n        else {\n            message.validatorSlashEvent = undefined;\n        }\n        return message;\n    },\n};\nconst baseGenesisState = { previousProposer: \"\" };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.feePool !== undefined) {\n            FeePool.encode(message.feePool, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.delegatorWithdrawInfos) {\n            DelegatorWithdrawInfo.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.previousProposer !== \"\") {\n            writer.uint32(34).string(message.previousProposer);\n        }\n        for (const v of message.outstandingRewards) {\n            ValidatorOutstandingRewardsRecord.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.validatorAccumulatedCommissions) {\n            ValidatorAccumulatedCommissionRecord.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.validatorHistoricalRewards) {\n            ValidatorHistoricalRewardsRecord.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        for (const v of message.validatorCurrentRewards) {\n            ValidatorCurrentRewardsRecord.encode(v, writer.uint32(66).fork()).ldelim();\n        }\n        for (const v of message.delegatorStartingInfos) {\n            DelegatorStartingInfoRecord.encode(v, writer.uint32(74).fork()).ldelim();\n        }\n        for (const v of message.validatorSlashEvents) {\n            ValidatorSlashEventRecord.encode(v, writer.uint32(82).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.feePool = FeePool.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.previousProposer = reader.string();\n                    break;\n                case 5:\n                    message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.validatorSlashEvents.push(ValidatorSlashEventRecord.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromJSON(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromJSON(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = String(object.previousProposer);\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromJSON(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromJSON(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.feePool !== undefined &&\n            (obj.feePool = message.feePool\n                ? FeePool.toJSON(message.feePool)\n                : undefined);\n        if (message.delegatorWithdrawInfos) {\n            obj.delegatorWithdrawInfos = message.delegatorWithdrawInfos.map((e) => e ? DelegatorWithdrawInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorWithdrawInfos = [];\n        }\n        message.previousProposer !== undefined &&\n            (obj.previousProposer = message.previousProposer);\n        if (message.outstandingRewards) {\n            obj.outstandingRewards = message.outstandingRewards.map((e) => e ? ValidatorOutstandingRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.outstandingRewards = [];\n        }\n        if (message.validatorAccumulatedCommissions) {\n            obj.validatorAccumulatedCommissions = message.validatorAccumulatedCommissions.map((e) => (e ? ValidatorAccumulatedCommissionRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorAccumulatedCommissions = [];\n        }\n        if (message.validatorHistoricalRewards) {\n            obj.validatorHistoricalRewards = message.validatorHistoricalRewards.map((e) => (e ? ValidatorHistoricalRewardsRecord.toJSON(e) : undefined));\n        }\n        else {\n            obj.validatorHistoricalRewards = [];\n        }\n        if (message.validatorCurrentRewards) {\n            obj.validatorCurrentRewards = message.validatorCurrentRewards.map((e) => e ? ValidatorCurrentRewardsRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorCurrentRewards = [];\n        }\n        if (message.delegatorStartingInfos) {\n            obj.delegatorStartingInfos = message.delegatorStartingInfos.map((e) => e ? DelegatorStartingInfoRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegatorStartingInfos = [];\n        }\n        if (message.validatorSlashEvents) {\n            obj.validatorSlashEvents = message.validatorSlashEvents.map((e) => e ? ValidatorSlashEventRecord.toJSON(e) : undefined);\n        }\n        else {\n            obj.validatorSlashEvents = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.delegatorWithdrawInfos = [];\n        message.outstandingRewards = [];\n        message.validatorAccumulatedCommissions = [];\n        message.validatorHistoricalRewards = [];\n        message.validatorCurrentRewards = [];\n        message.delegatorStartingInfos = [];\n        message.validatorSlashEvents = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.feePool !== undefined && object.feePool !== null) {\n            message.feePool = FeePool.fromPartial(object.feePool);\n        }\n        else {\n            message.feePool = undefined;\n        }\n        if (object.delegatorWithdrawInfos !== undefined &&\n            object.delegatorWithdrawInfos !== null) {\n            for (const e of object.delegatorWithdrawInfos) {\n                message.delegatorWithdrawInfos.push(DelegatorWithdrawInfo.fromPartial(e));\n            }\n        }\n        if (object.previousProposer !== undefined &&\n            object.previousProposer !== null) {\n            message.previousProposer = object.previousProposer;\n        }\n        else {\n            message.previousProposer = \"\";\n        }\n        if (object.outstandingRewards !== undefined &&\n            object.outstandingRewards !== null) {\n            for (const e of object.outstandingRewards) {\n                message.outstandingRewards.push(ValidatorOutstandingRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorAccumulatedCommissions !== undefined &&\n            object.validatorAccumulatedCommissions !== null) {\n            for (const e of object.validatorAccumulatedCommissions) {\n                message.validatorAccumulatedCommissions.push(ValidatorAccumulatedCommissionRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorHistoricalRewards !== undefined &&\n            object.validatorHistoricalRewards !== null) {\n            for (const e of object.validatorHistoricalRewards) {\n                message.validatorHistoricalRewards.push(ValidatorHistoricalRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorCurrentRewards !== undefined &&\n            object.validatorCurrentRewards !== null) {\n            for (const e of object.validatorCurrentRewards) {\n                message.validatorCurrentRewards.push(ValidatorCurrentRewardsRecord.fromPartial(e));\n            }\n        }\n        if (object.delegatorStartingInfos !== undefined &&\n            object.delegatorStartingInfos !== null) {\n            for (const e of object.delegatorStartingInfos) {\n                message.delegatorStartingInfos.push(DelegatorStartingInfoRecord.fromPartial(e));\n            }\n        }\n        if (object.validatorSlashEvents !== undefined &&\n            object.validatorSlashEvents !== null) {\n            for (const e of object.validatorSlashEvents) {\n                message.validatorSlashEvents.push(ValidatorSlashEventRecord.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.vesting.v1beta1\";\nconst baseMsgCreateVestingAccount = {\n    fromAddress: \"\",\n    toAddress: \"\",\n    endTime: 0,\n    delayed: false,\n};\nexport const MsgCreateVestingAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.fromAddress !== \"\") {\n            writer.uint32(10).string(message.fromAddress);\n        }\n        if (message.toAddress !== \"\") {\n            writer.uint32(18).string(message.toAddress);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.endTime !== 0) {\n            writer.uint32(32).int64(message.endTime);\n        }\n        if (message.delayed === true) {\n            writer.uint32(40).bool(message.delayed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fromAddress = reader.string();\n                    break;\n                case 2:\n                    message.toAddress = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.endTime = longToNumber(reader.int64());\n                    break;\n                case 5:\n                    message.delayed = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = String(object.fromAddress);\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = String(object.toAddress);\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = Number(object.endTime);\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = Boolean(object.delayed);\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.fromAddress !== undefined &&\n            (obj.fromAddress = message.fromAddress);\n        message.toAddress !== undefined && (obj.toAddress = message.toAddress);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.delayed !== undefined && (obj.delayed = message.delayed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgCreateVestingAccount,\n        };\n        message.amount = [];\n        if (object.fromAddress !== undefined && object.fromAddress !== null) {\n            message.fromAddress = object.fromAddress;\n        }\n        else {\n            message.fromAddress = \"\";\n        }\n        if (object.toAddress !== undefined && object.toAddress !== null) {\n            message.toAddress = object.toAddress;\n        }\n        else {\n            message.toAddress = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.endTime !== undefined && object.endTime !== null) {\n            message.endTime = object.endTime;\n        }\n        else {\n            message.endTime = 0;\n        }\n        if (object.delayed !== undefined && object.delayed !== null) {\n            message.delayed = object.delayed;\n        }\n        else {\n            message.delayed = false;\n        }\n        return message;\n    },\n};\nconst baseMsgCreateVestingAccountResponse = {};\nexport const MsgCreateVestingAccountResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgCreateVestingAccountResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    CreateVestingAccount(request) {\n        const data = MsgCreateVestingAccount.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.vesting.v1beta1.Msg\", \"CreateVestingAccount\", data);\n        return promise.then((data) => MsgCreateVestingAccountResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Channel, Packet } from \"../../../../ibc/core/channel/v1/channel\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.channel.v1\";\nconst baseMsgChannelOpenInit = { portId: \"\", signer: \"\" };\nexport const MsgChannelOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenInitResponse = {};\nexport const MsgChannelOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenTry = {\n    portId: \"\",\n    previousChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.previousChannelId !== \"\") {\n            writer.uint32(18).string(message.previousChannelId);\n        }\n        if (message.channel !== undefined) {\n            Channel.encode(message.channel, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(42).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenTry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.previousChannelId = reader.string();\n                    break;\n                case 3:\n                    message.channel = Channel.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = String(object.previousChannelId);\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromJSON(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.previousChannelId !== undefined &&\n            (obj.previousChannelId = message.previousChannelId);\n        message.channel !== undefined &&\n            (obj.channel = message.channel\n                ? Channel.toJSON(message.channel)\n                : undefined);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenTry };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.previousChannelId !== undefined &&\n            object.previousChannelId !== null) {\n            message.previousChannelId = object.previousChannelId;\n        }\n        else {\n            message.previousChannelId = \"\";\n        }\n        if (object.channel !== undefined && object.channel !== null) {\n            message.channel = Channel.fromPartial(object.channel);\n        }\n        else {\n            message.channel = undefined;\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenTryResponse = {};\nexport const MsgChannelOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenAck = {\n    portId: \"\",\n    channelId: \"\",\n    counterpartyChannelId: \"\",\n    counterpartyVersion: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.counterpartyChannelId !== \"\") {\n            writer.uint32(26).string(message.counterpartyChannelId);\n        }\n        if (message.counterpartyVersion !== \"\") {\n            writer.uint32(34).string(message.counterpartyVersion);\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(42).bytes(message.proofTry);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(58).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.counterpartyChannelId = reader.string();\n                    break;\n                case 4:\n                    message.counterpartyVersion = reader.string();\n                    break;\n                case 5:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 6:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = String(object.counterpartyChannelId);\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = String(object.counterpartyVersion);\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.counterpartyChannelId !== undefined &&\n            (obj.counterpartyChannelId = message.counterpartyChannelId);\n        message.counterpartyVersion !== undefined &&\n            (obj.counterpartyVersion = message.counterpartyVersion);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenAck };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.counterpartyChannelId !== undefined &&\n            object.counterpartyChannelId !== null) {\n            message.counterpartyChannelId = object.counterpartyChannelId;\n        }\n        else {\n            message.counterpartyChannelId = \"\";\n        }\n        if (object.counterpartyVersion !== undefined &&\n            object.counterpartyVersion !== null) {\n            message.counterpartyVersion = object.counterpartyVersion;\n        }\n        else {\n            message.counterpartyVersion = \"\";\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenAckResponse = {};\nexport const MsgChannelOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(26).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelOpenConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelOpenConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelOpenConfirmResponse = {};\nexport const MsgChannelOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseInit = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(26).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseInit };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseInitResponse = {};\nexport const MsgChannelCloseInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirm = {\n    portId: \"\",\n    channelId: \"\",\n    signer: \"\",\n};\nexport const MsgChannelCloseConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.portId !== \"\") {\n            writer.uint32(10).string(message.portId);\n        }\n        if (message.channelId !== \"\") {\n            writer.uint32(18).string(message.channelId);\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(26).bytes(message.proofInit);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgChannelCloseConfirm };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.portId = reader.string();\n                    break;\n                case 2:\n                    message.channelId = reader.string();\n                    break;\n                case 3:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = String(object.portId);\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = String(object.channelId);\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.portId !== undefined && (obj.portId = message.portId);\n        message.channelId !== undefined && (obj.channelId = message.channelId);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgChannelCloseConfirm };\n        if (object.portId !== undefined && object.portId !== null) {\n            message.portId = object.portId;\n        }\n        else {\n            message.portId = \"\";\n        }\n        if (object.channelId !== undefined && object.channelId !== null) {\n            message.channelId = object.channelId;\n        }\n        else {\n            message.channelId = \"\";\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgChannelCloseConfirmResponse = {};\nexport const MsgChannelCloseConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgChannelCloseConfirmResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgRecvPacket = { signer: \"\" };\nexport const MsgRecvPacket = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofCommitment.length !== 0) {\n            writer.uint32(18).bytes(message.proofCommitment);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacket };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofCommitment = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = bytesFromBase64(object.proofCommitment);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofCommitment !== undefined &&\n            (obj.proofCommitment = base64FromBytes(message.proofCommitment !== undefined\n                ? message.proofCommitment\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgRecvPacket };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofCommitment !== undefined &&\n            object.proofCommitment !== null) {\n            message.proofCommitment = object.proofCommitment;\n        }\n        else {\n            message.proofCommitment = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgRecvPacketResponse = {};\nexport const MsgRecvPacketResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgRecvPacketResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgRecvPacketResponse };\n        return message;\n    },\n};\nconst baseMsgTimeout = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeout = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(32).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeout };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeout };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutResponse = {};\nexport const MsgTimeoutResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTimeoutResponse };\n        return message;\n    },\n};\nconst baseMsgTimeoutOnClose = { nextSequenceRecv: 0, signer: \"\" };\nexport const MsgTimeoutOnClose = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proofUnreceived.length !== 0) {\n            writer.uint32(18).bytes(message.proofUnreceived);\n        }\n        if (message.proofClose.length !== 0) {\n            writer.uint32(26).bytes(message.proofClose);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.nextSequenceRecv !== 0) {\n            writer.uint32(40).uint64(message.nextSequenceRecv);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(50).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTimeoutOnClose };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.proofUnreceived = reader.bytes();\n                    break;\n                case 3:\n                    message.proofClose = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.nextSequenceRecv = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = bytesFromBase64(object.proofUnreceived);\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = bytesFromBase64(object.proofClose);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = Number(object.nextSequenceRecv);\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.proofUnreceived !== undefined &&\n            (obj.proofUnreceived = base64FromBytes(message.proofUnreceived !== undefined\n                ? message.proofUnreceived\n                : new Uint8Array()));\n        message.proofClose !== undefined &&\n            (obj.proofClose = base64FromBytes(message.proofClose !== undefined ? message.proofClose : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.nextSequenceRecv !== undefined &&\n            (obj.nextSequenceRecv = message.nextSequenceRecv);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTimeoutOnClose };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.proofUnreceived !== undefined &&\n            object.proofUnreceived !== null) {\n            message.proofUnreceived = object.proofUnreceived;\n        }\n        else {\n            message.proofUnreceived = new Uint8Array();\n        }\n        if (object.proofClose !== undefined && object.proofClose !== null) {\n            message.proofClose = object.proofClose;\n        }\n        else {\n            message.proofClose = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.nextSequenceRecv !== undefined &&\n            object.nextSequenceRecv !== null) {\n            message.nextSequenceRecv = object.nextSequenceRecv;\n        }\n        else {\n            message.nextSequenceRecv = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgTimeoutOnCloseResponse = {};\nexport const MsgTimeoutOnCloseResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgTimeoutOnCloseResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgAcknowledgement = { signer: \"\" };\nexport const MsgAcknowledgement = {\n    encode(message, writer = Writer.create()) {\n        if (message.packet !== undefined) {\n            Packet.encode(message.packet, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.acknowledgement.length !== 0) {\n            writer.uint32(18).bytes(message.acknowledgement);\n        }\n        if (message.proofAcked.length !== 0) {\n            writer.uint32(26).bytes(message.proofAcked);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgAcknowledgement };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.packet = Packet.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.acknowledgement = reader.bytes();\n                    break;\n                case 3:\n                    message.proofAcked = reader.bytes();\n                    break;\n                case 4:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromJSON(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = bytesFromBase64(object.acknowledgement);\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = bytesFromBase64(object.proofAcked);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.packet !== undefined &&\n            (obj.packet = message.packet ? Packet.toJSON(message.packet) : undefined);\n        message.acknowledgement !== undefined &&\n            (obj.acknowledgement = base64FromBytes(message.acknowledgement !== undefined\n                ? message.acknowledgement\n                : new Uint8Array()));\n        message.proofAcked !== undefined &&\n            (obj.proofAcked = base64FromBytes(message.proofAcked !== undefined ? message.proofAcked : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgAcknowledgement };\n        if (object.packet !== undefined && object.packet !== null) {\n            message.packet = Packet.fromPartial(object.packet);\n        }\n        else {\n            message.packet = undefined;\n        }\n        if (object.acknowledgement !== undefined &&\n            object.acknowledgement !== null) {\n            message.acknowledgement = object.acknowledgement;\n        }\n        else {\n            message.acknowledgement = new Uint8Array();\n        }\n        if (object.proofAcked !== undefined && object.proofAcked !== null) {\n            message.proofAcked = object.proofAcked;\n        }\n        else {\n            message.proofAcked = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgAcknowledgementResponse = {};\nexport const MsgAcknowledgementResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgAcknowledgementResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ChannelOpenInit(request) {\n        const data = MsgChannelOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenInit\", data);\n        return promise.then((data) => MsgChannelOpenInitResponse.decode(new Reader(data)));\n    }\n    ChannelOpenTry(request) {\n        const data = MsgChannelOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenTry\", data);\n        return promise.then((data) => MsgChannelOpenTryResponse.decode(new Reader(data)));\n    }\n    ChannelOpenAck(request) {\n        const data = MsgChannelOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenAck\", data);\n        return promise.then((data) => MsgChannelOpenAckResponse.decode(new Reader(data)));\n    }\n    ChannelOpenConfirm(request) {\n        const data = MsgChannelOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelOpenConfirm\", data);\n        return promise.then((data) => MsgChannelOpenConfirmResponse.decode(new Reader(data)));\n    }\n    ChannelCloseInit(request) {\n        const data = MsgChannelCloseInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseInit\", data);\n        return promise.then((data) => MsgChannelCloseInitResponse.decode(new Reader(data)));\n    }\n    ChannelCloseConfirm(request) {\n        const data = MsgChannelCloseConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"ChannelCloseConfirm\", data);\n        return promise.then((data) => MsgChannelCloseConfirmResponse.decode(new Reader(data)));\n    }\n    RecvPacket(request) {\n        const data = MsgRecvPacket.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"RecvPacket\", data);\n        return promise.then((data) => MsgRecvPacketResponse.decode(new Reader(data)));\n    }\n    Timeout(request) {\n        const data = MsgTimeout.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Timeout\", data);\n        return promise.then((data) => MsgTimeoutResponse.decode(new Reader(data)));\n    }\n    TimeoutOnClose(request) {\n        const data = MsgTimeoutOnClose.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"TimeoutOnClose\", data);\n        return promise.then((data) => MsgTimeoutOnCloseResponse.decode(new Reader(data)));\n    }\n    Acknowledgement(request) {\n        const data = MsgAcknowledgement.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.channel.v1.Msg\", \"Acknowledgement\", data);\n        return promise.then((data) => MsgAcknowledgementResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../google/protobuf/any\";\nexport const protobufPackage = \"cosmos.auth.v1beta1\";\nconst baseBaseAccount = { address: \"\", accountNumber: 0, sequence: 0 };\nexport const BaseAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            Any.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.accountNumber !== 0) {\n            writer.uint32(24).uint64(message.accountNumber);\n        }\n        if (message.sequence !== 0) {\n            writer.uint32(32).uint64(message.sequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBaseAccount };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.pubKey = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.accountNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = Number(object.accountNumber);\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = Number(object.sequence);\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey ? Any.toJSON(message.pubKey) : undefined);\n        message.accountNumber !== undefined &&\n            (obj.accountNumber = message.accountNumber);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBaseAccount };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = Any.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.accountNumber !== undefined && object.accountNumber !== null) {\n            message.accountNumber = object.accountNumber;\n        }\n        else {\n            message.accountNumber = 0;\n        }\n        if (object.sequence !== undefined && object.sequence !== null) {\n            message.sequence = object.sequence;\n        }\n        else {\n            message.sequence = 0;\n        }\n        return message;\n    },\n};\nconst baseModuleAccount = { name: \"\", permissions: \"\" };\nexport const ModuleAccount = {\n    encode(message, writer = Writer.create()) {\n        if (message.baseAccount !== undefined) {\n            BaseAccount.encode(message.baseAccount, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.name !== \"\") {\n            writer.uint32(18).string(message.name);\n        }\n        for (const v of message.permissions) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.baseAccount = BaseAccount.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 3:\n                    message.permissions.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromJSON(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = String(object.name);\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.baseAccount !== undefined &&\n            (obj.baseAccount = message.baseAccount\n                ? BaseAccount.toJSON(message.baseAccount)\n                : undefined);\n        message.name !== undefined && (obj.name = message.name);\n        if (message.permissions) {\n            obj.permissions = message.permissions.map((e) => e);\n        }\n        else {\n            obj.permissions = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseModuleAccount };\n        message.permissions = [];\n        if (object.baseAccount !== undefined && object.baseAccount !== null) {\n            message.baseAccount = BaseAccount.fromPartial(object.baseAccount);\n        }\n        else {\n            message.baseAccount = undefined;\n        }\n        if (object.name !== undefined && object.name !== null) {\n            message.name = object.name;\n        }\n        else {\n            message.name = \"\";\n        }\n        if (object.permissions !== undefined && object.permissions !== null) {\n            for (const e of object.permissions) {\n                message.permissions.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseParams = {\n    maxMemoCharacters: 0,\n    txSigLimit: 0,\n    txSizeCostPerByte: 0,\n    sigVerifyCostEd25519: 0,\n    sigVerifyCostSecp256k1: 0,\n};\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.maxMemoCharacters !== 0) {\n            writer.uint32(8).uint64(message.maxMemoCharacters);\n        }\n        if (message.txSigLimit !== 0) {\n            writer.uint32(16).uint64(message.txSigLimit);\n        }\n        if (message.txSizeCostPerByte !== 0) {\n            writer.uint32(24).uint64(message.txSizeCostPerByte);\n        }\n        if (message.sigVerifyCostEd25519 !== 0) {\n            writer.uint32(32).uint64(message.sigVerifyCostEd25519);\n        }\n        if (message.sigVerifyCostSecp256k1 !== 0) {\n            writer.uint32(40).uint64(message.sigVerifyCostSecp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.maxMemoCharacters = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.txSigLimit = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.txSizeCostPerByte = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.sigVerifyCostEd25519 = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.sigVerifyCostSecp256k1 = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = Number(object.maxMemoCharacters);\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = Number(object.txSigLimit);\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = Number(object.txSizeCostPerByte);\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = Number(object.sigVerifyCostEd25519);\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = Number(object.sigVerifyCostSecp256k1);\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.maxMemoCharacters !== undefined &&\n            (obj.maxMemoCharacters = message.maxMemoCharacters);\n        message.txSigLimit !== undefined && (obj.txSigLimit = message.txSigLimit);\n        message.txSizeCostPerByte !== undefined &&\n            (obj.txSizeCostPerByte = message.txSizeCostPerByte);\n        message.sigVerifyCostEd25519 !== undefined &&\n            (obj.sigVerifyCostEd25519 = message.sigVerifyCostEd25519);\n        message.sigVerifyCostSecp256k1 !== undefined &&\n            (obj.sigVerifyCostSecp256k1 = message.sigVerifyCostSecp256k1);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.maxMemoCharacters !== undefined &&\n            object.maxMemoCharacters !== null) {\n            message.maxMemoCharacters = object.maxMemoCharacters;\n        }\n        else {\n            message.maxMemoCharacters = 0;\n        }\n        if (object.txSigLimit !== undefined && object.txSigLimit !== null) {\n            message.txSigLimit = object.txSigLimit;\n        }\n        else {\n            message.txSigLimit = 0;\n        }\n        if (object.txSizeCostPerByte !== undefined &&\n            object.txSizeCostPerByte !== null) {\n            message.txSizeCostPerByte = object.txSizeCostPerByte;\n        }\n        else {\n            message.txSizeCostPerByte = 0;\n        }\n        if (object.sigVerifyCostEd25519 !== undefined &&\n            object.sigVerifyCostEd25519 !== null) {\n            message.sigVerifyCostEd25519 = object.sigVerifyCostEd25519;\n        }\n        else {\n            message.sigVerifyCostEd25519 = 0;\n        }\n        if (object.sigVerifyCostSecp256k1 !== undefined &&\n            object.sigVerifyCostSecp256k1 !== null) {\n            message.sigVerifyCostSecp256k1 = object.sigVerifyCostSecp256k1;\n        }\n        else {\n            message.sigVerifyCostSecp256k1 = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Duration } from \"../../../google/protobuf/duration\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\n/** VoteOption enumerates the valid vote options for a given governance proposal. */\nexport var VoteOption;\n(function (VoteOption) {\n    /** VOTE_OPTION_UNSPECIFIED - VOTE_OPTION_UNSPECIFIED defines a no-op vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_UNSPECIFIED\"] = 0] = \"VOTE_OPTION_UNSPECIFIED\";\n    /** VOTE_OPTION_YES - VOTE_OPTION_YES defines a yes vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_YES\"] = 1] = \"VOTE_OPTION_YES\";\n    /** VOTE_OPTION_ABSTAIN - VOTE_OPTION_ABSTAIN defines an abstain vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_ABSTAIN\"] = 2] = \"VOTE_OPTION_ABSTAIN\";\n    /** VOTE_OPTION_NO - VOTE_OPTION_NO defines a no vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO\"] = 3] = \"VOTE_OPTION_NO\";\n    /** VOTE_OPTION_NO_WITH_VETO - VOTE_OPTION_NO_WITH_VETO defines a no with veto vote option. */\n    VoteOption[VoteOption[\"VOTE_OPTION_NO_WITH_VETO\"] = 4] = \"VOTE_OPTION_NO_WITH_VETO\";\n    VoteOption[VoteOption[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(VoteOption || (VoteOption = {}));\nexport function voteOptionFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"VOTE_OPTION_UNSPECIFIED\":\n            return VoteOption.VOTE_OPTION_UNSPECIFIED;\n        case 1:\n        case \"VOTE_OPTION_YES\":\n            return VoteOption.VOTE_OPTION_YES;\n        case 2:\n        case \"VOTE_OPTION_ABSTAIN\":\n            return VoteOption.VOTE_OPTION_ABSTAIN;\n        case 3:\n        case \"VOTE_OPTION_NO\":\n            return VoteOption.VOTE_OPTION_NO;\n        case 4:\n        case \"VOTE_OPTION_NO_WITH_VETO\":\n            return VoteOption.VOTE_OPTION_NO_WITH_VETO;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return VoteOption.UNRECOGNIZED;\n    }\n}\nexport function voteOptionToJSON(object) {\n    switch (object) {\n        case VoteOption.VOTE_OPTION_UNSPECIFIED:\n            return \"VOTE_OPTION_UNSPECIFIED\";\n        case VoteOption.VOTE_OPTION_YES:\n            return \"VOTE_OPTION_YES\";\n        case VoteOption.VOTE_OPTION_ABSTAIN:\n            return \"VOTE_OPTION_ABSTAIN\";\n        case VoteOption.VOTE_OPTION_NO:\n            return \"VOTE_OPTION_NO\";\n        case VoteOption.VOTE_OPTION_NO_WITH_VETO:\n            return \"VOTE_OPTION_NO_WITH_VETO\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** ProposalStatus enumerates the valid statuses of a proposal. */\nexport var ProposalStatus;\n(function (ProposalStatus) {\n    /** PROPOSAL_STATUS_UNSPECIFIED - PROPOSAL_STATUS_UNSPECIFIED defines the default propopsal status. */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_UNSPECIFIED\"] = 0] = \"PROPOSAL_STATUS_UNSPECIFIED\";\n    /**\n     * PROPOSAL_STATUS_DEPOSIT_PERIOD - PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_DEPOSIT_PERIOD\"] = 1] = \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_VOTING_PERIOD - PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting\n     * period.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_VOTING_PERIOD\"] = 2] = \"PROPOSAL_STATUS_VOTING_PERIOD\";\n    /**\n     * PROPOSAL_STATUS_PASSED - PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has\n     * passed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_PASSED\"] = 3] = \"PROPOSAL_STATUS_PASSED\";\n    /**\n     * PROPOSAL_STATUS_REJECTED - PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has\n     * been rejected.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_REJECTED\"] = 4] = \"PROPOSAL_STATUS_REJECTED\";\n    /**\n     * PROPOSAL_STATUS_FAILED - PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has\n     * failed.\n     */\n    ProposalStatus[ProposalStatus[\"PROPOSAL_STATUS_FAILED\"] = 5] = \"PROPOSAL_STATUS_FAILED\";\n    ProposalStatus[ProposalStatus[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ProposalStatus || (ProposalStatus = {}));\nexport function proposalStatusFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"PROPOSAL_STATUS_UNSPECIFIED\":\n            return ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED;\n        case 1:\n        case \"PROPOSAL_STATUS_DEPOSIT_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD;\n        case 2:\n        case \"PROPOSAL_STATUS_VOTING_PERIOD\":\n            return ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD;\n        case 3:\n        case \"PROPOSAL_STATUS_PASSED\":\n            return ProposalStatus.PROPOSAL_STATUS_PASSED;\n        case 4:\n        case \"PROPOSAL_STATUS_REJECTED\":\n            return ProposalStatus.PROPOSAL_STATUS_REJECTED;\n        case 5:\n        case \"PROPOSAL_STATUS_FAILED\":\n            return ProposalStatus.PROPOSAL_STATUS_FAILED;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ProposalStatus.UNRECOGNIZED;\n    }\n}\nexport function proposalStatusToJSON(object) {\n    switch (object) {\n        case ProposalStatus.PROPOSAL_STATUS_UNSPECIFIED:\n            return \"PROPOSAL_STATUS_UNSPECIFIED\";\n        case ProposalStatus.PROPOSAL_STATUS_DEPOSIT_PERIOD:\n            return \"PROPOSAL_STATUS_DEPOSIT_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_VOTING_PERIOD:\n            return \"PROPOSAL_STATUS_VOTING_PERIOD\";\n        case ProposalStatus.PROPOSAL_STATUS_PASSED:\n            return \"PROPOSAL_STATUS_PASSED\";\n        case ProposalStatus.PROPOSAL_STATUS_REJECTED:\n            return \"PROPOSAL_STATUS_REJECTED\";\n        case ProposalStatus.PROPOSAL_STATUS_FAILED:\n            return \"PROPOSAL_STATUS_FAILED\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseTextProposal = { title: \"\", description: \"\" };\nexport const TextProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTextProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTextProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        return message;\n    },\n};\nconst baseDeposit = { proposalId: 0, depositor: \"\" };\nexport const Deposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseProposal = { proposalId: 0, status: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.status !== 0) {\n            writer.uint32(24).int32(message.status);\n        }\n        if (message.finalTallyResult !== undefined) {\n            TallyResult.encode(message.finalTallyResult, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.submitTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.submitTime), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.depositEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.depositEndTime), writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.totalDeposit) {\n            Coin.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.votingStartTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingStartTime), writer.uint32(66).fork()).ldelim();\n        }\n        if (message.votingEndTime !== undefined) {\n            Timestamp.encode(toTimestamp(message.votingEndTime), writer.uint32(74).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.status = reader.int32();\n                    break;\n                case 4:\n                    message.finalTallyResult = TallyResult.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.submitTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.depositEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.totalDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.votingStartTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 9:\n                    message.votingEndTime = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = proposalStatusFromJSON(object.status);\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromJSON(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = fromJsonTimestamp(object.submitTime);\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = fromJsonTimestamp(object.depositEndTime);\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = fromJsonTimestamp(object.votingStartTime);\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = fromJsonTimestamp(object.votingEndTime);\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        message.status !== undefined &&\n            (obj.status = proposalStatusToJSON(message.status));\n        message.finalTallyResult !== undefined &&\n            (obj.finalTallyResult = message.finalTallyResult\n                ? TallyResult.toJSON(message.finalTallyResult)\n                : undefined);\n        message.submitTime !== undefined &&\n            (obj.submitTime =\n                message.submitTime !== undefined\n                    ? message.submitTime.toISOString()\n                    : null);\n        message.depositEndTime !== undefined &&\n            (obj.depositEndTime =\n                message.depositEndTime !== undefined\n                    ? message.depositEndTime.toISOString()\n                    : null);\n        if (message.totalDeposit) {\n            obj.totalDeposit = message.totalDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.totalDeposit = [];\n        }\n        message.votingStartTime !== undefined &&\n            (obj.votingStartTime =\n                message.votingStartTime !== undefined\n                    ? message.votingStartTime.toISOString()\n                    : null);\n        message.votingEndTime !== undefined &&\n            (obj.votingEndTime =\n                message.votingEndTime !== undefined\n                    ? message.votingEndTime.toISOString()\n                    : null);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        message.totalDeposit = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.status !== undefined && object.status !== null) {\n            message.status = object.status;\n        }\n        else {\n            message.status = 0;\n        }\n        if (object.finalTallyResult !== undefined &&\n            object.finalTallyResult !== null) {\n            message.finalTallyResult = TallyResult.fromPartial(object.finalTallyResult);\n        }\n        else {\n            message.finalTallyResult = undefined;\n        }\n        if (object.submitTime !== undefined && object.submitTime !== null) {\n            message.submitTime = object.submitTime;\n        }\n        else {\n            message.submitTime = undefined;\n        }\n        if (object.depositEndTime !== undefined && object.depositEndTime !== null) {\n            message.depositEndTime = object.depositEndTime;\n        }\n        else {\n            message.depositEndTime = undefined;\n        }\n        if (object.totalDeposit !== undefined && object.totalDeposit !== null) {\n            for (const e of object.totalDeposit) {\n                message.totalDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.votingStartTime !== undefined &&\n            object.votingStartTime !== null) {\n            message.votingStartTime = object.votingStartTime;\n        }\n        else {\n            message.votingStartTime = undefined;\n        }\n        if (object.votingEndTime !== undefined && object.votingEndTime !== null) {\n            message.votingEndTime = object.votingEndTime;\n        }\n        else {\n            message.votingEndTime = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyResult = {\n    yes: \"\",\n    abstain: \"\",\n    no: \"\",\n    noWithVeto: \"\",\n};\nexport const TallyResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.yes !== \"\") {\n            writer.uint32(10).string(message.yes);\n        }\n        if (message.abstain !== \"\") {\n            writer.uint32(18).string(message.abstain);\n        }\n        if (message.no !== \"\") {\n            writer.uint32(26).string(message.no);\n        }\n        if (message.noWithVeto !== \"\") {\n            writer.uint32(34).string(message.noWithVeto);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyResult };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.yes = reader.string();\n                    break;\n                case 2:\n                    message.abstain = reader.string();\n                    break;\n                case 3:\n                    message.no = reader.string();\n                    break;\n                case 4:\n                    message.noWithVeto = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = String(object.yes);\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = String(object.abstain);\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = String(object.no);\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = String(object.noWithVeto);\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.yes !== undefined && (obj.yes = message.yes);\n        message.abstain !== undefined && (obj.abstain = message.abstain);\n        message.no !== undefined && (obj.no = message.no);\n        message.noWithVeto !== undefined && (obj.noWithVeto = message.noWithVeto);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyResult };\n        if (object.yes !== undefined && object.yes !== null) {\n            message.yes = object.yes;\n        }\n        else {\n            message.yes = \"\";\n        }\n        if (object.abstain !== undefined && object.abstain !== null) {\n            message.abstain = object.abstain;\n        }\n        else {\n            message.abstain = \"\";\n        }\n        if (object.no !== undefined && object.no !== null) {\n            message.no = object.no;\n        }\n        else {\n            message.no = \"\";\n        }\n        if (object.noWithVeto !== undefined && object.noWithVeto !== null) {\n            message.noWithVeto = object.noWithVeto;\n        }\n        else {\n            message.noWithVeto = \"\";\n        }\n        return message;\n    },\n};\nconst baseVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseDepositParams = {};\nexport const DepositParams = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.minDeposit) {\n            Coin.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.maxDepositPeriod !== undefined) {\n            Duration.encode(message.maxDepositPeriod, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.minDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.maxDepositPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromJSON(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.minDeposit) {\n            obj.minDeposit = message.minDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.minDeposit = [];\n        }\n        message.maxDepositPeriod !== undefined &&\n            (obj.maxDepositPeriod = message.maxDepositPeriod\n                ? Duration.toJSON(message.maxDepositPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDepositParams };\n        message.minDeposit = [];\n        if (object.minDeposit !== undefined && object.minDeposit !== null) {\n            for (const e of object.minDeposit) {\n                message.minDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.maxDepositPeriod !== undefined &&\n            object.maxDepositPeriod !== null) {\n            message.maxDepositPeriod = Duration.fromPartial(object.maxDepositPeriod);\n        }\n        else {\n            message.maxDepositPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseVotingParams = {};\nexport const VotingParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.votingPeriod !== undefined) {\n            Duration.encode(message.votingPeriod, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVotingParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.votingPeriod = Duration.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromJSON(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.votingPeriod !== undefined &&\n            (obj.votingPeriod = message.votingPeriod\n                ? Duration.toJSON(message.votingPeriod)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVotingParams };\n        if (object.votingPeriod !== undefined && object.votingPeriod !== null) {\n            message.votingPeriod = Duration.fromPartial(object.votingPeriod);\n        }\n        else {\n            message.votingPeriod = undefined;\n        }\n        return message;\n    },\n};\nconst baseTallyParams = {};\nexport const TallyParams = {\n    encode(message, writer = Writer.create()) {\n        if (message.quorum.length !== 0) {\n            writer.uint32(10).bytes(message.quorum);\n        }\n        if (message.threshold.length !== 0) {\n            writer.uint32(18).bytes(message.threshold);\n        }\n        if (message.vetoThreshold.length !== 0) {\n            writer.uint32(26).bytes(message.vetoThreshold);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTallyParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.quorum = reader.bytes();\n                    break;\n                case 2:\n                    message.threshold = reader.bytes();\n                    break;\n                case 3:\n                    message.vetoThreshold = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = bytesFromBase64(object.quorum);\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = bytesFromBase64(object.threshold);\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = bytesFromBase64(object.vetoThreshold);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.quorum !== undefined &&\n            (obj.quorum = base64FromBytes(message.quorum !== undefined ? message.quorum : new Uint8Array()));\n        message.threshold !== undefined &&\n            (obj.threshold = base64FromBytes(message.threshold !== undefined ? message.threshold : new Uint8Array()));\n        message.vetoThreshold !== undefined &&\n            (obj.vetoThreshold = base64FromBytes(message.vetoThreshold !== undefined\n                ? message.vetoThreshold\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTallyParams };\n        if (object.quorum !== undefined && object.quorum !== null) {\n            message.quorum = object.quorum;\n        }\n        else {\n            message.quorum = new Uint8Array();\n        }\n        if (object.threshold !== undefined && object.threshold !== null) {\n            message.threshold = object.threshold;\n        }\n        else {\n            message.threshold = new Uint8Array();\n        }\n        if (object.vetoThreshold !== undefined && object.vetoThreshold !== null) {\n            message.vetoThreshold = object.vetoThreshold;\n        }\n        else {\n            message.vetoThreshold = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseFungibleTokenPacketData = {\n    denom: \"\",\n    amount: 0,\n    sender: \"\",\n    receiver: \"\",\n};\nexport const FungibleTokenPacketData = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== 0) {\n            writer.uint32(16).uint64(message.amount);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(34).string(message.receiver);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.sender = reader.string();\n                    break;\n                case 4:\n                    message.receiver = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = Number(object.amount);\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseFungibleTokenPacketData,\n        };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = 0;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        return message;\n    },\n};\nconst baseDenomTrace = { path: \"\", baseDenom: \"\" };\nexport const DenomTrace = {\n    encode(message, writer = Writer.create()) {\n        if (message.path !== \"\") {\n            writer.uint32(10).string(message.path);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDenomTrace };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.path = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = String(object.path);\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = String(object.baseDenom);\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.path !== undefined && (obj.path = message.path);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDenomTrace };\n        if (object.path !== undefined && object.path !== null) {\n            message.path = object.path;\n        }\n        else {\n            message.path = \"\";\n        }\n        if (object.baseDenom !== undefined && object.baseDenom !== null) {\n            message.baseDenom = object.baseDenom;\n        }\n        else {\n            message.baseDenom = \"\";\n        }\n        return message;\n    },\n};\nconst baseParams = { sendEnabled: false, receiveEnabled: false };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        if (message.sendEnabled === true) {\n            writer.uint32(8).bool(message.sendEnabled);\n        }\n        if (message.receiveEnabled === true) {\n            writer.uint32(16).bool(message.receiveEnabled);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sendEnabled = reader.bool();\n                    break;\n                case 2:\n                    message.receiveEnabled = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = Boolean(object.sendEnabled);\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = Boolean(object.receiveEnabled);\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sendEnabled !== undefined &&\n            (obj.sendEnabled = message.sendEnabled);\n        message.receiveEnabled !== undefined &&\n            (obj.receiveEnabled = message.receiveEnabled);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        if (object.sendEnabled !== undefined && object.sendEnabled !== null) {\n            message.sendEnabled = object.sendEnabled;\n        }\n        else {\n            message.sendEnabled = false;\n        }\n        if (object.receiveEnabled !== undefined && object.receiveEnabled !== null) {\n            message.receiveEnabled = object.receiveEnabled;\n        }\n        else {\n            message.receiveEnabled = false;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { IdentifiedClientState, ClientConsensusStates, Params, } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseGenesisState = {\n    createLocalhost: false,\n    nextClientSequence: 0,\n};\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.clients) {\n            IdentifiedClientState.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.clientsConsensus) {\n            ClientConsensusStates.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.clientsMetadata) {\n            IdentifiedGenesisMetadata.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.createLocalhost === true) {\n            writer.uint32(40).bool(message.createLocalhost);\n        }\n        if (message.nextClientSequence !== 0) {\n            writer.uint32(48).uint64(message.nextClientSequence);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clients.push(IdentifiedClientState.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.clientsConsensus.push(ClientConsensusStates.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.clientsMetadata.push(IdentifiedGenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.createLocalhost = reader.bool();\n                    break;\n                case 6:\n                    message.nextClientSequence = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromJSON(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromJSON(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromJSON(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = Boolean(object.createLocalhost);\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = Number(object.nextClientSequence);\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.clients) {\n            obj.clients = message.clients.map((e) => e ? IdentifiedClientState.toJSON(e) : undefined);\n        }\n        else {\n            obj.clients = [];\n        }\n        if (message.clientsConsensus) {\n            obj.clientsConsensus = message.clientsConsensus.map((e) => e ? ClientConsensusStates.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsConsensus = [];\n        }\n        if (message.clientsMetadata) {\n            obj.clientsMetadata = message.clientsMetadata.map((e) => e ? IdentifiedGenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientsMetadata = [];\n        }\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.createLocalhost !== undefined &&\n            (obj.createLocalhost = message.createLocalhost);\n        message.nextClientSequence !== undefined &&\n            (obj.nextClientSequence = message.nextClientSequence);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.clients = [];\n        message.clientsConsensus = [];\n        message.clientsMetadata = [];\n        if (object.clients !== undefined && object.clients !== null) {\n            for (const e of object.clients) {\n                message.clients.push(IdentifiedClientState.fromPartial(e));\n            }\n        }\n        if (object.clientsConsensus !== undefined &&\n            object.clientsConsensus !== null) {\n            for (const e of object.clientsConsensus) {\n                message.clientsConsensus.push(ClientConsensusStates.fromPartial(e));\n            }\n        }\n        if (object.clientsMetadata !== undefined &&\n            object.clientsMetadata !== null) {\n            for (const e of object.clientsMetadata) {\n                message.clientsMetadata.push(IdentifiedGenesisMetadata.fromPartial(e));\n            }\n        }\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.createLocalhost !== undefined &&\n            object.createLocalhost !== null) {\n            message.createLocalhost = object.createLocalhost;\n        }\n        else {\n            message.createLocalhost = false;\n        }\n        if (object.nextClientSequence !== undefined &&\n            object.nextClientSequence !== null) {\n            message.nextClientSequence = object.nextClientSequence;\n        }\n        else {\n            message.nextClientSequence = 0;\n        }\n        return message;\n    },\n};\nconst baseGenesisMetadata = {};\nexport const GenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisMetadata };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisMetadata };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseIdentifiedGenesisMetadata = { clientId: \"\" };\nexport const IdentifiedGenesisMetadata = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.clientMetadata) {\n            GenesisMetadata.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientMetadata.push(GenesisMetadata.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.clientMetadata) {\n            obj.clientMetadata = message.clientMetadata.map((e) => e ? GenesisMetadata.toJSON(e) : undefined);\n        }\n        else {\n            obj.clientMetadata = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseIdentifiedGenesisMetadata,\n        };\n        message.clientMetadata = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientMetadata !== undefined && object.clientMetadata !== null) {\n            for (const e of object.clientMetadata) {\n                message.clientMetadata.push(GenesisMetadata.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Counterparty, Version, } from \"../../../../ibc/core/connection/v1/connection\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.core.connection.v1\";\nconst baseMsgConnectionOpenInit = {\n    clientId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenInit = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(32).uint64(message.delayPeriod);\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(42).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenInit };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenInit };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenInitResponse = {};\nexport const MsgConnectionOpenInitResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenInitResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTry = {\n    clientId: \"\",\n    previousConnectionId: \"\",\n    delayPeriod: 0,\n    signer: \"\",\n};\nexport const MsgConnectionOpenTry = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.previousConnectionId !== \"\") {\n            writer.uint32(18).string(message.previousConnectionId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.counterparty !== undefined) {\n            Counterparty.encode(message.counterparty, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.delayPeriod !== 0) {\n            writer.uint32(40).uint64(message.delayPeriod);\n        }\n        for (const v of message.counterpartyVersions) {\n            Version.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.proofInit.length !== 0) {\n            writer.uint32(66).bytes(message.proofInit);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(74).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(82).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(98).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.previousConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.counterparty = Counterparty.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.delayPeriod = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.counterpartyVersions.push(Version.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.proofInit = reader.bytes();\n                    break;\n                case 9:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 10:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 11:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = String(object.previousConnectionId);\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromJSON(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = Number(object.delayPeriod);\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromJSON(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = bytesFromBase64(object.proofInit);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.previousConnectionId !== undefined &&\n            (obj.previousConnectionId = message.previousConnectionId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.counterparty !== undefined &&\n            (obj.counterparty = message.counterparty\n                ? Counterparty.toJSON(message.counterparty)\n                : undefined);\n        message.delayPeriod !== undefined &&\n            (obj.delayPeriod = message.delayPeriod);\n        if (message.counterpartyVersions) {\n            obj.counterpartyVersions = message.counterpartyVersions.map((e) => e ? Version.toJSON(e) : undefined);\n        }\n        else {\n            obj.counterpartyVersions = [];\n        }\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofInit !== undefined &&\n            (obj.proofInit = base64FromBytes(message.proofInit !== undefined ? message.proofInit : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenTry };\n        message.counterpartyVersions = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.previousConnectionId !== undefined &&\n            object.previousConnectionId !== null) {\n            message.previousConnectionId = object.previousConnectionId;\n        }\n        else {\n            message.previousConnectionId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.counterparty !== undefined && object.counterparty !== null) {\n            message.counterparty = Counterparty.fromPartial(object.counterparty);\n        }\n        else {\n            message.counterparty = undefined;\n        }\n        if (object.delayPeriod !== undefined && object.delayPeriod !== null) {\n            message.delayPeriod = object.delayPeriod;\n        }\n        else {\n            message.delayPeriod = 0;\n        }\n        if (object.counterpartyVersions !== undefined &&\n            object.counterpartyVersions !== null) {\n            for (const e of object.counterpartyVersions) {\n                message.counterpartyVersions.push(Version.fromPartial(e));\n            }\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofInit !== undefined && object.proofInit !== null) {\n            message.proofInit = object.proofInit;\n        }\n        else {\n            message.proofInit = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenTryResponse = {};\nexport const MsgConnectionOpenTryResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenTryResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAck = {\n    connectionId: \"\",\n    counterpartyConnectionId: \"\",\n    signer: \"\",\n};\nexport const MsgConnectionOpenAck = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.counterpartyConnectionId !== \"\") {\n            writer.uint32(18).string(message.counterpartyConnectionId);\n        }\n        if (message.version !== undefined) {\n            Version.encode(message.version, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.proofTry.length !== 0) {\n            writer.uint32(50).bytes(message.proofTry);\n        }\n        if (message.proofClient.length !== 0) {\n            writer.uint32(58).bytes(message.proofClient);\n        }\n        if (message.proofConsensus.length !== 0) {\n            writer.uint32(66).bytes(message.proofConsensus);\n        }\n        if (message.consensusHeight !== undefined) {\n            Height.encode(message.consensusHeight, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(82).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgConnectionOpenAck };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.counterpartyConnectionId = reader.string();\n                    break;\n                case 3:\n                    message.version = Version.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.proofTry = reader.bytes();\n                    break;\n                case 7:\n                    message.proofClient = reader.bytes();\n                    break;\n                case 8:\n                    message.proofConsensus = reader.bytes();\n                    break;\n                case 9:\n                    message.consensusHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 10:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = String(object.counterpartyConnectionId);\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = bytesFromBase64(object.proofTry);\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = bytesFromBase64(object.proofClient);\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = bytesFromBase64(object.proofConsensus);\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromJSON(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.counterpartyConnectionId !== undefined &&\n            (obj.counterpartyConnectionId = message.counterpartyConnectionId);\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Version.toJSON(message.version)\n                : undefined);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.proofTry !== undefined &&\n            (obj.proofTry = base64FromBytes(message.proofTry !== undefined ? message.proofTry : new Uint8Array()));\n        message.proofClient !== undefined &&\n            (obj.proofClient = base64FromBytes(message.proofClient !== undefined\n                ? message.proofClient\n                : new Uint8Array()));\n        message.proofConsensus !== undefined &&\n            (obj.proofConsensus = base64FromBytes(message.proofConsensus !== undefined\n                ? message.proofConsensus\n                : new Uint8Array()));\n        message.consensusHeight !== undefined &&\n            (obj.consensusHeight = message.consensusHeight\n                ? Height.toJSON(message.consensusHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgConnectionOpenAck };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.counterpartyConnectionId !== undefined &&\n            object.counterpartyConnectionId !== null) {\n            message.counterpartyConnectionId = object.counterpartyConnectionId;\n        }\n        else {\n            message.counterpartyConnectionId = \"\";\n        }\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Version.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.proofTry !== undefined && object.proofTry !== null) {\n            message.proofTry = object.proofTry;\n        }\n        else {\n            message.proofTry = new Uint8Array();\n        }\n        if (object.proofClient !== undefined && object.proofClient !== null) {\n            message.proofClient = object.proofClient;\n        }\n        else {\n            message.proofClient = new Uint8Array();\n        }\n        if (object.proofConsensus !== undefined && object.proofConsensus !== null) {\n            message.proofConsensus = object.proofConsensus;\n        }\n        else {\n            message.proofConsensus = new Uint8Array();\n        }\n        if (object.consensusHeight !== undefined &&\n            object.consensusHeight !== null) {\n            message.consensusHeight = Height.fromPartial(object.consensusHeight);\n        }\n        else {\n            message.consensusHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenAckResponse = {};\nexport const MsgConnectionOpenAckResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenAckResponse,\n        };\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirm = { connectionId: \"\", signer: \"\" };\nexport const MsgConnectionOpenConfirm = {\n    encode(message, writer = Writer.create()) {\n        if (message.connectionId !== \"\") {\n            writer.uint32(10).string(message.connectionId);\n        }\n        if (message.proofAck.length !== 0) {\n            writer.uint32(18).bytes(message.proofAck);\n        }\n        if (message.proofHeight !== undefined) {\n            Height.encode(message.proofHeight, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signer !== \"\") {\n            writer.uint32(34).string(message.signer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.connectionId = reader.string();\n                    break;\n                case 2:\n                    message.proofAck = reader.bytes();\n                    break;\n                case 3:\n                    message.proofHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = String(object.connectionId);\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = bytesFromBase64(object.proofAck);\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromJSON(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = String(object.signer);\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.connectionId !== undefined &&\n            (obj.connectionId = message.connectionId);\n        message.proofAck !== undefined &&\n            (obj.proofAck = base64FromBytes(message.proofAck !== undefined ? message.proofAck : new Uint8Array()));\n        message.proofHeight !== undefined &&\n            (obj.proofHeight = message.proofHeight\n                ? Height.toJSON(message.proofHeight)\n                : undefined);\n        message.signer !== undefined && (obj.signer = message.signer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgConnectionOpenConfirm,\n        };\n        if (object.connectionId !== undefined && object.connectionId !== null) {\n            message.connectionId = object.connectionId;\n        }\n        else {\n            message.connectionId = \"\";\n        }\n        if (object.proofAck !== undefined && object.proofAck !== null) {\n            message.proofAck = object.proofAck;\n        }\n        else {\n            message.proofAck = new Uint8Array();\n        }\n        if (object.proofHeight !== undefined && object.proofHeight !== null) {\n            message.proofHeight = Height.fromPartial(object.proofHeight);\n        }\n        else {\n            message.proofHeight = undefined;\n        }\n        if (object.signer !== undefined && object.signer !== null) {\n            message.signer = object.signer;\n        }\n        else {\n            message.signer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgConnectionOpenConfirmResponse = {};\nexport const MsgConnectionOpenConfirmResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = {\n            ...baseMsgConnectionOpenConfirmResponse,\n        };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    ConnectionOpenInit(request) {\n        const data = MsgConnectionOpenInit.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenInit\", data);\n        return promise.then((data) => MsgConnectionOpenInitResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenTry(request) {\n        const data = MsgConnectionOpenTry.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenTry\", data);\n        return promise.then((data) => MsgConnectionOpenTryResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenAck(request) {\n        const data = MsgConnectionOpenAck.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenAck\", data);\n        return promise.then((data) => MsgConnectionOpenAckResponse.decode(new Reader(data)));\n    }\n    ConnectionOpenConfirm(request) {\n        const data = MsgConnectionOpenConfirm.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.core.connection.v1.Msg\", \"ConnectionOpenConfirm\", data);\n        return promise.then((data) => MsgConnectionOpenConfirmResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.version\";\nconst baseApp = { protocol: 0, software: \"\" };\nexport const App = {\n    encode(message, writer = Writer.create()) {\n        if (message.protocol !== 0) {\n            writer.uint32(8).uint64(message.protocol);\n        }\n        if (message.software !== \"\") {\n            writer.uint32(18).string(message.software);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseApp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.protocol = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.software = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = Number(object.protocol);\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = String(object.software);\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.protocol !== undefined && (obj.protocol = message.protocol);\n        message.software !== undefined && (obj.software = message.software);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseApp };\n        if (object.protocol !== undefined && object.protocol !== null) {\n            message.protocol = object.protocol;\n        }\n        else {\n            message.protocol = 0;\n        }\n        if (object.software !== undefined && object.software !== null) {\n            message.software = object.software;\n        }\n        else {\n            message.software = \"\";\n        }\n        return message;\n    },\n};\nconst baseConsensus = { block: 0, app: 0 };\nexport const Consensus = {\n    encode(message, writer = Writer.create()) {\n        if (message.block !== 0) {\n            writer.uint32(8).uint64(message.block);\n        }\n        if (message.app !== 0) {\n            writer.uint32(16).uint64(message.app);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseConsensus };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.block = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.app = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = Number(object.block);\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = Number(object.app);\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.block !== undefined && (obj.block = message.block);\n        message.app !== undefined && (obj.app = message.app);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseConsensus };\n        if (object.block !== undefined && object.block !== null) {\n            message.block = object.block;\n        }\n        else {\n            message.block = 0;\n        }\n        if (object.app !== undefined && object.app !== null) {\n            message.app = object.app;\n        }\n        else {\n            message.app = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Params, Validator, Delegation, UnbondingDelegation, Redelegation, } from \"../../../cosmos/staking/v1beta1/staking\";\nexport const protobufPackage = \"cosmos.staking.v1beta1\";\nconst baseGenesisState = { exported: false };\nexport const GenesisState = {\n    encode(message, writer = Writer.create()) {\n        if (message.params !== undefined) {\n            Params.encode(message.params, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.lastTotalPower.length !== 0) {\n            writer.uint32(18).bytes(message.lastTotalPower);\n        }\n        for (const v of message.lastValidatorPowers) {\n            LastValidatorPower.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.delegations) {\n            Delegation.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        for (const v of message.unbondingDelegations) {\n            UnbondingDelegation.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        for (const v of message.redelegations) {\n            Redelegation.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.exported === true) {\n            writer.uint32(64).bool(message.exported);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.params = Params.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.lastTotalPower = reader.bytes();\n                    break;\n                case 3:\n                    message.lastValidatorPowers.push(LastValidatorPower.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.delegations.push(Delegation.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.unbondingDelegations.push(UnbondingDelegation.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.redelegations.push(Redelegation.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.exported = reader.bool();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromJSON(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = bytesFromBase64(object.lastTotalPower);\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromJSON(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromJSON(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromJSON(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromJSON(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = Boolean(object.exported);\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.params !== undefined &&\n            (obj.params = message.params ? Params.toJSON(message.params) : undefined);\n        message.lastTotalPower !== undefined &&\n            (obj.lastTotalPower = base64FromBytes(message.lastTotalPower !== undefined\n                ? message.lastTotalPower\n                : new Uint8Array()));\n        if (message.lastValidatorPowers) {\n            obj.lastValidatorPowers = message.lastValidatorPowers.map((e) => e ? LastValidatorPower.toJSON(e) : undefined);\n        }\n        else {\n            obj.lastValidatorPowers = [];\n        }\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        if (message.delegations) {\n            obj.delegations = message.delegations.map((e) => e ? Delegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.delegations = [];\n        }\n        if (message.unbondingDelegations) {\n            obj.unbondingDelegations = message.unbondingDelegations.map((e) => e ? UnbondingDelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.unbondingDelegations = [];\n        }\n        if (message.redelegations) {\n            obj.redelegations = message.redelegations.map((e) => e ? Redelegation.toJSON(e) : undefined);\n        }\n        else {\n            obj.redelegations = [];\n        }\n        message.exported !== undefined && (obj.exported = message.exported);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGenesisState };\n        message.lastValidatorPowers = [];\n        message.validators = [];\n        message.delegations = [];\n        message.unbondingDelegations = [];\n        message.redelegations = [];\n        if (object.params !== undefined && object.params !== null) {\n            message.params = Params.fromPartial(object.params);\n        }\n        else {\n            message.params = undefined;\n        }\n        if (object.lastTotalPower !== undefined && object.lastTotalPower !== null) {\n            message.lastTotalPower = object.lastTotalPower;\n        }\n        else {\n            message.lastTotalPower = new Uint8Array();\n        }\n        if (object.lastValidatorPowers !== undefined &&\n            object.lastValidatorPowers !== null) {\n            for (const e of object.lastValidatorPowers) {\n                message.lastValidatorPowers.push(LastValidatorPower.fromPartial(e));\n            }\n        }\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.delegations !== undefined && object.delegations !== null) {\n            for (const e of object.delegations) {\n                message.delegations.push(Delegation.fromPartial(e));\n            }\n        }\n        if (object.unbondingDelegations !== undefined &&\n            object.unbondingDelegations !== null) {\n            for (const e of object.unbondingDelegations) {\n                message.unbondingDelegations.push(UnbondingDelegation.fromPartial(e));\n            }\n        }\n        if (object.redelegations !== undefined && object.redelegations !== null) {\n            for (const e of object.redelegations) {\n                message.redelegations.push(Redelegation.fromPartial(e));\n            }\n        }\n        if (object.exported !== undefined && object.exported !== null) {\n            message.exported = object.exported;\n        }\n        else {\n            message.exported = false;\n        }\n        return message;\n    },\n};\nconst baseLastValidatorPower = { address: \"\", power: 0 };\nexport const LastValidatorPower = {\n    encode(message, writer = Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.power !== 0) {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLastValidatorPower };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.power = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = Number(object.power);\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.power !== undefined && (obj.power = message.power);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLastValidatorPower };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.power !== undefined && object.power !== null) {\n            message.power = object.power;\n        }\n        else {\n            message.power = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"rafaelsousa.realestate.property\";\nconst baseProperty = {\n    creator: \"\",\n    id: 0,\n    address: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    country: \"\",\n    latitude: \"\",\n    longitude: \"\",\n    owneraddr: \"\",\n};\nexport const Property = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        if (message.city !== \"\") {\n            writer.uint32(34).string(message.city);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(42).string(message.state);\n        }\n        if (message.zip !== \"\") {\n            writer.uint32(50).string(message.zip);\n        }\n        if (message.country !== \"\") {\n            writer.uint32(58).string(message.country);\n        }\n        if (message.latitude !== \"\") {\n            writer.uint32(66).string(message.latitude);\n        }\n        if (message.longitude !== \"\") {\n            writer.uint32(74).string(message.longitude);\n        }\n        if (message.owneraddr !== \"\") {\n            writer.uint32(82).string(message.owneraddr);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProperty };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                case 4:\n                    message.city = reader.string();\n                    break;\n                case 5:\n                    message.state = reader.string();\n                    break;\n                case 6:\n                    message.zip = reader.string();\n                    break;\n                case 7:\n                    message.country = reader.string();\n                    break;\n                case 8:\n                    message.latitude = reader.string();\n                    break;\n                case 9:\n                    message.longitude = reader.string();\n                    break;\n                case 10:\n                    message.owneraddr = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = String(object.city);\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = String(object.state);\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = String(object.zip);\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = String(object.country);\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = String(object.latitude);\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = String(object.longitude);\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.owneraddr !== undefined && object.owneraddr !== null) {\n            message.owneraddr = String(object.owneraddr);\n        }\n        else {\n            message.owneraddr = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        message.city !== undefined && (obj.city = message.city);\n        message.state !== undefined && (obj.state = message.state);\n        message.zip !== undefined && (obj.zip = message.zip);\n        message.country !== undefined && (obj.country = message.country);\n        message.latitude !== undefined && (obj.latitude = message.latitude);\n        message.longitude !== undefined && (obj.longitude = message.longitude);\n        message.owneraddr !== undefined && (obj.owneraddr = message.owneraddr);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProperty };\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.city !== undefined && object.city !== null) {\n            message.city = object.city;\n        }\n        else {\n            message.city = \"\";\n        }\n        if (object.state !== undefined && object.state !== null) {\n            message.state = object.state;\n        }\n        else {\n            message.state = \"\";\n        }\n        if (object.zip !== undefined && object.zip !== null) {\n            message.zip = object.zip;\n        }\n        else {\n            message.zip = \"\";\n        }\n        if (object.country !== undefined && object.country !== null) {\n            message.country = object.country;\n        }\n        else {\n            message.country = \"\";\n        }\n        if (object.latitude !== undefined && object.latitude !== null) {\n            message.latitude = object.latitude;\n        }\n        else {\n            message.latitude = \"\";\n        }\n        if (object.longitude !== undefined && object.longitude !== null) {\n            message.longitude = object.longitude;\n        }\n        else {\n            message.longitude = \"\";\n        }\n        if (object.owneraddr !== undefined && object.owneraddr !== null) {\n            message.owneraddr = object.owneraddr;\n        }\n        else {\n            message.owneraddr = \"\";\n        }\n        return message;\n    },\n};\nconst basePropertyCollection = {};\nexport const PropertyCollection = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.properties) {\n            Property.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePropertyCollection };\n        message.properties = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.properties.push(Property.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePropertyCollection };\n        message.properties = [];\n        if (object.properties !== undefined && object.properties !== null) {\n            for (const e of object.properties) {\n                message.properties.push(Property.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.properties) {\n            obj.properties = message.properties.map((e) => e ? Property.toJSON(e) : undefined);\n        }\n        else {\n            obj.properties = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePropertyCollection };\n        message.properties = [];\n        if (object.properties !== undefined && object.properties !== null) {\n            for (const e of object.properties) {\n                message.properties.push(Property.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { CommitmentProof } from \"../../../../confio/proofs\";\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ibc.core.commitment.v1\";\nconst baseMerkleRoot = {};\nexport const MerkleRoot = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleRoot };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleRoot };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePrefix = {};\nexport const MerklePrefix = {\n    encode(message, writer = Writer.create()) {\n        if (message.keyPrefix.length !== 0) {\n            writer.uint32(10).bytes(message.keyPrefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePrefix };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPrefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = bytesFromBase64(object.keyPrefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.keyPrefix !== undefined &&\n            (obj.keyPrefix = base64FromBytes(message.keyPrefix !== undefined ? message.keyPrefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePrefix };\n        if (object.keyPrefix !== undefined && object.keyPrefix !== null) {\n            message.keyPrefix = object.keyPrefix;\n        }\n        else {\n            message.keyPrefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseMerklePath = { keyPath: \"\" };\nexport const MerklePath = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.keyPath) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.keyPath.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.keyPath) {\n            obj.keyPath = message.keyPath.map((e) => e);\n        }\n        else {\n            obj.keyPath = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerklePath };\n        message.keyPath = [];\n        if (object.keyPath !== undefined && object.keyPath !== null) {\n            for (const e of object.keyPath) {\n                message.keyPath.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseMerkleProof = {};\nexport const MerkleProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.proofs) {\n            CommitmentProof.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proofs.push(CommitmentProof.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.proofs) {\n            obj.proofs = message.proofs.map((e) => e ? CommitmentProof.toJSON(e) : undefined);\n        }\n        else {\n            obj.proofs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMerkleProof };\n        message.proofs = [];\n        if (object.proofs !== undefined && object.proofs !== null) {\n            for (const e of object.proofs) {\n                message.proofs.push(CommitmentProof.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"ics23\";\nexport var HashOp;\n(function (HashOp) {\n    /** NO_HASH - NO_HASH is the default if no data passed. Note this is an illegal argument some places. */\n    HashOp[HashOp[\"NO_HASH\"] = 0] = \"NO_HASH\";\n    HashOp[HashOp[\"SHA256\"] = 1] = \"SHA256\";\n    HashOp[HashOp[\"SHA512\"] = 2] = \"SHA512\";\n    HashOp[HashOp[\"KECCAK\"] = 3] = \"KECCAK\";\n    HashOp[HashOp[\"RIPEMD160\"] = 4] = \"RIPEMD160\";\n    /** BITCOIN - ripemd160(sha256(x)) */\n    HashOp[HashOp[\"BITCOIN\"] = 5] = \"BITCOIN\";\n    HashOp[HashOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(HashOp || (HashOp = {}));\nexport function hashOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_HASH\":\n            return HashOp.NO_HASH;\n        case 1:\n        case \"SHA256\":\n            return HashOp.SHA256;\n        case 2:\n        case \"SHA512\":\n            return HashOp.SHA512;\n        case 3:\n        case \"KECCAK\":\n            return HashOp.KECCAK;\n        case 4:\n        case \"RIPEMD160\":\n            return HashOp.RIPEMD160;\n        case 5:\n        case \"BITCOIN\":\n            return HashOp.BITCOIN;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return HashOp.UNRECOGNIZED;\n    }\n}\nexport function hashOpToJSON(object) {\n    switch (object) {\n        case HashOp.NO_HASH:\n            return \"NO_HASH\";\n        case HashOp.SHA256:\n            return \"SHA256\";\n        case HashOp.SHA512:\n            return \"SHA512\";\n        case HashOp.KECCAK:\n            return \"KECCAK\";\n        case HashOp.RIPEMD160:\n            return \"RIPEMD160\";\n        case HashOp.BITCOIN:\n            return \"BITCOIN\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/**\n * LengthOp defines how to process the key and value of the LeafOp\n * to include length information. After encoding the length with the given\n * algorithm, the length will be prepended to the key and value bytes.\n * (Each one with it's own encoded length)\n */\nexport var LengthOp;\n(function (LengthOp) {\n    /** NO_PREFIX - NO_PREFIX don't include any length info */\n    LengthOp[LengthOp[\"NO_PREFIX\"] = 0] = \"NO_PREFIX\";\n    /** VAR_PROTO - VAR_PROTO uses protobuf (and go-amino) varint encoding of the length */\n    LengthOp[LengthOp[\"VAR_PROTO\"] = 1] = \"VAR_PROTO\";\n    /** VAR_RLP - VAR_RLP uses rlp int encoding of the length */\n    LengthOp[LengthOp[\"VAR_RLP\"] = 2] = \"VAR_RLP\";\n    /** FIXED32_BIG - FIXED32_BIG uses big-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_BIG\"] = 3] = \"FIXED32_BIG\";\n    /** FIXED32_LITTLE - FIXED32_LITTLE uses little-endian encoding of the length as a 32 bit integer */\n    LengthOp[LengthOp[\"FIXED32_LITTLE\"] = 4] = \"FIXED32_LITTLE\";\n    /** FIXED64_BIG - FIXED64_BIG uses big-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_BIG\"] = 5] = \"FIXED64_BIG\";\n    /** FIXED64_LITTLE - FIXED64_LITTLE uses little-endian encoding of the length as a 64 bit integer */\n    LengthOp[LengthOp[\"FIXED64_LITTLE\"] = 6] = \"FIXED64_LITTLE\";\n    /** REQUIRE_32_BYTES - REQUIRE_32_BYTES is like NONE, but will fail if the input is not exactly 32 bytes (sha256 output) */\n    LengthOp[LengthOp[\"REQUIRE_32_BYTES\"] = 7] = \"REQUIRE_32_BYTES\";\n    /** REQUIRE_64_BYTES - REQUIRE_64_BYTES is like NONE, but will fail if the input is not exactly 64 bytes (sha512 output) */\n    LengthOp[LengthOp[\"REQUIRE_64_BYTES\"] = 8] = \"REQUIRE_64_BYTES\";\n    LengthOp[LengthOp[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(LengthOp || (LengthOp = {}));\nexport function lengthOpFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NO_PREFIX\":\n            return LengthOp.NO_PREFIX;\n        case 1:\n        case \"VAR_PROTO\":\n            return LengthOp.VAR_PROTO;\n        case 2:\n        case \"VAR_RLP\":\n            return LengthOp.VAR_RLP;\n        case 3:\n        case \"FIXED32_BIG\":\n            return LengthOp.FIXED32_BIG;\n        case 4:\n        case \"FIXED32_LITTLE\":\n            return LengthOp.FIXED32_LITTLE;\n        case 5:\n        case \"FIXED64_BIG\":\n            return LengthOp.FIXED64_BIG;\n        case 6:\n        case \"FIXED64_LITTLE\":\n            return LengthOp.FIXED64_LITTLE;\n        case 7:\n        case \"REQUIRE_32_BYTES\":\n            return LengthOp.REQUIRE_32_BYTES;\n        case 8:\n        case \"REQUIRE_64_BYTES\":\n            return LengthOp.REQUIRE_64_BYTES;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return LengthOp.UNRECOGNIZED;\n    }\n}\nexport function lengthOpToJSON(object) {\n    switch (object) {\n        case LengthOp.NO_PREFIX:\n            return \"NO_PREFIX\";\n        case LengthOp.VAR_PROTO:\n            return \"VAR_PROTO\";\n        case LengthOp.VAR_RLP:\n            return \"VAR_RLP\";\n        case LengthOp.FIXED32_BIG:\n            return \"FIXED32_BIG\";\n        case LengthOp.FIXED32_LITTLE:\n            return \"FIXED32_LITTLE\";\n        case LengthOp.FIXED64_BIG:\n            return \"FIXED64_BIG\";\n        case LengthOp.FIXED64_LITTLE:\n            return \"FIXED64_LITTLE\";\n        case LengthOp.REQUIRE_32_BYTES:\n            return \"REQUIRE_32_BYTES\";\n        case LengthOp.REQUIRE_64_BYTES:\n            return \"REQUIRE_64_BYTES\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst baseExistenceProof = {};\nexport const ExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.path) {\n            InnerOp.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.path.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => (e ? InnerOp.toJSON(e) : undefined));\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseExistenceProof };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseNonExistenceProof = {};\nexport const NonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            ExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            ExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseNonExistenceProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? ExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? ExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseNonExistenceProof };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = ExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = ExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nconst baseCommitmentProof = {};\nexport const CommitmentProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.batch !== undefined) {\n            BatchProof.encode(message.batch, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.compressed !== undefined) {\n            CompressedBatchProof.encode(message.compressed, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitmentProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.batch = BatchProof.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.compressed = CompressedBatchProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromJSON(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromJSON(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        message.batch !== undefined &&\n            (obj.batch = message.batch\n                ? BatchProof.toJSON(message.batch)\n                : undefined);\n        message.compressed !== undefined &&\n            (obj.compressed = message.compressed\n                ? CompressedBatchProof.toJSON(message.compressed)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitmentProof };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        if (object.batch !== undefined && object.batch !== null) {\n            message.batch = BatchProof.fromPartial(object.batch);\n        }\n        else {\n            message.batch = undefined;\n        }\n        if (object.compressed !== undefined && object.compressed !== null) {\n            message.compressed = CompressedBatchProof.fromPartial(object.compressed);\n        }\n        else {\n            message.compressed = undefined;\n        }\n        return message;\n    },\n};\nconst baseLeafOp = {\n    hash: 0,\n    prehashKey: 0,\n    prehashValue: 0,\n    length: 0,\n};\nexport const LeafOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prehashKey !== 0) {\n            writer.uint32(16).int32(message.prehashKey);\n        }\n        if (message.prehashValue !== 0) {\n            writer.uint32(24).int32(message.prehashValue);\n        }\n        if (message.length !== 0) {\n            writer.uint32(32).int32(message.length);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(42).bytes(message.prefix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLeafOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prehashKey = reader.int32();\n                    break;\n                case 3:\n                    message.prehashValue = reader.int32();\n                    break;\n                case 4:\n                    message.length = reader.int32();\n                    break;\n                case 5:\n                    message.prefix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = hashOpFromJSON(object.prehashKey);\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = hashOpFromJSON(object.prehashValue);\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = lengthOpFromJSON(object.length);\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prehashKey !== undefined &&\n            (obj.prehashKey = hashOpToJSON(message.prehashKey));\n        message.prehashValue !== undefined &&\n            (obj.prehashValue = hashOpToJSON(message.prehashValue));\n        message.length !== undefined &&\n            (obj.length = lengthOpToJSON(message.length));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLeafOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prehashKey !== undefined && object.prehashKey !== null) {\n            message.prehashKey = object.prehashKey;\n        }\n        else {\n            message.prehashKey = 0;\n        }\n        if (object.prehashValue !== undefined && object.prehashValue !== null) {\n            message.prehashValue = object.prehashValue;\n        }\n        else {\n            message.prehashValue = 0;\n        }\n        if (object.length !== undefined && object.length !== null) {\n            message.length = object.length;\n        }\n        else {\n            message.length = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseInnerOp = { hash: 0 };\nexport const InnerOp = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash !== 0) {\n            writer.uint32(8).int32(message.hash);\n        }\n        if (message.prefix.length !== 0) {\n            writer.uint32(18).bytes(message.prefix);\n        }\n        if (message.suffix.length !== 0) {\n            writer.uint32(26).bytes(message.suffix);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerOp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.int32();\n                    break;\n                case 2:\n                    message.prefix = reader.bytes();\n                    break;\n                case 3:\n                    message.suffix = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = bytesFromBase64(object.prefix);\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = bytesFromBase64(object.suffix);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        message.prefix !== undefined &&\n            (obj.prefix = base64FromBytes(message.prefix !== undefined ? message.prefix : new Uint8Array()));\n        message.suffix !== undefined &&\n            (obj.suffix = base64FromBytes(message.suffix !== undefined ? message.suffix : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerOp };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        if (object.prefix !== undefined && object.prefix !== null) {\n            message.prefix = object.prefix;\n        }\n        else {\n            message.prefix = new Uint8Array();\n        }\n        if (object.suffix !== undefined && object.suffix !== null) {\n            message.suffix = object.suffix;\n        }\n        else {\n            message.suffix = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProofSpec = { maxDepth: 0, minDepth: 0 };\nexport const ProofSpec = {\n    encode(message, writer = Writer.create()) {\n        if (message.leafSpec !== undefined) {\n            LeafOp.encode(message.leafSpec, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.innerSpec !== undefined) {\n            InnerSpec.encode(message.innerSpec, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.maxDepth !== 0) {\n            writer.uint32(24).int32(message.maxDepth);\n        }\n        if (message.minDepth !== 0) {\n            writer.uint32(32).int32(message.minDepth);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProofSpec };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.leafSpec = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.innerSpec = InnerSpec.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.maxDepth = reader.int32();\n                    break;\n                case 4:\n                    message.minDepth = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromJSON(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromJSON(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = Number(object.maxDepth);\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = Number(object.minDepth);\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.leafSpec !== undefined &&\n            (obj.leafSpec = message.leafSpec\n                ? LeafOp.toJSON(message.leafSpec)\n                : undefined);\n        message.innerSpec !== undefined &&\n            (obj.innerSpec = message.innerSpec\n                ? InnerSpec.toJSON(message.innerSpec)\n                : undefined);\n        message.maxDepth !== undefined && (obj.maxDepth = message.maxDepth);\n        message.minDepth !== undefined && (obj.minDepth = message.minDepth);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProofSpec };\n        if (object.leafSpec !== undefined && object.leafSpec !== null) {\n            message.leafSpec = LeafOp.fromPartial(object.leafSpec);\n        }\n        else {\n            message.leafSpec = undefined;\n        }\n        if (object.innerSpec !== undefined && object.innerSpec !== null) {\n            message.innerSpec = InnerSpec.fromPartial(object.innerSpec);\n        }\n        else {\n            message.innerSpec = undefined;\n        }\n        if (object.maxDepth !== undefined && object.maxDepth !== null) {\n            message.maxDepth = object.maxDepth;\n        }\n        else {\n            message.maxDepth = 0;\n        }\n        if (object.minDepth !== undefined && object.minDepth !== null) {\n            message.minDepth = object.minDepth;\n        }\n        else {\n            message.minDepth = 0;\n        }\n        return message;\n    },\n};\nconst baseInnerSpec = {\n    childOrder: 0,\n    childSize: 0,\n    minPrefixLength: 0,\n    maxPrefixLength: 0,\n    hash: 0,\n};\nexport const InnerSpec = {\n    encode(message, writer = Writer.create()) {\n        writer.uint32(10).fork();\n        for (const v of message.childOrder) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        if (message.childSize !== 0) {\n            writer.uint32(16).int32(message.childSize);\n        }\n        if (message.minPrefixLength !== 0) {\n            writer.uint32(24).int32(message.minPrefixLength);\n        }\n        if (message.maxPrefixLength !== 0) {\n            writer.uint32(32).int32(message.maxPrefixLength);\n        }\n        if (message.emptyChild.length !== 0) {\n            writer.uint32(42).bytes(message.emptyChild);\n        }\n        if (message.hash !== 0) {\n            writer.uint32(48).int32(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.childOrder.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.childOrder.push(reader.int32());\n                    }\n                    break;\n                case 2:\n                    message.childSize = reader.int32();\n                    break;\n                case 3:\n                    message.minPrefixLength = reader.int32();\n                    break;\n                case 4:\n                    message.maxPrefixLength = reader.int32();\n                    break;\n                case 5:\n                    message.emptyChild = reader.bytes();\n                    break;\n                case 6:\n                    message.hash = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(Number(e));\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = Number(object.childSize);\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = Number(object.minPrefixLength);\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = Number(object.maxPrefixLength);\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = bytesFromBase64(object.emptyChild);\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = hashOpFromJSON(object.hash);\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.childOrder) {\n            obj.childOrder = message.childOrder.map((e) => e);\n        }\n        else {\n            obj.childOrder = [];\n        }\n        message.childSize !== undefined && (obj.childSize = message.childSize);\n        message.minPrefixLength !== undefined &&\n            (obj.minPrefixLength = message.minPrefixLength);\n        message.maxPrefixLength !== undefined &&\n            (obj.maxPrefixLength = message.maxPrefixLength);\n        message.emptyChild !== undefined &&\n            (obj.emptyChild = base64FromBytes(message.emptyChild !== undefined ? message.emptyChild : new Uint8Array()));\n        message.hash !== undefined && (obj.hash = hashOpToJSON(message.hash));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseInnerSpec };\n        message.childOrder = [];\n        if (object.childOrder !== undefined && object.childOrder !== null) {\n            for (const e of object.childOrder) {\n                message.childOrder.push(e);\n            }\n        }\n        if (object.childSize !== undefined && object.childSize !== null) {\n            message.childSize = object.childSize;\n        }\n        else {\n            message.childSize = 0;\n        }\n        if (object.minPrefixLength !== undefined &&\n            object.minPrefixLength !== null) {\n            message.minPrefixLength = object.minPrefixLength;\n        }\n        else {\n            message.minPrefixLength = 0;\n        }\n        if (object.maxPrefixLength !== undefined &&\n            object.maxPrefixLength !== null) {\n            message.maxPrefixLength = object.maxPrefixLength;\n        }\n        else {\n            message.maxPrefixLength = 0;\n        }\n        if (object.emptyChild !== undefined && object.emptyChild !== null) {\n            message.emptyChild = object.emptyChild;\n        }\n        else {\n            message.emptyChild = new Uint8Array();\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = 0;\n        }\n        return message;\n    },\n};\nconst baseBatchProof = {};\nexport const BatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            BatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(BatchEntry.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? BatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchProof };\n        message.entries = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(BatchEntry.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseBatchEntry = {};\nexport const BatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            ExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            NonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = ExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = NonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? ExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? NonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = ExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = NonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchProof = {};\nexport const CompressedBatchProof = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.entries) {\n            CompressedBatchEntry.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.lookupInners) {\n            InnerOp.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.entries.push(CompressedBatchEntry.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.lookupInners.push(InnerOp.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromJSON(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.entries) {\n            obj.entries = message.entries.map((e) => e ? CompressedBatchEntry.toJSON(e) : undefined);\n        }\n        else {\n            obj.entries = [];\n        }\n        if (message.lookupInners) {\n            obj.lookupInners = message.lookupInners.map((e) => e ? InnerOp.toJSON(e) : undefined);\n        }\n        else {\n            obj.lookupInners = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchProof };\n        message.entries = [];\n        message.lookupInners = [];\n        if (object.entries !== undefined && object.entries !== null) {\n            for (const e of object.entries) {\n                message.entries.push(CompressedBatchEntry.fromPartial(e));\n            }\n        }\n        if (object.lookupInners !== undefined && object.lookupInners !== null) {\n            for (const e of object.lookupInners) {\n                message.lookupInners.push(InnerOp.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedBatchEntry = {};\nexport const CompressedBatchEntry = {\n    encode(message, writer = Writer.create()) {\n        if (message.exist !== undefined) {\n            CompressedExistenceProof.encode(message.exist, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.nonexist !== undefined) {\n            CompressedNonExistenceProof.encode(message.nonexist, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCompressedBatchEntry };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.exist = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.nonexist = CompressedNonExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromJSON(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromJSON(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.exist !== undefined &&\n            (obj.exist = message.exist\n                ? CompressedExistenceProof.toJSON(message.exist)\n                : undefined);\n        message.nonexist !== undefined &&\n            (obj.nonexist = message.nonexist\n                ? CompressedNonExistenceProof.toJSON(message.nonexist)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCompressedBatchEntry };\n        if (object.exist !== undefined && object.exist !== null) {\n            message.exist = CompressedExistenceProof.fromPartial(object.exist);\n        }\n        else {\n            message.exist = undefined;\n        }\n        if (object.nonexist !== undefined && object.nonexist !== null) {\n            message.nonexist = CompressedNonExistenceProof.fromPartial(object.nonexist);\n        }\n        else {\n            message.nonexist = undefined;\n        }\n        return message;\n    },\n};\nconst baseCompressedExistenceProof = { path: 0 };\nexport const CompressedExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.leaf !== undefined) {\n            LeafOp.encode(message.leaf, writer.uint32(26).fork()).ldelim();\n        }\n        writer.uint32(34).fork();\n        for (const v of message.path) {\n            writer.int32(v);\n        }\n        writer.ldelim();\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                case 3:\n                    message.leaf = LeafOp.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if ((tag & 7) === 2) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.path.push(reader.int32());\n                        }\n                    }\n                    else {\n                        message.path.push(reader.int32());\n                    }\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromJSON(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(Number(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        message.leaf !== undefined &&\n            (obj.leaf = message.leaf ? LeafOp.toJSON(message.leaf) : undefined);\n        if (message.path) {\n            obj.path = message.path.map((e) => e);\n        }\n        else {\n            obj.path = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedExistenceProof,\n        };\n        message.path = [];\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        if (object.leaf !== undefined && object.leaf !== null) {\n            message.leaf = LeafOp.fromPartial(object.leaf);\n        }\n        else {\n            message.leaf = undefined;\n        }\n        if (object.path !== undefined && object.path !== null) {\n            for (const e of object.path) {\n                message.path.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseCompressedNonExistenceProof = {};\nexport const CompressedNonExistenceProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.left !== undefined) {\n            CompressedExistenceProof.encode(message.left, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.right !== undefined) {\n            CompressedExistenceProof.encode(message.right, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.bytes();\n                    break;\n                case 2:\n                    message.left = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.right = CompressedExistenceProof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = bytesFromBase64(object.key);\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromJSON(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromJSON(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined &&\n            (obj.key = base64FromBytes(message.key !== undefined ? message.key : new Uint8Array()));\n        message.left !== undefined &&\n            (obj.left = message.left\n                ? CompressedExistenceProof.toJSON(message.left)\n                : undefined);\n        message.right !== undefined &&\n            (obj.right = message.right\n                ? CompressedExistenceProof.toJSON(message.right)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseCompressedNonExistenceProof,\n        };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = new Uint8Array();\n        }\n        if (object.left !== undefined && object.left !== null) {\n            message.left = CompressedExistenceProof.fromPartial(object.left);\n        }\n        else {\n            message.left = undefined;\n        }\n        if (object.right !== undefined && object.right !== null) {\n            message.right = CompressedExistenceProof.fromPartial(object.right);\n        }\n        else {\n            message.right = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Property } from \"../property/property\";\nexport const protobufPackage = \"rafaelsousa.realestate.property\";\nconst baseOwner = { creator: \"\", id: 0, address: \"\" };\nexport const Owner = {\n    encode(message, writer = Writer.create()) {\n        if (message.creator !== \"\") {\n            writer.uint32(10).string(message.creator);\n        }\n        if (message.id !== 0) {\n            writer.uint32(16).uint64(message.id);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(26).string(message.address);\n        }\n        for (const v of message.property) {\n            Property.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseOwner };\n        message.property = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.creator = reader.string();\n                    break;\n                case 2:\n                    message.id = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.address = reader.string();\n                    break;\n                case 4:\n                    message.property.push(Property.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseOwner };\n        message.property = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = String(object.creator);\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = Number(object.id);\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = String(object.address);\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.property !== undefined && object.property !== null) {\n            for (const e of object.property) {\n                message.property.push(Property.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.creator !== undefined && (obj.creator = message.creator);\n        message.id !== undefined && (obj.id = message.id);\n        message.address !== undefined && (obj.address = message.address);\n        if (message.property) {\n            obj.property = message.property.map((e) => e ? Property.toJSON(e) : undefined);\n        }\n        else {\n            obj.property = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseOwner };\n        message.property = [];\n        if (object.creator !== undefined && object.creator !== null) {\n            message.creator = object.creator;\n        }\n        else {\n            message.creator = \"\";\n        }\n        if (object.id !== undefined && object.id !== null) {\n            message.id = object.id;\n        }\n        else {\n            message.id = 0;\n        }\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = \"\";\n        }\n        if (object.property !== undefined && object.property !== null) {\n            for (const e of object.property) {\n                message.property.push(Property.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nimport { Event } from \"../../../../tendermint/abci/types\";\nexport const protobufPackage = \"cosmos.base.abci.v1beta1\";\nconst baseTxResponse = {\n    height: 0,\n    txhash: \"\",\n    codespace: \"\",\n    code: 0,\n    data: \"\",\n    rawLog: \"\",\n    info: \"\",\n    gasWanted: 0,\n    gasUsed: 0,\n    timestamp: \"\",\n};\nexport const TxResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.txhash !== \"\") {\n            writer.uint32(18).string(message.txhash);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(26).string(message.codespace);\n        }\n        if (message.code !== 0) {\n            writer.uint32(32).uint32(message.code);\n        }\n        if (message.data !== \"\") {\n            writer.uint32(42).string(message.data);\n        }\n        if (message.rawLog !== \"\") {\n            writer.uint32(50).string(message.rawLog);\n        }\n        for (const v of message.logs) {\n            ABCIMessageLog.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.info !== \"\") {\n            writer.uint32(66).string(message.info);\n        }\n        if (message.gasWanted !== 0) {\n            writer.uint32(72).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(80).int64(message.gasUsed);\n        }\n        if (message.tx !== undefined) {\n            Any.encode(message.tx, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.timestamp !== \"\") {\n            writer.uint32(98).string(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.txhash = reader.string();\n                    break;\n                case 3:\n                    message.codespace = reader.string();\n                    break;\n                case 4:\n                    message.code = reader.uint32();\n                    break;\n                case 5:\n                    message.data = reader.string();\n                    break;\n                case 6:\n                    message.rawLog = reader.string();\n                    break;\n                case 7:\n                    message.logs.push(ABCIMessageLog.decode(reader, reader.uint32()));\n                    break;\n                case 8:\n                    message.info = reader.string();\n                    break;\n                case 9:\n                    message.gasWanted = longToNumber(reader.int64());\n                    break;\n                case 10:\n                    message.gasUsed = longToNumber(reader.int64());\n                    break;\n                case 11:\n                    message.tx = Any.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.timestamp = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = String(object.txhash);\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = String(object.codespace);\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = Number(object.code);\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = String(object.data);\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = String(object.rawLog);\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromJSON(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = String(object.info);\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromJSON(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = String(object.timestamp);\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.txhash !== undefined && (obj.txhash = message.txhash);\n        message.codespace !== undefined && (obj.codespace = message.codespace);\n        message.code !== undefined && (obj.code = message.code);\n        message.data !== undefined && (obj.data = message.data);\n        message.rawLog !== undefined && (obj.rawLog = message.rawLog);\n        if (message.logs) {\n            obj.logs = message.logs.map((e) => e ? ABCIMessageLog.toJSON(e) : undefined);\n        }\n        else {\n            obj.logs = [];\n        }\n        message.info !== undefined && (obj.info = message.info);\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        message.tx !== undefined &&\n            (obj.tx = message.tx ? Any.toJSON(message.tx) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxResponse };\n        message.logs = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.txhash !== undefined && object.txhash !== null) {\n            message.txhash = object.txhash;\n        }\n        else {\n            message.txhash = \"\";\n        }\n        if (object.codespace !== undefined && object.codespace !== null) {\n            message.codespace = object.codespace;\n        }\n        else {\n            message.codespace = \"\";\n        }\n        if (object.code !== undefined && object.code !== null) {\n            message.code = object.code;\n        }\n        else {\n            message.code = 0;\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = \"\";\n        }\n        if (object.rawLog !== undefined && object.rawLog !== null) {\n            message.rawLog = object.rawLog;\n        }\n        else {\n            message.rawLog = \"\";\n        }\n        if (object.logs !== undefined && object.logs !== null) {\n            for (const e of object.logs) {\n                message.logs.push(ABCIMessageLog.fromPartial(e));\n            }\n        }\n        if (object.info !== undefined && object.info !== null) {\n            message.info = object.info;\n        }\n        else {\n            message.info = \"\";\n        }\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        if (object.tx !== undefined && object.tx !== null) {\n            message.tx = Any.fromPartial(object.tx);\n        }\n        else {\n            message.tx = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = \"\";\n        }\n        return message;\n    },\n};\nconst baseABCIMessageLog = { msgIndex: 0, log: \"\" };\nexport const ABCIMessageLog = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgIndex !== 0) {\n            writer.uint32(8).uint32(message.msgIndex);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            StringEvent.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgIndex = reader.uint32();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(StringEvent.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = Number(object.msgIndex);\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgIndex !== undefined && (obj.msgIndex = message.msgIndex);\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => e ? StringEvent.toJSON(e) : undefined);\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseABCIMessageLog };\n        message.events = [];\n        if (object.msgIndex !== undefined && object.msgIndex !== null) {\n            message.msgIndex = object.msgIndex;\n        }\n        else {\n            message.msgIndex = 0;\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(StringEvent.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseStringEvent = { type: \"\" };\nexport const StringEvent = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            Attribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.string();\n                    break;\n                case 2:\n                    message.attributes.push(Attribute.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = String(object.type);\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined && (obj.type = message.type);\n        if (message.attributes) {\n            obj.attributes = message.attributes.map((e) => e ? Attribute.toJSON(e) : undefined);\n        }\n        else {\n            obj.attributes = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseStringEvent };\n        message.attributes = [];\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = \"\";\n        }\n        if (object.attributes !== undefined && object.attributes !== null) {\n            for (const e of object.attributes) {\n                message.attributes.push(Attribute.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseAttribute = { key: \"\", value: \"\" };\nexport const Attribute = {\n    encode(message, writer = Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAttribute };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = String(object.key);\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = String(object.value);\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.key !== undefined && (obj.key = message.key);\n        message.value !== undefined && (obj.value = message.value);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAttribute };\n        if (object.key !== undefined && object.key !== null) {\n            message.key = object.key;\n        }\n        else {\n            message.key = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = \"\";\n        }\n        return message;\n    },\n};\nconst baseGasInfo = { gasWanted: 0, gasUsed: 0 };\nexport const GasInfo = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasWanted !== 0) {\n            writer.uint32(8).uint64(message.gasWanted);\n        }\n        if (message.gasUsed !== 0) {\n            writer.uint32(16).uint64(message.gasUsed);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseGasInfo };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasWanted = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.gasUsed = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = Number(object.gasWanted);\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = Number(object.gasUsed);\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasWanted !== undefined && (obj.gasWanted = message.gasWanted);\n        message.gasUsed !== undefined && (obj.gasUsed = message.gasUsed);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseGasInfo };\n        if (object.gasWanted !== undefined && object.gasWanted !== null) {\n            message.gasWanted = object.gasWanted;\n        }\n        else {\n            message.gasWanted = 0;\n        }\n        if (object.gasUsed !== undefined && object.gasUsed !== null) {\n            message.gasUsed = object.gasUsed;\n        }\n        else {\n            message.gasUsed = 0;\n        }\n        return message;\n    },\n};\nconst baseResult = { log: \"\" };\nexport const Result = {\n    encode(message, writer = Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(18).string(message.log);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseResult };\n        message.events = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data = reader.bytes();\n                    break;\n                case 2:\n                    message.log = reader.string();\n                    break;\n                case 3:\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = String(object.log);\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.log !== undefined && (obj.log = message.log);\n        if (message.events) {\n            obj.events = message.events.map((e) => (e ? Event.toJSON(e) : undefined));\n        }\n        else {\n            obj.events = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseResult };\n        message.events = [];\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.log !== undefined && object.log !== null) {\n            message.log = object.log;\n        }\n        else {\n            message.log = \"\";\n        }\n        if (object.events !== undefined && object.events !== null) {\n            for (const e of object.events) {\n                message.events.push(Event.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSimulationResponse = {};\nexport const SimulationResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.gasInfo !== undefined) {\n            GasInfo.encode(message.gasInfo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.result !== undefined) {\n            Result.encode(message.result, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimulationResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.gasInfo = GasInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.result = Result.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromJSON(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromJSON(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.gasInfo !== undefined &&\n            (obj.gasInfo = message.gasInfo\n                ? GasInfo.toJSON(message.gasInfo)\n                : undefined);\n        message.result !== undefined &&\n            (obj.result = message.result ? Result.toJSON(message.result) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimulationResponse };\n        if (object.gasInfo !== undefined && object.gasInfo !== null) {\n            message.gasInfo = GasInfo.fromPartial(object.gasInfo);\n        }\n        else {\n            message.gasInfo = undefined;\n        }\n        if (object.result !== undefined && object.result !== null) {\n            message.result = Result.fromPartial(object.result);\n        }\n        else {\n            message.result = undefined;\n        }\n        return message;\n    },\n};\nconst baseMsgData = { msgType: \"\" };\nexport const MsgData = {\n    encode(message, writer = Writer.create()) {\n        if (message.msgType !== \"\") {\n            writer.uint32(10).string(message.msgType);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgData };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.msgType = reader.string();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = String(object.msgType);\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.msgType !== undefined && (obj.msgType = message.msgType);\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgData };\n        if (object.msgType !== undefined && object.msgType !== null) {\n            message.msgType = object.msgType;\n        }\n        else {\n            message.msgType = \"\";\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseTxMsgData = {};\nexport const TxMsgData = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.data) {\n            MsgData.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.data.push(MsgData.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data) {\n            obj.data = message.data.map((e) => (e ? MsgData.toJSON(e) : undefined));\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxMsgData };\n        message.data = [];\n        if (object.data !== undefined && object.data !== null) {\n            for (const e of object.data) {\n                message.data.push(MsgData.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseSearchTxsResult = {\n    totalCount: 0,\n    count: 0,\n    pageNumber: 0,\n    pageTotal: 0,\n    limit: 0,\n};\nexport const SearchTxsResult = {\n    encode(message, writer = Writer.create()) {\n        if (message.totalCount !== 0) {\n            writer.uint32(8).uint64(message.totalCount);\n        }\n        if (message.count !== 0) {\n            writer.uint32(16).uint64(message.count);\n        }\n        if (message.pageNumber !== 0) {\n            writer.uint32(24).uint64(message.pageNumber);\n        }\n        if (message.pageTotal !== 0) {\n            writer.uint32(32).uint64(message.pageTotal);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).uint64(message.limit);\n        }\n        for (const v of message.txs) {\n            TxResponse.encode(v, writer.uint32(50).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.totalCount = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.count = longToNumber(reader.uint64());\n                    break;\n                case 3:\n                    message.pageNumber = longToNumber(reader.uint64());\n                    break;\n                case 4:\n                    message.pageTotal = longToNumber(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = longToNumber(reader.uint64());\n                    break;\n                case 6:\n                    message.txs.push(TxResponse.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = Number(object.totalCount);\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = Number(object.count);\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = Number(object.pageNumber);\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = Number(object.pageTotal);\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = Number(object.limit);\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.totalCount !== undefined && (obj.totalCount = message.totalCount);\n        message.count !== undefined && (obj.count = message.count);\n        message.pageNumber !== undefined && (obj.pageNumber = message.pageNumber);\n        message.pageTotal !== undefined && (obj.pageTotal = message.pageTotal);\n        message.limit !== undefined && (obj.limit = message.limit);\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => (e ? TxResponse.toJSON(e) : undefined));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSearchTxsResult };\n        message.txs = [];\n        if (object.totalCount !== undefined && object.totalCount !== null) {\n            message.totalCount = object.totalCount;\n        }\n        else {\n            message.totalCount = 0;\n        }\n        if (object.count !== undefined && object.count !== null) {\n            message.count = object.count;\n        }\n        else {\n            message.count = 0;\n        }\n        if (object.pageNumber !== undefined && object.pageNumber !== null) {\n            message.pageNumber = object.pageNumber;\n        }\n        else {\n            message.pageNumber = 0;\n        }\n        if (object.pageTotal !== undefined && object.pageTotal !== null) {\n            message.pageTotal = object.pageTotal;\n        }\n        else {\n            message.pageTotal = 0;\n        }\n        if (object.limit !== undefined && object.limit !== null) {\n            message.limit = object.limit;\n        }\n        else {\n            message.limit = 0;\n        }\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(TxResponse.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { PublicKey } from \"../../tendermint/crypto/keys\";\nexport const protobufPackage = \"tendermint.types\";\nconst baseValidatorSet = { totalVotingPower: 0 };\nexport const ValidatorSet = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.validators) {\n            Validator.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.proposer !== undefined) {\n            Validator.encode(message.proposer, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== 0) {\n            writer.uint32(24).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.validators.push(Validator.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.proposer = Validator.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.totalVotingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromJSON(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = Number(object.totalVotingPower);\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validators) {\n            obj.validators = message.validators.map((e) => e ? Validator.toJSON(e) : undefined);\n        }\n        else {\n            obj.validators = [];\n        }\n        message.proposer !== undefined &&\n            (obj.proposer = message.proposer\n                ? Validator.toJSON(message.proposer)\n                : undefined);\n        message.totalVotingPower !== undefined &&\n            (obj.totalVotingPower = message.totalVotingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidatorSet };\n        message.validators = [];\n        if (object.validators !== undefined && object.validators !== null) {\n            for (const e of object.validators) {\n                message.validators.push(Validator.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = Validator.fromPartial(object.proposer);\n        }\n        else {\n            message.proposer = undefined;\n        }\n        if (object.totalVotingPower !== undefined &&\n            object.totalVotingPower !== null) {\n            message.totalVotingPower = object.totalVotingPower;\n        }\n        else {\n            message.totalVotingPower = 0;\n        }\n        return message;\n    },\n};\nconst baseValidator = { votingPower: 0, proposerPriority: 0 };\nexport const Validator = {\n    encode(message, writer = Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(24).int64(message.votingPower);\n        }\n        if (message.proposerPriority !== 0) {\n            writer.uint32(32).int64(message.proposerPriority);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.bytes();\n                    break;\n                case 2:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.proposerPriority = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = bytesFromBase64(object.address);\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = Number(object.proposerPriority);\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined &&\n            (obj.address = base64FromBytes(message.address !== undefined ? message.address : new Uint8Array()));\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        message.proposerPriority !== undefined &&\n            (obj.proposerPriority = message.proposerPriority);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseValidator };\n        if (object.address !== undefined && object.address !== null) {\n            message.address = object.address;\n        }\n        else {\n            message.address = new Uint8Array();\n        }\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        if (object.proposerPriority !== undefined &&\n            object.proposerPriority !== null) {\n            message.proposerPriority = object.proposerPriority;\n        }\n        else {\n            message.proposerPriority = 0;\n        }\n        return message;\n    },\n};\nconst baseSimpleValidator = { votingPower: 0 };\nexport const SimpleValidator = {\n    encode(message, writer = Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.votingPower !== 0) {\n            writer.uint32(16).int64(message.votingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSimpleValidator };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.votingPower = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromJSON(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = Number(object.votingPower);\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.pubKey !== undefined &&\n            (obj.pubKey = message.pubKey\n                ? PublicKey.toJSON(message.pubKey)\n                : undefined);\n        message.votingPower !== undefined &&\n            (obj.votingPower = message.votingPower);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSimpleValidator };\n        if (object.pubKey !== undefined && object.pubKey !== null) {\n            message.pubKey = PublicKey.fromPartial(object.pubKey);\n        }\n        else {\n            message.pubKey = undefined;\n        }\n        if (object.votingPower !== undefined && object.votingPower !== null) {\n            message.votingPower = object.votingPower;\n        }\n        else {\n            message.votingPower = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Proof } from \"../../tendermint/crypto/proof\";\nimport { Consensus } from \"../../tendermint/version/types\";\nimport { ValidatorSet } from \"../../tendermint/types/validator\";\nexport const protobufPackage = \"tendermint.types\";\n/** BlockIdFlag indicates which BlcokID the signature is for */\nexport var BlockIDFlag;\n(function (BlockIDFlag) {\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_UNKNOWN\"] = 0] = \"BLOCK_ID_FLAG_UNKNOWN\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_ABSENT\"] = 1] = \"BLOCK_ID_FLAG_ABSENT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_COMMIT\"] = 2] = \"BLOCK_ID_FLAG_COMMIT\";\n    BlockIDFlag[BlockIDFlag[\"BLOCK_ID_FLAG_NIL\"] = 3] = \"BLOCK_ID_FLAG_NIL\";\n    BlockIDFlag[BlockIDFlag[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(BlockIDFlag || (BlockIDFlag = {}));\nexport function blockIDFlagFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"BLOCK_ID_FLAG_UNKNOWN\":\n            return BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN;\n        case 1:\n        case \"BLOCK_ID_FLAG_ABSENT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_ABSENT;\n        case 2:\n        case \"BLOCK_ID_FLAG_COMMIT\":\n            return BlockIDFlag.BLOCK_ID_FLAG_COMMIT;\n        case 3:\n        case \"BLOCK_ID_FLAG_NIL\":\n            return BlockIDFlag.BLOCK_ID_FLAG_NIL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return BlockIDFlag.UNRECOGNIZED;\n    }\n}\nexport function blockIDFlagToJSON(object) {\n    switch (object) {\n        case BlockIDFlag.BLOCK_ID_FLAG_UNKNOWN:\n            return \"BLOCK_ID_FLAG_UNKNOWN\";\n        case BlockIDFlag.BLOCK_ID_FLAG_ABSENT:\n            return \"BLOCK_ID_FLAG_ABSENT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_COMMIT:\n            return \"BLOCK_ID_FLAG_COMMIT\";\n        case BlockIDFlag.BLOCK_ID_FLAG_NIL:\n            return \"BLOCK_ID_FLAG_NIL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\n/** SignedMsgType is a type of signed message in the consensus. */\nexport var SignedMsgType;\n(function (SignedMsgType) {\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_UNKNOWN\"] = 0] = \"SIGNED_MSG_TYPE_UNKNOWN\";\n    /** SIGNED_MSG_TYPE_PREVOTE - Votes */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PREVOTE\"] = 1] = \"SIGNED_MSG_TYPE_PREVOTE\";\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PRECOMMIT\"] = 2] = \"SIGNED_MSG_TYPE_PRECOMMIT\";\n    /** SIGNED_MSG_TYPE_PROPOSAL - Proposals */\n    SignedMsgType[SignedMsgType[\"SIGNED_MSG_TYPE_PROPOSAL\"] = 32] = \"SIGNED_MSG_TYPE_PROPOSAL\";\n    SignedMsgType[SignedMsgType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(SignedMsgType || (SignedMsgType = {}));\nexport function signedMsgTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"SIGNED_MSG_TYPE_UNKNOWN\":\n            return SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN;\n        case 1:\n        case \"SIGNED_MSG_TYPE_PREVOTE\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PREVOTE;\n        case 2:\n        case \"SIGNED_MSG_TYPE_PRECOMMIT\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT;\n        case 32:\n        case \"SIGNED_MSG_TYPE_PROPOSAL\":\n            return SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return SignedMsgType.UNRECOGNIZED;\n    }\n}\nexport function signedMsgTypeToJSON(object) {\n    switch (object) {\n        case SignedMsgType.SIGNED_MSG_TYPE_UNKNOWN:\n            return \"SIGNED_MSG_TYPE_UNKNOWN\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PREVOTE:\n            return \"SIGNED_MSG_TYPE_PREVOTE\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PRECOMMIT:\n            return \"SIGNED_MSG_TYPE_PRECOMMIT\";\n        case SignedMsgType.SIGNED_MSG_TYPE_PROPOSAL:\n            return \"SIGNED_MSG_TYPE_PROPOSAL\";\n        default:\n            return \"UNKNOWN\";\n    }\n}\nconst basePartSetHeader = { total: 0 };\nexport const PartSetHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.total !== 0) {\n            writer.uint32(8).uint32(message.total);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(18).bytes(message.hash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePartSetHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = reader.uint32();\n                    break;\n                case 2:\n                    message.hash = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = Number(object.total);\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePartSetHeader };\n        if (object.total !== undefined && object.total !== null) {\n            message.total = object.total;\n        }\n        else {\n            message.total = 0;\n        }\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst basePart = { index: 0 };\nexport const Part = {\n    encode(message, writer = Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.bytes.length !== 0) {\n            writer.uint32(18).bytes(message.bytes);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePart };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.index = reader.uint32();\n                    break;\n                case 2:\n                    message.bytes = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = Number(object.index);\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = bytesFromBase64(object.bytes);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.index !== undefined && (obj.index = message.index);\n        message.bytes !== undefined &&\n            (obj.bytes = base64FromBytes(message.bytes !== undefined ? message.bytes : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePart };\n        if (object.index !== undefined && object.index !== null) {\n            message.index = object.index;\n        }\n        else {\n            message.index = 0;\n        }\n        if (object.bytes !== undefined && object.bytes !== null) {\n            message.bytes = object.bytes;\n        }\n        else {\n            message.bytes = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockID = {};\nexport const BlockID = {\n    encode(message, writer = Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.partSetHeader !== undefined) {\n            PartSetHeader.encode(message.partSetHeader, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockID };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hash = reader.bytes();\n                    break;\n                case 2:\n                    message.partSetHeader = PartSetHeader.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = bytesFromBase64(object.hash);\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromJSON(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hash !== undefined &&\n            (obj.hash = base64FromBytes(message.hash !== undefined ? message.hash : new Uint8Array()));\n        message.partSetHeader !== undefined &&\n            (obj.partSetHeader = message.partSetHeader\n                ? PartSetHeader.toJSON(message.partSetHeader)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockID };\n        if (object.hash !== undefined && object.hash !== null) {\n            message.hash = object.hash;\n        }\n        else {\n            message.hash = new Uint8Array();\n        }\n        if (object.partSetHeader !== undefined && object.partSetHeader !== null) {\n            message.partSetHeader = PartSetHeader.fromPartial(object.partSetHeader);\n        }\n        else {\n            message.partSetHeader = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeader = { chainId: \"\", height: 0 };\nexport const Header = {\n    encode(message, writer = Writer.create()) {\n        if (message.version !== undefined) {\n            Consensus.encode(message.version, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.height !== 0) {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.lastBlockId !== undefined) {\n            BlockID.encode(message.lastBlockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.lastCommitHash.length !== 0) {\n            writer.uint32(50).bytes(message.lastCommitHash);\n        }\n        if (message.dataHash.length !== 0) {\n            writer.uint32(58).bytes(message.dataHash);\n        }\n        if (message.validatorsHash.length !== 0) {\n            writer.uint32(66).bytes(message.validatorsHash);\n        }\n        if (message.nextValidatorsHash.length !== 0) {\n            writer.uint32(74).bytes(message.nextValidatorsHash);\n        }\n        if (message.consensusHash.length !== 0) {\n            writer.uint32(82).bytes(message.consensusHash);\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(90).bytes(message.appHash);\n        }\n        if (message.lastResultsHash.length !== 0) {\n            writer.uint32(98).bytes(message.lastResultsHash);\n        }\n        if (message.evidenceHash.length !== 0) {\n            writer.uint32(106).bytes(message.evidenceHash);\n        }\n        if (message.proposerAddress.length !== 0) {\n            writer.uint32(114).bytes(message.proposerAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.version = Consensus.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.chainId = reader.string();\n                    break;\n                case 3:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 4:\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.lastBlockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.lastCommitHash = reader.bytes();\n                    break;\n                case 7:\n                    message.dataHash = reader.bytes();\n                    break;\n                case 8:\n                    message.validatorsHash = reader.bytes();\n                    break;\n                case 9:\n                    message.nextValidatorsHash = reader.bytes();\n                    break;\n                case 10:\n                    message.consensusHash = reader.bytes();\n                    break;\n                case 11:\n                    message.appHash = reader.bytes();\n                    break;\n                case 12:\n                    message.lastResultsHash = reader.bytes();\n                    break;\n                case 13:\n                    message.evidenceHash = reader.bytes();\n                    break;\n                case 14:\n                    message.proposerAddress = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromJSON(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = String(object.chainId);\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = fromJsonTimestamp(object.time);\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromJSON(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = bytesFromBase64(object.lastCommitHash);\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = bytesFromBase64(object.dataHash);\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = bytesFromBase64(object.validatorsHash);\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = bytesFromBase64(object.nextValidatorsHash);\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = bytesFromBase64(object.consensusHash);\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = bytesFromBase64(object.appHash);\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = bytesFromBase64(object.lastResultsHash);\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = bytesFromBase64(object.evidenceHash);\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = bytesFromBase64(object.proposerAddress);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.version !== undefined &&\n            (obj.version = message.version\n                ? Consensus.toJSON(message.version)\n                : undefined);\n        message.chainId !== undefined && (obj.chainId = message.chainId);\n        message.height !== undefined && (obj.height = message.height);\n        message.time !== undefined &&\n            (obj.time =\n                message.time !== undefined ? message.time.toISOString() : null);\n        message.lastBlockId !== undefined &&\n            (obj.lastBlockId = message.lastBlockId\n                ? BlockID.toJSON(message.lastBlockId)\n                : undefined);\n        message.lastCommitHash !== undefined &&\n            (obj.lastCommitHash = base64FromBytes(message.lastCommitHash !== undefined\n                ? message.lastCommitHash\n                : new Uint8Array()));\n        message.dataHash !== undefined &&\n            (obj.dataHash = base64FromBytes(message.dataHash !== undefined ? message.dataHash : new Uint8Array()));\n        message.validatorsHash !== undefined &&\n            (obj.validatorsHash = base64FromBytes(message.validatorsHash !== undefined\n                ? message.validatorsHash\n                : new Uint8Array()));\n        message.nextValidatorsHash !== undefined &&\n            (obj.nextValidatorsHash = base64FromBytes(message.nextValidatorsHash !== undefined\n                ? message.nextValidatorsHash\n                : new Uint8Array()));\n        message.consensusHash !== undefined &&\n            (obj.consensusHash = base64FromBytes(message.consensusHash !== undefined\n                ? message.consensusHash\n                : new Uint8Array()));\n        message.appHash !== undefined &&\n            (obj.appHash = base64FromBytes(message.appHash !== undefined ? message.appHash : new Uint8Array()));\n        message.lastResultsHash !== undefined &&\n            (obj.lastResultsHash = base64FromBytes(message.lastResultsHash !== undefined\n                ? message.lastResultsHash\n                : new Uint8Array()));\n        message.evidenceHash !== undefined &&\n            (obj.evidenceHash = base64FromBytes(message.evidenceHash !== undefined\n                ? message.evidenceHash\n                : new Uint8Array()));\n        message.proposerAddress !== undefined &&\n            (obj.proposerAddress = base64FromBytes(message.proposerAddress !== undefined\n                ? message.proposerAddress\n                : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeader };\n        if (object.version !== undefined && object.version !== null) {\n            message.version = Consensus.fromPartial(object.version);\n        }\n        else {\n            message.version = undefined;\n        }\n        if (object.chainId !== undefined && object.chainId !== null) {\n            message.chainId = object.chainId;\n        }\n        else {\n            message.chainId = \"\";\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.time !== undefined && object.time !== null) {\n            message.time = object.time;\n        }\n        else {\n            message.time = undefined;\n        }\n        if (object.lastBlockId !== undefined && object.lastBlockId !== null) {\n            message.lastBlockId = BlockID.fromPartial(object.lastBlockId);\n        }\n        else {\n            message.lastBlockId = undefined;\n        }\n        if (object.lastCommitHash !== undefined && object.lastCommitHash !== null) {\n            message.lastCommitHash = object.lastCommitHash;\n        }\n        else {\n            message.lastCommitHash = new Uint8Array();\n        }\n        if (object.dataHash !== undefined && object.dataHash !== null) {\n            message.dataHash = object.dataHash;\n        }\n        else {\n            message.dataHash = new Uint8Array();\n        }\n        if (object.validatorsHash !== undefined && object.validatorsHash !== null) {\n            message.validatorsHash = object.validatorsHash;\n        }\n        else {\n            message.validatorsHash = new Uint8Array();\n        }\n        if (object.nextValidatorsHash !== undefined &&\n            object.nextValidatorsHash !== null) {\n            message.nextValidatorsHash = object.nextValidatorsHash;\n        }\n        else {\n            message.nextValidatorsHash = new Uint8Array();\n        }\n        if (object.consensusHash !== undefined && object.consensusHash !== null) {\n            message.consensusHash = object.consensusHash;\n        }\n        else {\n            message.consensusHash = new Uint8Array();\n        }\n        if (object.appHash !== undefined && object.appHash !== null) {\n            message.appHash = object.appHash;\n        }\n        else {\n            message.appHash = new Uint8Array();\n        }\n        if (object.lastResultsHash !== undefined &&\n            object.lastResultsHash !== null) {\n            message.lastResultsHash = object.lastResultsHash;\n        }\n        else {\n            message.lastResultsHash = new Uint8Array();\n        }\n        if (object.evidenceHash !== undefined && object.evidenceHash !== null) {\n            message.evidenceHash = object.evidenceHash;\n        }\n        else {\n            message.evidenceHash = new Uint8Array();\n        }\n        if (object.proposerAddress !== undefined &&\n            object.proposerAddress !== null) {\n            message.proposerAddress = object.proposerAddress;\n        }\n        else {\n            message.proposerAddress = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseData = {};\nexport const Data = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.txs) {\n            writer.uint32(10).bytes(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseData };\n        message.txs = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.txs.push(reader.bytes());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(bytesFromBase64(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.txs) {\n            obj.txs = message.txs.map((e) => base64FromBytes(e !== undefined ? e : new Uint8Array()));\n        }\n        else {\n            obj.txs = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseData };\n        message.txs = [];\n        if (object.txs !== undefined && object.txs !== null) {\n            for (const e of object.txs) {\n                message.txs.push(e);\n            }\n        }\n        return message;\n    },\n};\nconst baseVote = { type: 0, height: 0, round: 0, validatorIndex: 0 };\nexport const Vote = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(42).fork()).ldelim();\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(50).bytes(message.validatorAddress);\n        }\n        if (message.validatorIndex !== 0) {\n            writer.uint32(56).int32(message.validatorIndex);\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(66).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 7:\n                    message.validatorIndex = reader.int32();\n                    break;\n                case 8:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = Number(object.validatorIndex);\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.validatorIndex !== undefined &&\n            (obj.validatorIndex = message.validatorIndex);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseVote };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.validatorIndex !== undefined && object.validatorIndex !== null) {\n            message.validatorIndex = object.validatorIndex;\n        }\n        else {\n            message.validatorIndex = 0;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseCommit = { height: 0, round: 0 };\nexport const Commit = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== 0) {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(16).int32(message.round);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.signatures) {\n            CommitSig.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommit };\n        message.signatures = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.round = reader.int32();\n                    break;\n                case 3:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.signatures.push(CommitSig.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        if (message.signatures) {\n            obj.signatures = message.signatures.map((e) => e ? CommitSig.toJSON(e) : undefined);\n        }\n        else {\n            obj.signatures = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommit };\n        message.signatures = [];\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.signatures !== undefined && object.signatures !== null) {\n            for (const e of object.signatures) {\n                message.signatures.push(CommitSig.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseCommitSig = { blockIdFlag: 0 };\nexport const CommitSig = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockIdFlag !== 0) {\n            writer.uint32(8).int32(message.blockIdFlag);\n        }\n        if (message.validatorAddress.length !== 0) {\n            writer.uint32(18).bytes(message.validatorAddress);\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(26).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(34).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCommitSig };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockIdFlag = reader.int32();\n                    break;\n                case 2:\n                    message.validatorAddress = reader.bytes();\n                    break;\n                case 3:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = blockIDFlagFromJSON(object.blockIdFlag);\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = bytesFromBase64(object.validatorAddress);\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockIdFlag !== undefined &&\n            (obj.blockIdFlag = blockIDFlagToJSON(message.blockIdFlag));\n        message.validatorAddress !== undefined &&\n            (obj.validatorAddress = base64FromBytes(message.validatorAddress !== undefined\n                ? message.validatorAddress\n                : new Uint8Array()));\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCommitSig };\n        if (object.blockIdFlag !== undefined && object.blockIdFlag !== null) {\n            message.blockIdFlag = object.blockIdFlag;\n        }\n        else {\n            message.blockIdFlag = 0;\n        }\n        if (object.validatorAddress !== undefined &&\n            object.validatorAddress !== null) {\n            message.validatorAddress = object.validatorAddress;\n        }\n        else {\n            message.validatorAddress = new Uint8Array();\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseProposal = { type: 0, height: 0, round: 0, polRound: 0 };\nexport const Proposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.height !== 0) {\n            writer.uint32(16).int64(message.height);\n        }\n        if (message.round !== 0) {\n            writer.uint32(24).int32(message.round);\n        }\n        if (message.polRound !== 0) {\n            writer.uint32(32).int32(message.polRound);\n        }\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.timestamp !== undefined) {\n            Timestamp.encode(toTimestamp(message.timestamp), writer.uint32(50).fork()).ldelim();\n        }\n        if (message.signature.length !== 0) {\n            writer.uint32(58).bytes(message.signature);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.height = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.round = reader.int32();\n                    break;\n                case 4:\n                    message.polRound = reader.int32();\n                    break;\n                case 5:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.timestamp = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    break;\n                case 7:\n                    message.signature = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = signedMsgTypeFromJSON(object.type);\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Number(object.height);\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = Number(object.round);\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = Number(object.polRound);\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = fromJsonTimestamp(object.timestamp);\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = bytesFromBase64(object.signature);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.type !== undefined &&\n            (obj.type = signedMsgTypeToJSON(message.type));\n        message.height !== undefined && (obj.height = message.height);\n        message.round !== undefined && (obj.round = message.round);\n        message.polRound !== undefined && (obj.polRound = message.polRound);\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.timestamp !== undefined &&\n            (obj.timestamp =\n                message.timestamp !== undefined\n                    ? message.timestamp.toISOString()\n                    : null);\n        message.signature !== undefined &&\n            (obj.signature = base64FromBytes(message.signature !== undefined ? message.signature : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseProposal };\n        if (object.type !== undefined && object.type !== null) {\n            message.type = object.type;\n        }\n        else {\n            message.type = 0;\n        }\n        if (object.height !== undefined && object.height !== null) {\n            message.height = object.height;\n        }\n        else {\n            message.height = 0;\n        }\n        if (object.round !== undefined && object.round !== null) {\n            message.round = object.round;\n        }\n        else {\n            message.round = 0;\n        }\n        if (object.polRound !== undefined && object.polRound !== null) {\n            message.polRound = object.polRound;\n        }\n        else {\n            message.polRound = 0;\n        }\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.timestamp !== undefined && object.timestamp !== null) {\n            message.timestamp = object.timestamp;\n        }\n        else {\n            message.timestamp = undefined;\n        }\n        if (object.signature !== undefined && object.signature !== null) {\n            message.signature = object.signature;\n        }\n        else {\n            message.signature = new Uint8Array();\n        }\n        return message;\n    },\n};\nconst baseSignedHeader = {};\nexport const SignedHeader = {\n    encode(message, writer = Writer.create()) {\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            Commit.encode(message.commit, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseSignedHeader };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.commit = Commit.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromJSON(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.commit !== undefined &&\n            (obj.commit = message.commit ? Commit.toJSON(message.commit) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseSignedHeader };\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.commit !== undefined && object.commit !== null) {\n            message.commit = Commit.fromPartial(object.commit);\n        }\n        else {\n            message.commit = undefined;\n        }\n        return message;\n    },\n};\nconst baseLightBlock = {};\nexport const LightBlock = {\n    encode(message, writer = Writer.create()) {\n        if (message.signedHeader !== undefined) {\n            SignedHeader.encode(message.signedHeader, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.validatorSet !== undefined) {\n            ValidatorSet.encode(message.validatorSet, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseLightBlock };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.signedHeader = SignedHeader.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.validatorSet = ValidatorSet.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromJSON(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromJSON(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.signedHeader !== undefined &&\n            (obj.signedHeader = message.signedHeader\n                ? SignedHeader.toJSON(message.signedHeader)\n                : undefined);\n        message.validatorSet !== undefined &&\n            (obj.validatorSet = message.validatorSet\n                ? ValidatorSet.toJSON(message.validatorSet)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseLightBlock };\n        if (object.signedHeader !== undefined && object.signedHeader !== null) {\n            message.signedHeader = SignedHeader.fromPartial(object.signedHeader);\n        }\n        else {\n            message.signedHeader = undefined;\n        }\n        if (object.validatorSet !== undefined && object.validatorSet !== null) {\n            message.validatorSet = ValidatorSet.fromPartial(object.validatorSet);\n        }\n        else {\n            message.validatorSet = undefined;\n        }\n        return message;\n    },\n};\nconst baseBlockMeta = { blockSize: 0, numTxs: 0 };\nexport const BlockMeta = {\n    encode(message, writer = Writer.create()) {\n        if (message.blockId !== undefined) {\n            BlockID.encode(message.blockId, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.blockSize !== 0) {\n            writer.uint32(16).int64(message.blockSize);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.numTxs !== 0) {\n            writer.uint32(32).int64(message.numTxs);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseBlockMeta };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.blockId = BlockID.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.blockSize = longToNumber(reader.int64());\n                    break;\n                case 3:\n                    message.header = Header.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.numTxs = longToNumber(reader.int64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromJSON(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = Number(object.blockSize);\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = Number(object.numTxs);\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.blockId !== undefined &&\n            (obj.blockId = message.blockId\n                ? BlockID.toJSON(message.blockId)\n                : undefined);\n        message.blockSize !== undefined && (obj.blockSize = message.blockSize);\n        message.header !== undefined &&\n            (obj.header = message.header ? Header.toJSON(message.header) : undefined);\n        message.numTxs !== undefined && (obj.numTxs = message.numTxs);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseBlockMeta };\n        if (object.blockId !== undefined && object.blockId !== null) {\n            message.blockId = BlockID.fromPartial(object.blockId);\n        }\n        else {\n            message.blockId = undefined;\n        }\n        if (object.blockSize !== undefined && object.blockSize !== null) {\n            message.blockSize = object.blockSize;\n        }\n        else {\n            message.blockSize = 0;\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Header.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        if (object.numTxs !== undefined && object.numTxs !== null) {\n            message.numTxs = object.numTxs;\n        }\n        else {\n            message.numTxs = 0;\n        }\n        return message;\n    },\n};\nconst baseTxProof = {};\nexport const TxProof = {\n    encode(message, writer = Writer.create()) {\n        if (message.rootHash.length !== 0) {\n            writer.uint32(10).bytes(message.rootHash);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.proof !== undefined) {\n            Proof.encode(message.proof, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTxProof };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.rootHash = reader.bytes();\n                    break;\n                case 2:\n                    message.data = reader.bytes();\n                    break;\n                case 3:\n                    message.proof = Proof.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = bytesFromBase64(object.rootHash);\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = bytesFromBase64(object.data);\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromJSON(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.rootHash !== undefined &&\n            (obj.rootHash = base64FromBytes(message.rootHash !== undefined ? message.rootHash : new Uint8Array()));\n        message.data !== undefined &&\n            (obj.data = base64FromBytes(message.data !== undefined ? message.data : new Uint8Array()));\n        message.proof !== undefined &&\n            (obj.proof = message.proof ? Proof.toJSON(message.proof) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTxProof };\n        if (object.rootHash !== undefined && object.rootHash !== null) {\n            message.rootHash = object.rootHash;\n        }\n        else {\n            message.rootHash = new Uint8Array();\n        }\n        if (object.data !== undefined && object.data !== null) {\n            message.data = object.data;\n        }\n        else {\n            message.data = new Uint8Array();\n        }\n        if (object.proof !== undefined && object.proof !== null) {\n            message.proof = Proof.fromPartial(object.proof);\n        }\n        else {\n            message.proof = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\nfunction toTimestamp(date) {\n    const seconds = date.getTime() / 1000;\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = t.seconds * 1000;\n    millis += t.nanos / 1000000;\n    return new Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nimport { Any } from \"../../../../google/protobuf/any\";\nexport const protobufPackage = \"ibc.core.client.v1\";\nconst baseIdentifiedClientState = { clientId: \"\" };\nexport const IdentifiedClientState = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        if (message.clientState !== undefined) {\n            Any.encode(message.clientState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIdentifiedClientState };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.clientState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromJSON(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.clientState !== undefined &&\n            (obj.clientState = message.clientState\n                ? Any.toJSON(message.clientState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIdentifiedClientState };\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.clientState !== undefined && object.clientState !== null) {\n            message.clientState = Any.fromPartial(object.clientState);\n        }\n        else {\n            message.clientState = undefined;\n        }\n        return message;\n    },\n};\nconst baseConsensusStateWithHeight = {};\nexport const ConsensusStateWithHeight = {\n    encode(message, writer = Writer.create()) {\n        if (message.height !== undefined) {\n            Height.encode(message.height, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusState !== undefined) {\n            Any.encode(message.consensusState, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.height = Height.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.consensusState = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromJSON(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromJSON(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.height !== undefined &&\n            (obj.height = message.height ? Height.toJSON(message.height) : undefined);\n        message.consensusState !== undefined &&\n            (obj.consensusState = message.consensusState\n                ? Any.toJSON(message.consensusState)\n                : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseConsensusStateWithHeight,\n        };\n        if (object.height !== undefined && object.height !== null) {\n            message.height = Height.fromPartial(object.height);\n        }\n        else {\n            message.height = undefined;\n        }\n        if (object.consensusState !== undefined && object.consensusState !== null) {\n            message.consensusState = Any.fromPartial(object.consensusState);\n        }\n        else {\n            message.consensusState = undefined;\n        }\n        return message;\n    },\n};\nconst baseClientConsensusStates = { clientId: \"\" };\nexport const ClientConsensusStates = {\n    encode(message, writer = Writer.create()) {\n        if (message.clientId !== \"\") {\n            writer.uint32(10).string(message.clientId);\n        }\n        for (const v of message.consensusStates) {\n            ConsensusStateWithHeight.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.clientId = reader.string();\n                    break;\n                case 2:\n                    message.consensusStates.push(ConsensusStateWithHeight.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        if (message.consensusStates) {\n            obj.consensusStates = message.consensusStates.map((e) => e ? ConsensusStateWithHeight.toJSON(e) : undefined);\n        }\n        else {\n            obj.consensusStates = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientConsensusStates };\n        message.consensusStates = [];\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.consensusStates !== undefined &&\n            object.consensusStates !== null) {\n            for (const e of object.consensusStates) {\n                message.consensusStates.push(ConsensusStateWithHeight.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseClientUpdateProposal = {\n    title: \"\",\n    description: \"\",\n    clientId: \"\",\n};\nexport const ClientUpdateProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.title !== \"\") {\n            writer.uint32(10).string(message.title);\n        }\n        if (message.description !== \"\") {\n            writer.uint32(18).string(message.description);\n        }\n        if (message.clientId !== \"\") {\n            writer.uint32(26).string(message.clientId);\n        }\n        if (message.header !== undefined) {\n            Any.encode(message.header, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseClientUpdateProposal };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.title = reader.string();\n                    break;\n                case 2:\n                    message.description = reader.string();\n                    break;\n                case 3:\n                    message.clientId = reader.string();\n                    break;\n                case 4:\n                    message.header = Any.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = String(object.title);\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = String(object.description);\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = String(object.clientId);\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromJSON(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.title !== undefined && (obj.title = message.title);\n        message.description !== undefined &&\n            (obj.description = message.description);\n        message.clientId !== undefined && (obj.clientId = message.clientId);\n        message.header !== undefined &&\n            (obj.header = message.header ? Any.toJSON(message.header) : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseClientUpdateProposal };\n        if (object.title !== undefined && object.title !== null) {\n            message.title = object.title;\n        }\n        else {\n            message.title = \"\";\n        }\n        if (object.description !== undefined && object.description !== null) {\n            message.description = object.description;\n        }\n        else {\n            message.description = \"\";\n        }\n        if (object.clientId !== undefined && object.clientId !== null) {\n            message.clientId = object.clientId;\n        }\n        else {\n            message.clientId = \"\";\n        }\n        if (object.header !== undefined && object.header !== null) {\n            message.header = Any.fromPartial(object.header);\n        }\n        else {\n            message.header = undefined;\n        }\n        return message;\n    },\n};\nconst baseHeight = { revisionNumber: 0, revisionHeight: 0 };\nexport const Height = {\n    encode(message, writer = Writer.create()) {\n        if (message.revisionNumber !== 0) {\n            writer.uint32(8).uint64(message.revisionNumber);\n        }\n        if (message.revisionHeight !== 0) {\n            writer.uint32(16).uint64(message.revisionHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseHeight };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.revisionNumber = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.revisionHeight = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = Number(object.revisionNumber);\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = Number(object.revisionHeight);\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.revisionNumber !== undefined &&\n            (obj.revisionNumber = message.revisionNumber);\n        message.revisionHeight !== undefined &&\n            (obj.revisionHeight = message.revisionHeight);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseHeight };\n        if (object.revisionNumber !== undefined && object.revisionNumber !== null) {\n            message.revisionNumber = object.revisionNumber;\n        }\n        else {\n            message.revisionNumber = 0;\n        }\n        if (object.revisionHeight !== undefined && object.revisionHeight !== null) {\n            message.revisionHeight = object.revisionHeight;\n        }\n        else {\n            message.revisionHeight = 0;\n        }\n        return message;\n    },\n};\nconst baseParams = { allowedClients: \"\" };\nexport const Params = {\n    encode(message, writer = Writer.create()) {\n        for (const v of message.allowedClients) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.allowedClients.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(String(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.allowedClients) {\n            obj.allowedClients = message.allowedClients.map((e) => e);\n        }\n        else {\n            obj.allowedClients = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseParams };\n        message.allowedClients = [];\n        if (object.allowedClients !== undefined && object.allowedClients !== null) {\n            for (const e of object.allowedClients) {\n                message.allowedClients.push(e);\n            }\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Coin } from \"../../../../cosmos/base/v1beta1/coin\";\nimport { Height } from \"../../../../ibc/core/client/v1/client\";\nexport const protobufPackage = \"ibc.applications.transfer.v1\";\nconst baseMsgTransfer = {\n    sourcePort: \"\",\n    sourceChannel: \"\",\n    sender: \"\",\n    receiver: \"\",\n    timeoutTimestamp: 0,\n};\nexport const MsgTransfer = {\n    encode(message, writer = Writer.create()) {\n        if (message.sourcePort !== \"\") {\n            writer.uint32(10).string(message.sourcePort);\n        }\n        if (message.sourceChannel !== \"\") {\n            writer.uint32(18).string(message.sourceChannel);\n        }\n        if (message.token !== undefined) {\n            Coin.encode(message.token, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(34).string(message.sender);\n        }\n        if (message.receiver !== \"\") {\n            writer.uint32(42).string(message.receiver);\n        }\n        if (message.timeoutHeight !== undefined) {\n            Height.encode(message.timeoutHeight, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.timeoutTimestamp !== 0) {\n            writer.uint32(56).uint64(message.timeoutTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransfer };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sourcePort = reader.string();\n                    break;\n                case 2:\n                    message.sourceChannel = reader.string();\n                    break;\n                case 3:\n                    message.token = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.sender = reader.string();\n                    break;\n                case 5:\n                    message.receiver = reader.string();\n                    break;\n                case 6:\n                    message.timeoutHeight = Height.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.timeoutTimestamp = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = String(object.sourcePort);\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = String(object.sourceChannel);\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromJSON(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = String(object.sender);\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = String(object.receiver);\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromJSON(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = Number(object.timeoutTimestamp);\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sourcePort !== undefined && (obj.sourcePort = message.sourcePort);\n        message.sourceChannel !== undefined &&\n            (obj.sourceChannel = message.sourceChannel);\n        message.token !== undefined &&\n            (obj.token = message.token ? Coin.toJSON(message.token) : undefined);\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.receiver !== undefined && (obj.receiver = message.receiver);\n        message.timeoutHeight !== undefined &&\n            (obj.timeoutHeight = message.timeoutHeight\n                ? Height.toJSON(message.timeoutHeight)\n                : undefined);\n        message.timeoutTimestamp !== undefined &&\n            (obj.timeoutTimestamp = message.timeoutTimestamp);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgTransfer };\n        if (object.sourcePort !== undefined && object.sourcePort !== null) {\n            message.sourcePort = object.sourcePort;\n        }\n        else {\n            message.sourcePort = \"\";\n        }\n        if (object.sourceChannel !== undefined && object.sourceChannel !== null) {\n            message.sourceChannel = object.sourceChannel;\n        }\n        else {\n            message.sourceChannel = \"\";\n        }\n        if (object.token !== undefined && object.token !== null) {\n            message.token = Coin.fromPartial(object.token);\n        }\n        else {\n            message.token = undefined;\n        }\n        if (object.sender !== undefined && object.sender !== null) {\n            message.sender = object.sender;\n        }\n        else {\n            message.sender = \"\";\n        }\n        if (object.receiver !== undefined && object.receiver !== null) {\n            message.receiver = object.receiver;\n        }\n        else {\n            message.receiver = \"\";\n        }\n        if (object.timeoutHeight !== undefined && object.timeoutHeight !== null) {\n            message.timeoutHeight = Height.fromPartial(object.timeoutHeight);\n        }\n        else {\n            message.timeoutHeight = undefined;\n        }\n        if (object.timeoutTimestamp !== undefined &&\n            object.timeoutTimestamp !== null) {\n            message.timeoutTimestamp = object.timeoutTimestamp;\n        }\n        else {\n            message.timeoutTimestamp = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgTransferResponse = {};\nexport const MsgTransferResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgTransferResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgTransferResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    Transfer(request) {\n        const data = MsgTransfer.encode(request).finish();\n        const promise = this.rpc.request(\"ibc.applications.transfer.v1.Msg\", \"Transfer\", data);\n        return promise.then((data) => MsgTransferResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"tendermint.crypto\";\nconst basePublicKey = {};\nexport const PublicKey = {\n    encode(message, writer = Writer.create()) {\n        if (message.ed25519 !== undefined) {\n            writer.uint32(10).bytes(message.ed25519);\n        }\n        if (message.secp256k1 !== undefined) {\n            writer.uint32(18).bytes(message.secp256k1);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...basePublicKey };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ed25519 = reader.bytes();\n                    break;\n                case 2:\n                    message.secp256k1 = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = bytesFromBase64(object.ed25519);\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = bytesFromBase64(object.secp256k1);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ed25519 !== undefined &&\n            (obj.ed25519 =\n                message.ed25519 !== undefined\n                    ? base64FromBytes(message.ed25519)\n                    : undefined);\n        message.secp256k1 !== undefined &&\n            (obj.secp256k1 =\n                message.secp256k1 !== undefined\n                    ? base64FromBytes(message.secp256k1)\n                    : undefined);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...basePublicKey };\n        if (object.ed25519 !== undefined && object.ed25519 !== null) {\n            message.ed25519 = object.ed25519;\n        }\n        else {\n            message.ed25519 = undefined;\n        }\n        if (object.secp256k1 !== undefined && object.secp256k1 !== null) {\n            message.secp256k1 = object.secp256k1;\n        }\n        else {\n            message.secp256k1 = undefined;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseDuration = { seconds: 0, nanos: 0 };\nexport const Duration = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDuration };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDuration };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"cosmos.base.v1beta1\";\nconst baseCoin = { denom: \"\", amount: \"\" };\nexport const Coin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecCoin = { denom: \"\", amount: \"\" };\nexport const DecCoin = {\n    encode(message, writer = Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecCoin };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = String(object.denom);\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = String(object.amount);\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecCoin };\n        if (object.denom !== undefined && object.denom !== null) {\n            message.denom = object.denom;\n        }\n        else {\n            message.denom = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            message.amount = object.amount;\n        }\n        else {\n            message.amount = \"\";\n        }\n        return message;\n    },\n};\nconst baseIntProto = { int: \"\" };\nexport const IntProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.int !== \"\") {\n            writer.uint32(10).string(message.int);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseIntProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.int = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = String(object.int);\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.int !== undefined && (obj.int = message.int);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseIntProto };\n        if (object.int !== undefined && object.int !== null) {\n            message.int = object.int;\n        }\n        else {\n            message.int = \"\";\n        }\n        return message;\n    },\n};\nconst baseDecProto = { dec: \"\" };\nexport const DecProto = {\n    encode(message, writer = Writer.create()) {\n        if (message.dec !== \"\") {\n            writer.uint32(10).string(message.dec);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseDecProto };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.dec = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = String(object.dec);\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.dec !== undefined && (obj.dec = message.dec);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseDecProto };\n        if (object.dec !== undefined && object.dec !== null) {\n            message.dec = object.dec;\n        }\n        else {\n            message.dec = \"\";\n        }\n        return message;\n    },\n};\n","/* eslint-disable */\nimport * as Long from \"long\";\nimport { util, configure, Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseTimestamp = { seconds: 0, nanos: 0 };\nexport const Timestamp = {\n    encode(message, writer = Writer.create()) {\n        if (message.seconds !== 0) {\n            writer.uint32(8).int64(message.seconds);\n        }\n        if (message.nanos !== 0) {\n            writer.uint32(16).int32(message.nanos);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseTimestamp };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.seconds = longToNumber(reader.int64());\n                    break;\n                case 2:\n                    message.nanos = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = Number(object.seconds);\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = Number(object.nanos);\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.seconds !== undefined && (obj.seconds = message.seconds);\n        message.nanos !== undefined && (obj.nanos = message.nanos);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseTimestamp };\n        if (object.seconds !== undefined && object.seconds !== null) {\n            message.seconds = object.seconds;\n        }\n        else {\n            message.seconds = 0;\n        }\n        if (object.nanos !== undefined && object.nanos !== null) {\n            message.nanos = object.nanos;\n        }\n        else {\n            message.nanos = 0;\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { voteOptionFromJSON, voteOptionToJSON, } from \"../../../cosmos/gov/v1beta1/gov\";\nimport { Reader, util, configure, Writer } from \"protobufjs/minimal\";\nimport * as Long from \"long\";\nimport { Any } from \"../../../google/protobuf/any\";\nimport { Coin } from \"../../../cosmos/base/v1beta1/coin\";\nexport const protobufPackage = \"cosmos.gov.v1beta1\";\nconst baseMsgSubmitProposal = { proposer: \"\" };\nexport const MsgSubmitProposal = {\n    encode(message, writer = Writer.create()) {\n        if (message.content !== undefined) {\n            Any.encode(message.content, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.initialDeposit) {\n            Coin.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.proposer !== \"\") {\n            writer.uint32(26).string(message.proposer);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.content = Any.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.initialDeposit.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.proposer = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromJSON(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromJSON(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = String(object.proposer);\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.content !== undefined &&\n            (obj.content = message.content ? Any.toJSON(message.content) : undefined);\n        if (message.initialDeposit) {\n            obj.initialDeposit = message.initialDeposit.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.initialDeposit = [];\n        }\n        message.proposer !== undefined && (obj.proposer = message.proposer);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgSubmitProposal };\n        message.initialDeposit = [];\n        if (object.content !== undefined && object.content !== null) {\n            message.content = Any.fromPartial(object.content);\n        }\n        else {\n            message.content = undefined;\n        }\n        if (object.initialDeposit !== undefined && object.initialDeposit !== null) {\n            for (const e of object.initialDeposit) {\n                message.initialDeposit.push(Coin.fromPartial(e));\n            }\n        }\n        if (object.proposer !== undefined && object.proposer !== null) {\n            message.proposer = object.proposer;\n        }\n        else {\n            message.proposer = \"\";\n        }\n        return message;\n    },\n};\nconst baseMsgSubmitProposalResponse = { proposalId: 0 };\nexport const MsgSubmitProposalResponse = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        return obj;\n    },\n    fromPartial(object) {\n        const message = {\n            ...baseMsgSubmitProposalResponse,\n        };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVote = { proposalId: 0, voter: \"\", option: 0 };\nexport const MsgVote = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.voter !== \"\") {\n            writer.uint32(18).string(message.voter);\n        }\n        if (message.option !== 0) {\n            writer.uint32(24).int32(message.option);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVote };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.voter = reader.string();\n                    break;\n                case 3:\n                    message.option = reader.int32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = String(object.voter);\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = voteOptionFromJSON(object.option);\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.voter !== undefined && (obj.voter = message.voter);\n        message.option !== undefined &&\n            (obj.option = voteOptionToJSON(message.option));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgVote };\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.voter !== undefined && object.voter !== null) {\n            message.voter = object.voter;\n        }\n        else {\n            message.voter = \"\";\n        }\n        if (object.option !== undefined && object.option !== null) {\n            message.option = object.option;\n        }\n        else {\n            message.option = 0;\n        }\n        return message;\n    },\n};\nconst baseMsgVoteResponse = {};\nexport const MsgVoteResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgVoteResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgVoteResponse };\n        return message;\n    },\n};\nconst baseMsgDeposit = { proposalId: 0, depositor: \"\" };\nexport const MsgDeposit = {\n    encode(message, writer = Writer.create()) {\n        if (message.proposalId !== 0) {\n            writer.uint32(8).uint64(message.proposalId);\n        }\n        if (message.depositor !== \"\") {\n            writer.uint32(18).string(message.depositor);\n        }\n        for (const v of message.amount) {\n            Coin.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.proposalId = longToNumber(reader.uint64());\n                    break;\n                case 2:\n                    message.depositor = reader.string();\n                    break;\n                case 3:\n                    message.amount.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = Number(object.proposalId);\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = String(object.depositor);\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromJSON(e));\n            }\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.proposalId !== undefined && (obj.proposalId = message.proposalId);\n        message.depositor !== undefined && (obj.depositor = message.depositor);\n        if (message.amount) {\n            obj.amount = message.amount.map((e) => (e ? Coin.toJSON(e) : undefined));\n        }\n        else {\n            obj.amount = [];\n        }\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseMsgDeposit };\n        message.amount = [];\n        if (object.proposalId !== undefined && object.proposalId !== null) {\n            message.proposalId = object.proposalId;\n        }\n        else {\n            message.proposalId = 0;\n        }\n        if (object.depositor !== undefined && object.depositor !== null) {\n            message.depositor = object.depositor;\n        }\n        else {\n            message.depositor = \"\";\n        }\n        if (object.amount !== undefined && object.amount !== null) {\n            for (const e of object.amount) {\n                message.amount.push(Coin.fromPartial(e));\n            }\n        }\n        return message;\n    },\n};\nconst baseMsgDepositResponse = {};\nexport const MsgDepositResponse = {\n    encode(_, writer = Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseMsgDepositResponse };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    fromPartial(_) {\n        const message = { ...baseMsgDepositResponse };\n        return message;\n    },\n};\nexport class MsgClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n    }\n    SubmitProposal(request) {\n        const data = MsgSubmitProposal.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"SubmitProposal\", data);\n        return promise.then((data) => MsgSubmitProposalResponse.decode(new Reader(data)));\n    }\n    Vote(request) {\n        const data = MsgVote.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Vote\", data);\n        return promise.then((data) => MsgVoteResponse.decode(new Reader(data)));\n    }\n    Deposit(request) {\n        const data = MsgDeposit.encode(request).finish();\n        const promise = this.rpc.request(\"cosmos.gov.v1beta1.Msg\", \"Deposit\", data);\n        return promise.then((data) => MsgDepositResponse.decode(new Reader(data)));\n    }\n}\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nfunction longToNumber(long) {\n    if (long.gt(Number.MAX_SAFE_INTEGER)) {\n        throw new globalThis.Error(\"Value is larger than Number.MAX_SAFE_INTEGER\");\n    }\n    return long.toNumber();\n}\nif (util.Long !== Long) {\n    util.Long = Long;\n    configure();\n}\n","/* eslint-disable */\nimport { Writer, Reader } from \"protobufjs/minimal\";\nexport const protobufPackage = \"google.protobuf\";\nconst baseAny = { typeUrl: \"\" };\nexport const Any = {\n    encode(message, writer = Writer.create()) {\n        if (message.typeUrl !== \"\") {\n            writer.uint32(10).string(message.typeUrl);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof Uint8Array ? new Reader(input) : input;\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = { ...baseAny };\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.typeUrl = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.bytes();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = String(object.typeUrl);\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = bytesFromBase64(object.value);\n        }\n        return message;\n    },\n    toJSON(message) {\n        const obj = {};\n        message.typeUrl !== undefined && (obj.typeUrl = message.typeUrl);\n        message.value !== undefined &&\n            (obj.value = base64FromBytes(message.value !== undefined ? message.value : new Uint8Array()));\n        return obj;\n    },\n    fromPartial(object) {\n        const message = { ...baseAny };\n        if (object.typeUrl !== undefined && object.typeUrl !== null) {\n            message.typeUrl = object.typeUrl;\n        }\n        else {\n            message.typeUrl = \"\";\n        }\n        if (object.value !== undefined && object.value !== null) {\n            message.value = object.value;\n        }\n        else {\n            message.value = new Uint8Array();\n        }\n        return message;\n    },\n};\nvar globalThis = (() => {\n    if (typeof globalThis !== \"undefined\")\n        return globalThis;\n    if (typeof self !== \"undefined\")\n        return self;\n    if (typeof window !== \"undefined\")\n        return window;\n    if (typeof global !== \"undefined\")\n        return global;\n    throw \"Unable to locate global object\";\n})();\nconst atob = globalThis.atob ||\n    ((b64) => globalThis.Buffer.from(b64, \"base64\").toString(\"binary\"));\nfunction bytesFromBase64(b64) {\n    const bin = atob(b64);\n    const arr = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; ++i) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return arr;\n}\nconst btoa = globalThis.btoa ||\n    ((bin) => globalThis.Buffer.from(bin, \"binary\").toString(\"base64\"));\nfunction base64FromBytes(arr) {\n    const bin = [];\n    for (let i = 0; i < arr.byteLength; ++i) {\n        bin.push(String.fromCharCode(arr[i]));\n    }\n    return btoa(bin.join(\"\"));\n}\n"],"sourceRoot":""}