// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: realestate/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	grpc1 "github.com/gogo/protobuf/grpc"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgCreateProperty struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Address   string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	City      string `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	State     string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Country   string `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	Zipcode   string `protobuf:"bytes,6,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Latitude  string `protobuf:"bytes,7,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude string `protobuf:"bytes,8,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (m *MsgCreateProperty) Reset()         { *m = MsgCreateProperty{} }
func (m *MsgCreateProperty) String() string { return proto.CompactTextString(m) }
func (*MsgCreateProperty) ProtoMessage()    {}
func (*MsgCreateProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{0}
}
func (m *MsgCreateProperty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateProperty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateProperty.Merge(m, src)
}
func (m *MsgCreateProperty) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateProperty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateProperty proto.InternalMessageInfo

func (m *MsgCreateProperty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateProperty) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgCreateProperty) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *MsgCreateProperty) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgCreateProperty) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MsgCreateProperty) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *MsgCreateProperty) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *MsgCreateProperty) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

type MsgCreatePropertyResponse struct {
	Id      uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *MsgCreatePropertyResponse) Reset()         { *m = MsgCreatePropertyResponse{} }
func (m *MsgCreatePropertyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePropertyResponse) ProtoMessage()    {}
func (*MsgCreatePropertyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{1}
}
func (m *MsgCreatePropertyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePropertyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePropertyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePropertyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePropertyResponse.Merge(m, src)
}
func (m *MsgCreatePropertyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePropertyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePropertyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePropertyResponse proto.InternalMessageInfo

func (m *MsgCreatePropertyResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreatePropertyResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MsgUpdateProperty struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id        uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Address   string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	City      string `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	State     string `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Country   string `protobuf:"bytes,6,opt,name=country,proto3" json:"country,omitempty"`
	Zipcode   string `protobuf:"bytes,7,opt,name=zipcode,proto3" json:"zipcode,omitempty"`
	Latitude  string `protobuf:"bytes,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude string `protobuf:"bytes,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (m *MsgUpdateProperty) Reset()         { *m = MsgUpdateProperty{} }
func (m *MsgUpdateProperty) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProperty) ProtoMessage()    {}
func (*MsgUpdateProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{2}
}
func (m *MsgUpdateProperty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProperty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProperty.Merge(m, src)
}
func (m *MsgUpdateProperty) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProperty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProperty proto.InternalMessageInfo

func (m *MsgUpdateProperty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateProperty) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateProperty) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateProperty) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *MsgUpdateProperty) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgUpdateProperty) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *MsgUpdateProperty) GetZipcode() string {
	if m != nil {
		return m.Zipcode
	}
	return ""
}

func (m *MsgUpdateProperty) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *MsgUpdateProperty) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

type MsgUpdatePropertyResponse struct {
}

func (m *MsgUpdatePropertyResponse) Reset()         { *m = MsgUpdatePropertyResponse{} }
func (m *MsgUpdatePropertyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePropertyResponse) ProtoMessage()    {}
func (*MsgUpdatePropertyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{3}
}
func (m *MsgUpdatePropertyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePropertyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePropertyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePropertyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePropertyResponse.Merge(m, src)
}
func (m *MsgUpdatePropertyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePropertyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePropertyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePropertyResponse proto.InternalMessageInfo

type MsgDeleteProperty struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteProperty) Reset()         { *m = MsgDeleteProperty{} }
func (m *MsgDeleteProperty) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteProperty) ProtoMessage()    {}
func (*MsgDeleteProperty) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{4}
}
func (m *MsgDeleteProperty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteProperty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteProperty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteProperty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteProperty.Merge(m, src)
}
func (m *MsgDeleteProperty) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteProperty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteProperty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteProperty proto.InternalMessageInfo

func (m *MsgDeleteProperty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteProperty) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeletePropertyResponse struct {
}

func (m *MsgDeletePropertyResponse) Reset()         { *m = MsgDeletePropertyResponse{} }
func (m *MsgDeletePropertyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePropertyResponse) ProtoMessage()    {}
func (*MsgDeletePropertyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{5}
}
func (m *MsgDeletePropertyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePropertyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePropertyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePropertyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePropertyResponse.Merge(m, src)
}
func (m *MsgDeletePropertyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePropertyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePropertyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePropertyResponse proto.InternalMessageInfo

type MsgCreateCertificate struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Property         uint64 `protobuf:"varint,2,opt,name=property,proto3" json:"property,omitempty"`
	Surveyor         string `protobuf:"bytes,3,opt,name=surveyor,proto3" json:"surveyor,omitempty"`
	CertifiationDate string `protobuf:"bytes,4,opt,name=certifiationDate,proto3" json:"certifiationDate,omitempty"`
	CertificateText  string `protobuf:"bytes,5,opt,name=certificateText,proto3" json:"certificateText,omitempty"`
	PropertyMap      string `protobuf:"bytes,6,opt,name=propertyMap,proto3" json:"propertyMap,omitempty"`
}

func (m *MsgCreateCertificate) Reset()         { *m = MsgCreateCertificate{} }
func (m *MsgCreateCertificate) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCertificate) ProtoMessage()    {}
func (*MsgCreateCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{6}
}
func (m *MsgCreateCertificate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCertificate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCertificate.Merge(m, src)
}
func (m *MsgCreateCertificate) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCertificate proto.InternalMessageInfo

func (m *MsgCreateCertificate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateCertificate) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

func (m *MsgCreateCertificate) GetSurveyor() string {
	if m != nil {
		return m.Surveyor
	}
	return ""
}

func (m *MsgCreateCertificate) GetCertifiationDate() string {
	if m != nil {
		return m.CertifiationDate
	}
	return ""
}

func (m *MsgCreateCertificate) GetCertificateText() string {
	if m != nil {
		return m.CertificateText
	}
	return ""
}

func (m *MsgCreateCertificate) GetPropertyMap() string {
	if m != nil {
		return m.PropertyMap
	}
	return ""
}

type MsgCreateCertificateResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateCertificateResponse) Reset()         { *m = MsgCreateCertificateResponse{} }
func (m *MsgCreateCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCertificateResponse) ProtoMessage()    {}
func (*MsgCreateCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{7}
}
func (m *MsgCreateCertificateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCertificateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCertificateResponse.Merge(m, src)
}
func (m *MsgCreateCertificateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCertificateResponse proto.InternalMessageInfo

func (m *MsgCreateCertificateResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateCertificate struct {
	Creator          string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id               uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Property         uint64 `protobuf:"varint,3,opt,name=property,proto3" json:"property,omitempty"`
	Surveyor         string `protobuf:"bytes,4,opt,name=surveyor,proto3" json:"surveyor,omitempty"`
	CertifiationDate string `protobuf:"bytes,5,opt,name=certifiationDate,proto3" json:"certifiationDate,omitempty"`
	CertificateText  string `protobuf:"bytes,6,opt,name=certificateText,proto3" json:"certificateText,omitempty"`
	PropertyMap      string `protobuf:"bytes,7,opt,name=propertyMap,proto3" json:"propertyMap,omitempty"`
}

func (m *MsgUpdateCertificate) Reset()         { *m = MsgUpdateCertificate{} }
func (m *MsgUpdateCertificate) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCertificate) ProtoMessage()    {}
func (*MsgUpdateCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{8}
}
func (m *MsgUpdateCertificate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCertificate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCertificate.Merge(m, src)
}
func (m *MsgUpdateCertificate) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCertificate proto.InternalMessageInfo

func (m *MsgUpdateCertificate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateCertificate) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateCertificate) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

func (m *MsgUpdateCertificate) GetSurveyor() string {
	if m != nil {
		return m.Surveyor
	}
	return ""
}

func (m *MsgUpdateCertificate) GetCertifiationDate() string {
	if m != nil {
		return m.CertifiationDate
	}
	return ""
}

func (m *MsgUpdateCertificate) GetCertificateText() string {
	if m != nil {
		return m.CertificateText
	}
	return ""
}

func (m *MsgUpdateCertificate) GetPropertyMap() string {
	if m != nil {
		return m.PropertyMap
	}
	return ""
}

type MsgUpdateCertificateResponse struct {
}

func (m *MsgUpdateCertificateResponse) Reset()         { *m = MsgUpdateCertificateResponse{} }
func (m *MsgUpdateCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCertificateResponse) ProtoMessage()    {}
func (*MsgUpdateCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{9}
}
func (m *MsgUpdateCertificateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCertificateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCertificateResponse.Merge(m, src)
}
func (m *MsgUpdateCertificateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCertificateResponse proto.InternalMessageInfo

type MsgDeleteCertificate struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteCertificate) Reset()         { *m = MsgDeleteCertificate{} }
func (m *MsgDeleteCertificate) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCertificate) ProtoMessage()    {}
func (*MsgDeleteCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{10}
}
func (m *MsgDeleteCertificate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCertificate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCertificate.Merge(m, src)
}
func (m *MsgDeleteCertificate) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCertificate proto.InternalMessageInfo

func (m *MsgDeleteCertificate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteCertificate) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteCertificateResponse struct {
}

func (m *MsgDeleteCertificateResponse) Reset()         { *m = MsgDeleteCertificateResponse{} }
func (m *MsgDeleteCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCertificateResponse) ProtoMessage()    {}
func (*MsgDeleteCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{11}
}
func (m *MsgDeleteCertificateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCertificateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCertificateResponse.Merge(m, src)
}
func (m *MsgDeleteCertificateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCertificateResponse proto.InternalMessageInfo

type MsgCreateLocking struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Owner         string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	DateLocking   string `protobuf:"bytes,3,opt,name=dateLocking,proto3" json:"dateLocking,omitempty"`
	DateUnlocking string `protobuf:"bytes,4,opt,name=dateUnlocking,proto3" json:"dateUnlocking,omitempty"`
	Assets        uint64 `protobuf:"varint,5,opt,name=assets,proto3" json:"assets,omitempty"`
	Property      uint64 `protobuf:"varint,6,opt,name=property,proto3" json:"property,omitempty"`
}

func (m *MsgCreateLocking) Reset()         { *m = MsgCreateLocking{} }
func (m *MsgCreateLocking) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLocking) ProtoMessage()    {}
func (*MsgCreateLocking) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{12}
}
func (m *MsgCreateLocking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLocking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLocking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLocking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLocking.Merge(m, src)
}
func (m *MsgCreateLocking) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLocking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLocking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLocking proto.InternalMessageInfo

func (m *MsgCreateLocking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateLocking) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgCreateLocking) GetDateLocking() string {
	if m != nil {
		return m.DateLocking
	}
	return ""
}

func (m *MsgCreateLocking) GetDateUnlocking() string {
	if m != nil {
		return m.DateUnlocking
	}
	return ""
}

func (m *MsgCreateLocking) GetAssets() uint64 {
	if m != nil {
		return m.Assets
	}
	return 0
}

func (m *MsgCreateLocking) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

type MsgCreateLockingResponse struct {
	Id       uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
}

func (m *MsgCreateLockingResponse) Reset()         { *m = MsgCreateLockingResponse{} }
func (m *MsgCreateLockingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateLockingResponse) ProtoMessage()    {}
func (*MsgCreateLockingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{13}
}
func (m *MsgCreateLockingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateLockingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateLockingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateLockingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateLockingResponse.Merge(m, src)
}
func (m *MsgCreateLockingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateLockingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateLockingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateLockingResponse proto.InternalMessageInfo

func (m *MsgCreateLockingResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateLockingResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type MsgUpdateLocking struct {
	Creator       string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id            uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Owner         string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	DateLocking   string `protobuf:"bytes,4,opt,name=dateLocking,proto3" json:"dateLocking,omitempty"`
	DateUnlocking string `protobuf:"bytes,5,opt,name=dateUnlocking,proto3" json:"dateUnlocking,omitempty"`
	Assets        uint64 `protobuf:"varint,6,opt,name=assets,proto3" json:"assets,omitempty"`
	Property      uint64 `protobuf:"varint,7,opt,name=property,proto3" json:"property,omitempty"`
}

func (m *MsgUpdateLocking) Reset()         { *m = MsgUpdateLocking{} }
func (m *MsgUpdateLocking) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLocking) ProtoMessage()    {}
func (*MsgUpdateLocking) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{14}
}
func (m *MsgUpdateLocking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLocking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLocking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLocking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLocking.Merge(m, src)
}
func (m *MsgUpdateLocking) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLocking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLocking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLocking proto.InternalMessageInfo

func (m *MsgUpdateLocking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLocking) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateLocking) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgUpdateLocking) GetDateLocking() string {
	if m != nil {
		return m.DateLocking
	}
	return ""
}

func (m *MsgUpdateLocking) GetDateUnlocking() string {
	if m != nil {
		return m.DateUnlocking
	}
	return ""
}

func (m *MsgUpdateLocking) GetAssets() uint64 {
	if m != nil {
		return m.Assets
	}
	return 0
}

func (m *MsgUpdateLocking) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

type MsgUpdateLockingResponse struct {
}

func (m *MsgUpdateLockingResponse) Reset()         { *m = MsgUpdateLockingResponse{} }
func (m *MsgUpdateLockingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLockingResponse) ProtoMessage()    {}
func (*MsgUpdateLockingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{15}
}
func (m *MsgUpdateLockingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLockingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLockingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLockingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLockingResponse.Merge(m, src)
}
func (m *MsgUpdateLockingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLockingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLockingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLockingResponse proto.InternalMessageInfo

type MsgDeleteLocking struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteLocking) Reset()         { *m = MsgDeleteLocking{} }
func (m *MsgDeleteLocking) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLocking) ProtoMessage()    {}
func (*MsgDeleteLocking) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{16}
}
func (m *MsgDeleteLocking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLocking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLocking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLocking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLocking.Merge(m, src)
}
func (m *MsgDeleteLocking) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLocking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLocking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLocking proto.InternalMessageInfo

func (m *MsgDeleteLocking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLocking) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteLockingResponse struct {
}

func (m *MsgDeleteLockingResponse) Reset()         { *m = MsgDeleteLockingResponse{} }
func (m *MsgDeleteLockingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLockingResponse) ProtoMessage()    {}
func (*MsgDeleteLockingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{17}
}
func (m *MsgDeleteLockingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLockingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLockingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLockingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLockingResponse.Merge(m, src)
}
func (m *MsgDeleteLockingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLockingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLockingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLockingResponse proto.InternalMessageInfo

type MsgCreateInspection struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Inspector         string `protobuf:"bytes,2,opt,name=inspector,proto3" json:"inspector,omitempty"`
	Property          uint64 `protobuf:"varint,3,opt,name=property,proto3" json:"property,omitempty"`
	Fees              string `protobuf:"bytes,4,opt,name=fees,proto3" json:"fees,omitempty"`
	InspectionResults string `protobuf:"bytes,5,opt,name=inspectionResults,proto3" json:"inspectionResults,omitempty"`
}

func (m *MsgCreateInspection) Reset()         { *m = MsgCreateInspection{} }
func (m *MsgCreateInspection) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInspection) ProtoMessage()    {}
func (*MsgCreateInspection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{18}
}
func (m *MsgCreateInspection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInspection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInspection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInspection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInspection.Merge(m, src)
}
func (m *MsgCreateInspection) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInspection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInspection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInspection proto.InternalMessageInfo

func (m *MsgCreateInspection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateInspection) GetInspector() string {
	if m != nil {
		return m.Inspector
	}
	return ""
}

func (m *MsgCreateInspection) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

func (m *MsgCreateInspection) GetFees() string {
	if m != nil {
		return m.Fees
	}
	return ""
}

func (m *MsgCreateInspection) GetInspectionResults() string {
	if m != nil {
		return m.InspectionResults
	}
	return ""
}

type MsgCreateInspectionResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateInspectionResponse) Reset()         { *m = MsgCreateInspectionResponse{} }
func (m *MsgCreateInspectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateInspectionResponse) ProtoMessage()    {}
func (*MsgCreateInspectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{19}
}
func (m *MsgCreateInspectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateInspectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateInspectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateInspectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateInspectionResponse.Merge(m, src)
}
func (m *MsgCreateInspectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateInspectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateInspectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateInspectionResponse proto.InternalMessageInfo

func (m *MsgCreateInspectionResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateInspection struct {
	Creator           string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id                uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Inspector         string `protobuf:"bytes,3,opt,name=inspector,proto3" json:"inspector,omitempty"`
	Property          uint64 `protobuf:"varint,4,opt,name=property,proto3" json:"property,omitempty"`
	Fees              string `protobuf:"bytes,5,opt,name=fees,proto3" json:"fees,omitempty"`
	InspectionResults string `protobuf:"bytes,6,opt,name=inspectionResults,proto3" json:"inspectionResults,omitempty"`
}

func (m *MsgUpdateInspection) Reset()         { *m = MsgUpdateInspection{} }
func (m *MsgUpdateInspection) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInspection) ProtoMessage()    {}
func (*MsgUpdateInspection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{20}
}
func (m *MsgUpdateInspection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInspection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInspection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInspection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInspection.Merge(m, src)
}
func (m *MsgUpdateInspection) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInspection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInspection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInspection proto.InternalMessageInfo

func (m *MsgUpdateInspection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateInspection) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateInspection) GetInspector() string {
	if m != nil {
		return m.Inspector
	}
	return ""
}

func (m *MsgUpdateInspection) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

func (m *MsgUpdateInspection) GetFees() string {
	if m != nil {
		return m.Fees
	}
	return ""
}

func (m *MsgUpdateInspection) GetInspectionResults() string {
	if m != nil {
		return m.InspectionResults
	}
	return ""
}

type MsgUpdateInspectionResponse struct {
}

func (m *MsgUpdateInspectionResponse) Reset()         { *m = MsgUpdateInspectionResponse{} }
func (m *MsgUpdateInspectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateInspectionResponse) ProtoMessage()    {}
func (*MsgUpdateInspectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{21}
}
func (m *MsgUpdateInspectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateInspectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateInspectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateInspectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateInspectionResponse.Merge(m, src)
}
func (m *MsgUpdateInspectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateInspectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateInspectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateInspectionResponse proto.InternalMessageInfo

type MsgDeleteInspection struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteInspection) Reset()         { *m = MsgDeleteInspection{} }
func (m *MsgDeleteInspection) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteInspection) ProtoMessage()    {}
func (*MsgDeleteInspection) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{22}
}
func (m *MsgDeleteInspection) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteInspection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteInspection.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteInspection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteInspection.Merge(m, src)
}
func (m *MsgDeleteInspection) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteInspection) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteInspection.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteInspection proto.InternalMessageInfo

func (m *MsgDeleteInspection) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteInspection) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteInspectionResponse struct {
}

func (m *MsgDeleteInspectionResponse) Reset()         { *m = MsgDeleteInspectionResponse{} }
func (m *MsgDeleteInspectionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteInspectionResponse) ProtoMessage()    {}
func (*MsgDeleteInspectionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{23}
}
func (m *MsgDeleteInspectionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteInspectionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteInspectionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteInspectionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteInspectionResponse.Merge(m, src)
}
func (m *MsgDeleteInspectionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteInspectionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteInspectionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteInspectionResponse proto.InternalMessageInfo

type MsgCreateTransference struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	From     string `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Date     string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Value    string `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	Property uint64 `protobuf:"varint,6,opt,name=property,proto3" json:"property,omitempty"`
}

func (m *MsgCreateTransference) Reset()         { *m = MsgCreateTransference{} }
func (m *MsgCreateTransference) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransference) ProtoMessage()    {}
func (*MsgCreateTransference) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{24}
}
func (m *MsgCreateTransference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransference.Merge(m, src)
}
func (m *MsgCreateTransference) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransference) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransference.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransference proto.InternalMessageInfo

func (m *MsgCreateTransference) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTransference) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgCreateTransference) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MsgCreateTransference) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *MsgCreateTransference) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgCreateTransference) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

type MsgCreateTransferenceResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTransferenceResponse) Reset()         { *m = MsgCreateTransferenceResponse{} }
func (m *MsgCreateTransferenceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTransferenceResponse) ProtoMessage()    {}
func (*MsgCreateTransferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{25}
}
func (m *MsgCreateTransferenceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTransferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTransferenceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTransferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTransferenceResponse.Merge(m, src)
}
func (m *MsgCreateTransferenceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTransferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTransferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTransferenceResponse proto.InternalMessageInfo

func (m *MsgCreateTransferenceResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTransference struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	From     string `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To       string `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Date     string `protobuf:"bytes,5,opt,name=date,proto3" json:"date,omitempty"`
	Value    string `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Property uint64 `protobuf:"varint,7,opt,name=property,proto3" json:"property,omitempty"`
}

func (m *MsgUpdateTransference) Reset()         { *m = MsgUpdateTransference{} }
func (m *MsgUpdateTransference) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransference) ProtoMessage()    {}
func (*MsgUpdateTransference) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{26}
}
func (m *MsgUpdateTransference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransference.Merge(m, src)
}
func (m *MsgUpdateTransference) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransference) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransference.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransference proto.InternalMessageInfo

func (m *MsgUpdateTransference) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTransference) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTransference) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *MsgUpdateTransference) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *MsgUpdateTransference) GetDate() string {
	if m != nil {
		return m.Date
	}
	return ""
}

func (m *MsgUpdateTransference) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *MsgUpdateTransference) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

type MsgUpdateTransferenceResponse struct {
}

func (m *MsgUpdateTransferenceResponse) Reset()         { *m = MsgUpdateTransferenceResponse{} }
func (m *MsgUpdateTransferenceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTransferenceResponse) ProtoMessage()    {}
func (*MsgUpdateTransferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{27}
}
func (m *MsgUpdateTransferenceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTransferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTransferenceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTransferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTransferenceResponse.Merge(m, src)
}
func (m *MsgUpdateTransferenceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTransferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTransferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTransferenceResponse proto.InternalMessageInfo

type MsgDeleteTransference struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTransference) Reset()         { *m = MsgDeleteTransference{} }
func (m *MsgDeleteTransference) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTransference) ProtoMessage()    {}
func (*MsgDeleteTransference) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{28}
}
func (m *MsgDeleteTransference) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTransference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTransference.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTransference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTransference.Merge(m, src)
}
func (m *MsgDeleteTransference) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTransference) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTransference.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTransference proto.InternalMessageInfo

func (m *MsgDeleteTransference) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTransference) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteTransferenceResponse struct {
}

func (m *MsgDeleteTransferenceResponse) Reset()         { *m = MsgDeleteTransferenceResponse{} }
func (m *MsgDeleteTransferenceResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTransferenceResponse) ProtoMessage()    {}
func (*MsgDeleteTransferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{29}
}
func (m *MsgDeleteTransferenceResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTransferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTransferenceResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTransferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTransferenceResponse.Merge(m, src)
}
func (m *MsgDeleteTransferenceResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTransferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTransferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTransferenceResponse proto.InternalMessageInfo

type MsgCreateHouse struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Blueprint   string `protobuf:"bytes,4,opt,name=blueprint,proto3" json:"blueprint,omitempty"`
}

func (m *MsgCreateHouse) Reset()         { *m = MsgCreateHouse{} }
func (m *MsgCreateHouse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateHouse) ProtoMessage()    {}
func (*MsgCreateHouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{30}
}
func (m *MsgCreateHouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateHouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateHouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateHouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateHouse.Merge(m, src)
}
func (m *MsgCreateHouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateHouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateHouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateHouse proto.InternalMessageInfo

func (m *MsgCreateHouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateHouse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateHouse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MsgCreateHouse) GetBlueprint() string {
	if m != nil {
		return m.Blueprint
	}
	return ""
}

type MsgCreateHouseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateHouseResponse) Reset()         { *m = MsgCreateHouseResponse{} }
func (m *MsgCreateHouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateHouseResponse) ProtoMessage()    {}
func (*MsgCreateHouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{31}
}
func (m *MsgCreateHouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateHouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateHouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateHouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateHouseResponse.Merge(m, src)
}
func (m *MsgCreateHouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateHouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateHouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateHouseResponse proto.InternalMessageInfo

func (m *MsgCreateHouseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateHouse struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Blueprint   string `protobuf:"bytes,5,opt,name=blueprint,proto3" json:"blueprint,omitempty"`
}

func (m *MsgUpdateHouse) Reset()         { *m = MsgUpdateHouse{} }
func (m *MsgUpdateHouse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateHouse) ProtoMessage()    {}
func (*MsgUpdateHouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{32}
}
func (m *MsgUpdateHouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateHouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateHouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateHouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateHouse.Merge(m, src)
}
func (m *MsgUpdateHouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateHouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateHouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateHouse proto.InternalMessageInfo

func (m *MsgUpdateHouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateHouse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateHouse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgUpdateHouse) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

func (m *MsgUpdateHouse) GetBlueprint() string {
	if m != nil {
		return m.Blueprint
	}
	return ""
}

type MsgUpdateHouseResponse struct {
}

func (m *MsgUpdateHouseResponse) Reset()         { *m = MsgUpdateHouseResponse{} }
func (m *MsgUpdateHouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateHouseResponse) ProtoMessage()    {}
func (*MsgUpdateHouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{33}
}
func (m *MsgUpdateHouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateHouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateHouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateHouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateHouseResponse.Merge(m, src)
}
func (m *MsgUpdateHouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateHouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateHouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateHouseResponse proto.InternalMessageInfo

type MsgDeleteHouse struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteHouse) Reset()         { *m = MsgDeleteHouse{} }
func (m *MsgDeleteHouse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteHouse) ProtoMessage()    {}
func (*MsgDeleteHouse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{34}
}
func (m *MsgDeleteHouse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteHouse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteHouse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteHouse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteHouse.Merge(m, src)
}
func (m *MsgDeleteHouse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteHouse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteHouse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteHouse proto.InternalMessageInfo

func (m *MsgDeleteHouse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteHouse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteHouseResponse struct {
}

func (m *MsgDeleteHouseResponse) Reset()         { *m = MsgDeleteHouseResponse{} }
func (m *MsgDeleteHouseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteHouseResponse) ProtoMessage()    {}
func (*MsgDeleteHouseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{35}
}
func (m *MsgDeleteHouseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteHouseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteHouseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteHouseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteHouseResponse.Merge(m, src)
}
func (m *MsgDeleteHouseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteHouseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteHouseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteHouseResponse proto.InternalMessageInfo

type MsgRequestCertification struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Property uint64 `protobuf:"varint,2,opt,name=property,proto3" json:"property,omitempty"`
	Fees     uint64 `protobuf:"varint,3,opt,name=fees,proto3" json:"fees,omitempty"`
	Surveyor string `protobuf:"bytes,4,opt,name=surveyor,proto3" json:"surveyor,omitempty"`
}

func (m *MsgRequestCertification) Reset()         { *m = MsgRequestCertification{} }
func (m *MsgRequestCertification) String() string { return proto.CompactTextString(m) }
func (*MsgRequestCertification) ProtoMessage()    {}
func (*MsgRequestCertification) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{36}
}
func (m *MsgRequestCertification) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestCertification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestCertification.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestCertification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestCertification.Merge(m, src)
}
func (m *MsgRequestCertification) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestCertification) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestCertification.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestCertification proto.InternalMessageInfo

func (m *MsgRequestCertification) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRequestCertification) GetProperty() uint64 {
	if m != nil {
		return m.Property
	}
	return 0
}

func (m *MsgRequestCertification) GetFees() uint64 {
	if m != nil {
		return m.Fees
	}
	return 0
}

func (m *MsgRequestCertification) GetSurveyor() string {
	if m != nil {
		return m.Surveyor
	}
	return ""
}

type MsgRequestCertificationResponse struct {
	Response string `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
}

func (m *MsgRequestCertificationResponse) Reset()         { *m = MsgRequestCertificationResponse{} }
func (m *MsgRequestCertificationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRequestCertificationResponse) ProtoMessage()    {}
func (*MsgRequestCertificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{37}
}
func (m *MsgRequestCertificationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRequestCertificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRequestCertificationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRequestCertificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRequestCertificationResponse.Merge(m, src)
}
func (m *MsgRequestCertificationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRequestCertificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRequestCertificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRequestCertificationResponse proto.InternalMessageInfo

func (m *MsgRequestCertificationResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type MsgEmitCertificate struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Certificate string `protobuf:"bytes,2,opt,name=certificate,proto3" json:"certificate,omitempty"`
}

func (m *MsgEmitCertificate) Reset()         { *m = MsgEmitCertificate{} }
func (m *MsgEmitCertificate) String() string { return proto.CompactTextString(m) }
func (*MsgEmitCertificate) ProtoMessage()    {}
func (*MsgEmitCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{38}
}
func (m *MsgEmitCertificate) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEmitCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEmitCertificate.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEmitCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEmitCertificate.Merge(m, src)
}
func (m *MsgEmitCertificate) XXX_Size() int {
	return m.Size()
}
func (m *MsgEmitCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEmitCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEmitCertificate proto.InternalMessageInfo

func (m *MsgEmitCertificate) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgEmitCertificate) GetCertificate() string {
	if m != nil {
		return m.Certificate
	}
	return ""
}

type MsgEmitCertificateResponse struct {
}

func (m *MsgEmitCertificateResponse) Reset()         { *m = MsgEmitCertificateResponse{} }
func (m *MsgEmitCertificateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEmitCertificateResponse) ProtoMessage()    {}
func (*MsgEmitCertificateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ff2a939c0fe257fe, []int{39}
}
func (m *MsgEmitCertificateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEmitCertificateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEmitCertificateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEmitCertificateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEmitCertificateResponse.Merge(m, src)
}
func (m *MsgEmitCertificateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEmitCertificateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEmitCertificateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEmitCertificateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgCreateProperty)(nil), "rafaelsousa.realestate.realestate.MsgCreateProperty")
	proto.RegisterType((*MsgCreatePropertyResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreatePropertyResponse")
	proto.RegisterType((*MsgUpdateProperty)(nil), "rafaelsousa.realestate.realestate.MsgUpdateProperty")
	proto.RegisterType((*MsgUpdatePropertyResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdatePropertyResponse")
	proto.RegisterType((*MsgDeleteProperty)(nil), "rafaelsousa.realestate.realestate.MsgDeleteProperty")
	proto.RegisterType((*MsgDeletePropertyResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeletePropertyResponse")
	proto.RegisterType((*MsgCreateCertificate)(nil), "rafaelsousa.realestate.realestate.MsgCreateCertificate")
	proto.RegisterType((*MsgCreateCertificateResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreateCertificateResponse")
	proto.RegisterType((*MsgUpdateCertificate)(nil), "rafaelsousa.realestate.realestate.MsgUpdateCertificate")
	proto.RegisterType((*MsgUpdateCertificateResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateCertificateResponse")
	proto.RegisterType((*MsgDeleteCertificate)(nil), "rafaelsousa.realestate.realestate.MsgDeleteCertificate")
	proto.RegisterType((*MsgDeleteCertificateResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteCertificateResponse")
	proto.RegisterType((*MsgCreateLocking)(nil), "rafaelsousa.realestate.realestate.MsgCreateLocking")
	proto.RegisterType((*MsgCreateLockingResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreateLockingResponse")
	proto.RegisterType((*MsgUpdateLocking)(nil), "rafaelsousa.realestate.realestate.MsgUpdateLocking")
	proto.RegisterType((*MsgUpdateLockingResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateLockingResponse")
	proto.RegisterType((*MsgDeleteLocking)(nil), "rafaelsousa.realestate.realestate.MsgDeleteLocking")
	proto.RegisterType((*MsgDeleteLockingResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteLockingResponse")
	proto.RegisterType((*MsgCreateInspection)(nil), "rafaelsousa.realestate.realestate.MsgCreateInspection")
	proto.RegisterType((*MsgCreateInspectionResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreateInspectionResponse")
	proto.RegisterType((*MsgUpdateInspection)(nil), "rafaelsousa.realestate.realestate.MsgUpdateInspection")
	proto.RegisterType((*MsgUpdateInspectionResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateInspectionResponse")
	proto.RegisterType((*MsgDeleteInspection)(nil), "rafaelsousa.realestate.realestate.MsgDeleteInspection")
	proto.RegisterType((*MsgDeleteInspectionResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteInspectionResponse")
	proto.RegisterType((*MsgCreateTransference)(nil), "rafaelsousa.realestate.realestate.MsgCreateTransference")
	proto.RegisterType((*MsgCreateTransferenceResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreateTransferenceResponse")
	proto.RegisterType((*MsgUpdateTransference)(nil), "rafaelsousa.realestate.realestate.MsgUpdateTransference")
	proto.RegisterType((*MsgUpdateTransferenceResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateTransferenceResponse")
	proto.RegisterType((*MsgDeleteTransference)(nil), "rafaelsousa.realestate.realestate.MsgDeleteTransference")
	proto.RegisterType((*MsgDeleteTransferenceResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteTransferenceResponse")
	proto.RegisterType((*MsgCreateHouse)(nil), "rafaelsousa.realestate.realestate.MsgCreateHouse")
	proto.RegisterType((*MsgCreateHouseResponse)(nil), "rafaelsousa.realestate.realestate.MsgCreateHouseResponse")
	proto.RegisterType((*MsgUpdateHouse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateHouse")
	proto.RegisterType((*MsgUpdateHouseResponse)(nil), "rafaelsousa.realestate.realestate.MsgUpdateHouseResponse")
	proto.RegisterType((*MsgDeleteHouse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteHouse")
	proto.RegisterType((*MsgDeleteHouseResponse)(nil), "rafaelsousa.realestate.realestate.MsgDeleteHouseResponse")
	proto.RegisterType((*MsgRequestCertification)(nil), "rafaelsousa.realestate.realestate.MsgRequestCertification")
	proto.RegisterType((*MsgRequestCertificationResponse)(nil), "rafaelsousa.realestate.realestate.MsgRequestCertificationResponse")
	proto.RegisterType((*MsgEmitCertificate)(nil), "rafaelsousa.realestate.realestate.MsgEmitCertificate")
	proto.RegisterType((*MsgEmitCertificateResponse)(nil), "rafaelsousa.realestate.realestate.MsgEmitCertificateResponse")
}

func init() { proto.RegisterFile("realestate/tx.proto", fileDescriptor_ff2a939c0fe257fe) }

var fileDescriptor_ff2a939c0fe257fe = []byte{
	// 1384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x59, 0x4d, 0x6f, 0x1c, 0x45,
	0x13, 0xce, 0x78, 0x3f, 0x6c, 0x57, 0x14, 0xc7, 0xee, 0x38, 0x7e, 0x37, 0x63, 0x7b, 0xe3, 0x77,
	0xc4, 0xc1, 0x42, 0xb0, 0x96, 0x71, 0xb0, 0x4d, 0x88, 0x49, 0xc8, 0x07, 0x02, 0x09, 0xa3, 0x68,
	0x95, 0x5c, 0xb8, 0x8d, 0x77, 0xdb, 0x9b, 0x11, 0xeb, 0x99, 0x61, 0x7a, 0x36, 0xd8, 0x70, 0x00,
	0x24, 0x24, 0x24, 0x24, 0x24, 0x9f, 0xb8, 0xf0, 0x13, 0xf2, 0x13, 0x90, 0x38, 0x73, 0x42, 0x3e,
	0x72, 0x23, 0xb2, 0x7f, 0x00, 0xfc, 0x04, 0xd4, 0x1f, 0xd3, 0xd3, 0xf3, 0xe9, 0xe9, 0xb9, 0x4d,
	0x75, 0x6d, 0x55, 0x3f, 0xcf, 0x53, 0x35, 0x3d, 0xd5, 0x5a, 0xb8, 0x11, 0x60, 0x7b, 0x8c, 0x49,
	0x68, 0x87, 0x78, 0x23, 0x3c, 0xee, 0xf9, 0x81, 0x17, 0x7a, 0xe8, 0xff, 0x81, 0x7d, 0x68, 0xe3,
	0x31, 0xf1, 0x26, 0xc4, 0xee, 0xc5, 0x3f, 0x50, 0x1e, 0xcd, 0x5b, 0x4a, 0x9c, 0x1f, 0x78, 0x3e,
	0x0e, 0xc2, 0x13, 0x1e, 0x6d, 0xae, 0x28, 0xae, 0x01, 0x0e, 0x42, 0xe7, 0xd0, 0x19, 0xd0, 0x68,
	0xee, 0xed, 0x28, 0xde, 0xb1, 0x37, 0xf8, 0xc2, 0x71, 0x47, 0xc2, 0xb3, 0xac, 0x78, 0x1c, 0x97,
	0xf8, 0x78, 0x10, 0x3a, 0x9e, 0x2b, 0x9c, 0xab, 0x2a, 0xce, 0xc0, 0x76, 0xc9, 0x21, 0x0e, 0xb0,
	0x3b, 0x88, 0xb2, 0x2e, 0x29, 0xee, 0x17, 0xde, 0x84, 0x88, 0x75, 0xeb, 0x6f, 0x03, 0x16, 0xf6,
	0xc9, 0xe8, 0x51, 0x80, 0xed, 0x10, 0x3f, 0x15, 0x38, 0x51, 0x07, 0xa6, 0x07, 0x74, 0xc5, 0x0b,
	0x3a, 0xc6, 0x9a, 0xb1, 0x3e, 0xdb, 0x8f, 0x4c, 0xea, 0xb1, 0x87, 0xc3, 0x00, 0x13, 0xd2, 0x99,
	0xe2, 0x1e, 0x61, 0x22, 0x04, 0xcd, 0x81, 0x13, 0x9e, 0x74, 0x1a, 0x6c, 0x99, 0x3d, 0xa3, 0x45,
	0x68, 0xb1, 0x2d, 0x3b, 0x4d, 0xb6, 0xc8, 0x0d, 0x96, 0xdd, 0x9b, 0xb8, 0x61, 0x70, 0xd2, 0x69,
	0x89, 0xec, 0xdc, 0xa4, 0x9e, 0xaf, 0x1d, 0x7f, 0xe0, 0x0d, 0x71, 0xa7, 0xcd, 0x3d, 0xc2, 0x44,
	0x26, 0xcc, 0x8c, 0xed, 0xd0, 0x09, 0x27, 0x43, 0xdc, 0x99, 0x66, 0x2e, 0x69, 0xa3, 0x15, 0x98,
	0x1d, 0x7b, 0xee, 0x88, 0x3b, 0x67, 0x98, 0x33, 0x5e, 0xb0, 0x9e, 0xc0, 0xad, 0x0c, 0xc1, 0x3e,
	0x26, 0xbe, 0xe7, 0x12, 0x8c, 0xe6, 0x60, 0xca, 0x19, 0x32, 0x8e, 0xcd, 0xfe, 0x94, 0x33, 0xa4,
	0x00, 0x8e, 0x30, 0x21, 0xf6, 0x08, 0x47, 0xf4, 0x84, 0x69, 0xfd, 0xc3, 0x85, 0x7a, 0xee, 0x0f,
	0xab, 0x09, 0xc5, 0x33, 0x4f, 0xa9, 0x99, 0x23, 0xe1, 0x1a, 0xf9, 0xc2, 0x35, 0xf3, 0x84, 0x6b,
	0x15, 0x08, 0xd7, 0x2e, 0x14, 0x6e, 0xba, 0x58, 0xb8, 0x99, 0x32, 0xe1, 0x66, 0xd3, 0xc2, 0x2d,
	0x33, 0xe1, 0x92, 0x84, 0x23, 0xe1, 0xac, 0x3d, 0xa6, 0xc6, 0x63, 0x3c, 0xc6, 0x75, 0xd4, 0x10,
	0xb9, 0x93, 0xe1, 0x32, 0xf7, 0x6b, 0x03, 0x16, 0x65, 0xc9, 0x1e, 0xc5, 0x2f, 0x48, 0x49, 0x7e,
	0x13, 0x66, 0xa2, 0x97, 0x4c, 0xec, 0x22, 0x6d, 0xea, 0x23, 0x93, 0xe0, 0x25, 0x3e, 0xf1, 0x02,
	0x21, 0xbd, 0xb4, 0xd1, 0x9b, 0x30, 0x2f, 0xde, 0x40, 0x9b, 0xbe, 0x4b, 0x8f, 0xe3, 0x5e, 0xcd,
	0xac, 0xa3, 0x75, 0xb8, 0xae, 0xbc, 0xad, 0xcf, 0xf0, 0x71, 0x28, 0xaa, 0x93, 0x5e, 0x46, 0x6b,
	0x70, 0x35, 0xda, 0x7d, 0xdf, 0xf6, 0x45, 0xad, 0xd4, 0x25, 0xab, 0x07, 0x2b, 0x79, 0x0c, 0x8b,
	0xfa, 0xd2, 0xfa, 0x97, 0x4b, 0xc2, 0x8b, 0x51, 0x4d, 0x92, 0x74, 0x03, 0xaa, 0x12, 0x35, 0x4a,
	0x24, 0x6a, 0x56, 0x90, 0xa8, 0x55, 0x5d, 0xa2, 0x76, 0x25, 0x89, 0xa6, 0xb3, 0x12, 0x75, 0x99,
	0x44, 0x19, 0xc6, 0xb2, 0x4b, 0x1e, 0x30, 0x45, 0x78, 0x0b, 0xd5, 0x52, 0x44, 0xec, 0x90, 0xc9,
	0x20, 0x77, 0xf8, 0xdd, 0x80, 0x79, 0x59, 0xa5, 0x4f, 0xf9, 0x51, 0x5c, 0x92, 0x7e, 0x11, 0x5a,
	0xde, 0x57, 0x2e, 0x0e, 0xc4, 0xc9, 0xc1, 0x0d, 0x4a, 0x74, 0x18, 0x87, 0x8b, 0x06, 0x54, 0x97,
	0xd0, 0x1b, 0x70, 0x8d, 0x9a, 0xcf, 0x5d, 0x71, 0xda, 0x8b, 0x0a, 0x24, 0x17, 0xd1, 0x12, 0xb4,
	0x6d, 0x42, 0x70, 0x48, 0x98, 0xf8, 0xcd, 0xbe, 0xb0, 0x12, 0x65, 0x6d, 0x27, 0xcb, 0x6a, 0x7d,
	0x04, 0x9d, 0x34, 0xfe, 0xc2, 0x93, 0xcf, 0x84, 0x99, 0x40, 0xf8, 0x04, 0x01, 0x69, 0x5b, 0x7f,
	0x72, 0x21, 0x78, 0x2d, 0x2e, 0x17, 0x22, 0xdd, 0x79, 0x52, 0x98, 0x46, 0x89, 0x30, 0xcd, 0x0a,
	0xc2, 0xb4, 0xca, 0x85, 0x69, 0x17, 0x0a, 0x33, 0x9d, 0x12, 0xc6, 0x64, 0xc2, 0x24, 0xf8, 0xc8,
	0xaa, 0xdf, 0x63, 0x5c, 0x79, 0x57, 0x68, 0x73, 0x15, 0x99, 0x13, 0xd1, 0x32, 0xf3, 0x2b, 0x03,
	0x6e, 0xc8, 0x7a, 0x7c, 0x22, 0x3f, 0xe0, 0x25, 0xd9, 0x57, 0x60, 0x56, 0x7c, 0xe8, 0xbd, 0xa8,
	0xad, 0xe2, 0x85, 0xd2, 0x37, 0x1a, 0x41, 0xf3, 0x10, 0x63, 0x12, 0x7d, 0x54, 0xe8, 0x33, 0x7a,
	0x0b, 0x16, 0xe2, 0xb1, 0xa1, 0x8f, 0xc9, 0x64, 0x2c, 0xba, 0x69, 0xb6, 0x9f, 0x75, 0x58, 0x6f,
	0xc3, 0x72, 0x0e, 0xd8, 0xc2, 0x13, 0xea, 0x37, 0x4e, 0x8e, 0x6b, 0x5a, 0x89, 0x5c, 0xba, 0x4d,
	0x12, 0x64, 0x1b, 0x65, 0x64, 0x9b, 0x05, 0x64, 0x5b, 0x97, 0x91, 0x6d, 0x17, 0x91, 0x5d, 0x65,
	0x64, 0xd3, 0xe0, 0x65, 0xe5, 0xee, 0x33, 0x6e, 0xbc, 0xaa, 0x75, 0xb8, 0x89, 0xfc, 0xe9, 0x04,
	0x32, 0xff, 0xaf, 0x06, 0xdc, 0x94, 0x62, 0x3f, 0x53, 0xa6, 0xb7, 0x92, 0x2d, 0x28, 0xe9, 0xc0,
	0x3b, 0x12, 0x6d, 0xc1, 0x9e, 0xe9, 0xb6, 0xa1, 0x27, 0xb4, 0x9b, 0x0a, 0x3d, 0xfa, 0x9b, 0x61,
	0xfc, 0x49, 0x63, 0xcf, 0xf4, 0x6d, 0x7c, 0x69, 0x8f, 0x27, 0x72, 0xb4, 0x60, 0x46, 0xe9, 0x31,
	0xb2, 0x01, 0xab, 0xb9, 0xe0, 0x0a, 0x7b, 0xe1, 0x15, 0xa7, 0xc3, 0xe5, 0xac, 0x48, 0x27, 0xdd,
	0x0d, 0x11, 0xbd, 0x46, 0x86, 0x5e, 0x33, 0x43, 0xaf, 0x95, 0x47, 0xaf, 0x5d, 0x44, 0x2f, 0x7d,
	0x18, 0xdc, 0x66, 0xf4, 0xb2, 0x60, 0x65, 0x75, 0x3e, 0x64, 0x6c, 0x78, 0xf1, 0xea, 0xb1, 0x11,
	0x7b, 0x64, 0x53, 0xc8, 0x3d, 0xbe, 0x33, 0x60, 0x4e, 0x8a, 0xfc, 0x31, 0x1d, 0xd0, 0x4b, 0xb2,
	0xd3, 0xa3, 0x13, 0x93, 0x41, 0xe0, 0xf8, 0xb4, 0x8b, 0x44, 0x07, 0xa8, 0x4b, 0x54, 0x05, 0xe7,
	0x88, 0x4e, 0xb1, 0xe2, 0xc8, 0x65, 0x06, 0x7d, 0xc3, 0x0e, 0xc6, 0x13, 0xec, 0x07, 0x8e, 0x1b,
	0x0a, 0x19, 0xe3, 0x05, 0x6b, 0x1d, 0x96, 0x92, 0x08, 0x0a, 0xeb, 0x7b, 0xca, 0xc1, 0x72, 0xc9,
	0x2e, 0x03, 0x9b, 0x2e, 0x6c, 0x0a, 0x7c, 0xa3, 0x04, 0x7c, 0xb3, 0x10, 0x7c, 0x2b, 0x0d, 0xbe,
	0xc3, 0xc0, 0x2b, 0x88, 0xa4, 0xb2, 0x77, 0x19, 0x56, 0x2e, 0xbd, 0x26, 0x56, 0x91, 0x55, 0x89,
	0x95, 0x59, 0xbf, 0x85, 0xff, 0xed, 0x93, 0x51, 0x1f, 0x7f, 0x39, 0xc1, 0x24, 0x8c, 0x87, 0x87,
	0xf2, 0x53, 0xa1, 0x6c, 0x4a, 0x8d, 0xce, 0x30, 0x7e, 0x90, 0xf3, 0x33, 0xac, 0x64, 0x2c, 0xb3,
	0xf6, 0xe0, 0x76, 0x01, 0x00, 0x59, 0x36, 0xf5, 0x93, 0x6e, 0xa4, 0x3e, 0xe9, 0x4f, 0x01, 0xed,
	0x93, 0xd1, 0x93, 0x23, 0x27, 0xac, 0x36, 0x3b, 0xad, 0xc1, 0x55, 0x65, 0x84, 0x8b, 0x5a, 0x4e,
	0x59, 0xb2, 0x56, 0xc0, 0xcc, 0x66, 0x8c, 0xb0, 0xbc, 0x73, 0x76, 0x13, 0x1a, 0xfb, 0x64, 0x84,
	0x7e, 0x30, 0x60, 0x2e, 0x75, 0xd9, 0xbc, 0xd3, 0xbb, 0xf4, 0x36, 0xdd, 0xcb, 0xdc, 0xe0, 0xcc,
	0x7b, 0x75, 0xa2, 0xa4, 0x34, 0x14, 0x46, 0xea, 0x2a, 0x57, 0x11, 0x46, 0x32, 0xaa, 0x2a, 0x8c,
	0xfc, 0x5b, 0x14, 0x83, 0x91, 0xba, 0x43, 0x55, 0x84, 0x91, 0x8c, 0xaa, 0x0a, 0x23, 0xff, 0xc2,
	0x85, 0x7e, 0x36, 0x60, 0x21, 0x7b, 0xdb, 0xda, 0xd1, 0x51, 0x58, 0x09, 0x34, 0xef, 0xd7, 0x0c,
	0x4c, 0xe0, 0xc9, 0x5e, 0x75, 0x76, 0x74, 0xa4, 0xae, 0x81, 0xa7, 0xf0, 0xaa, 0xc1, 0xf0, 0x64,
	0x2f, 0x1a, 0x3b, 0x3a, 0x9a, 0xd7, 0xc0, 0x53, 0x78, 0x31, 0x41, 0xdf, 0x1b, 0x70, 0x2d, 0x79,
	0x2b, 0xd9, 0xd2, 0x91, 0x5c, 0x04, 0x99, 0xef, 0xd7, 0x08, 0x4a, 0x60, 0x48, 0x5e, 0x08, 0xb6,
	0x74, 0x64, 0xd6, 0xc4, 0x90, 0x3b, 0xaa, 0x33, 0x0c, 0xc9, 0x41, 0x7d, 0x4b, 0x47, 0x5a, 0x4d,
	0x0c, 0xb9, 0x43, 0x3d, 0xfa, 0xc9, 0x80, 0xf9, 0xcc, 0x44, 0xbf, 0xad, 0xa3, 0x6c, 0x1c, 0x67,
	0x7e, 0x50, 0x2f, 0x2e, 0x01, 0x26, 0x33, 0x81, 0x6f, 0xeb, 0x48, 0xac, 0x0f, 0xa6, 0x68, 0x68,
	0x66, 0x60, 0x32, 0x23, 0xf3, 0xb6, 0x8e, 0xd6, 0xfa, 0x60, 0x8a, 0x26, 0x6c, 0x74, 0x6a, 0x00,
	0xca, 0x19, 0xaf, 0x77, 0x75, 0x04, 0x57, 0x23, 0xcd, 0x07, 0x75, 0x23, 0x13, 0x90, 0x72, 0x46,
	0xe4, 0x5d, 0x1d, 0xd9, 0xeb, 0x40, 0x2a, 0x9e, 0x74, 0x19, 0xa4, 0x9c, 0x39, 0x77, 0x57, 0x47,
	0xfc, 0x3a, 0x90, 0x8a, 0x07, 0x63, 0xf4, 0x0d, 0x5c, 0x55, 0x87, 0xe2, 0x4d, 0x1d, 0xd9, 0x59,
	0x88, 0xf9, 0x9e, 0x76, 0x88, 0xba, 0xb9, 0x3a, 0xe4, 0x6e, 0xea, 0x08, 0xac, 0xb5, 0x79, 0xce,
	0xe0, 0x4a, 0x37, 0x57, 0xa7, 0xd6, 0x4d, 0x1d, 0x29, 0xb5, 0x36, 0xcf, 0x99, 0x6f, 0xd1, 0x2f,
	0x06, 0x2c, 0xe6, 0x4e, 0xb7, 0x77, 0xab, 0xe5, 0xcc, 0x8b, 0x35, 0x1f, 0xd6, 0x8f, 0x95, 0xc0,
	0x7e, 0x34, 0xe0, 0x7a, 0x7a, 0x6c, 0x7d, 0xb7, 0x5a, 0xde, 0x54, 0x98, 0xb9, 0x57, 0x2b, 0x2c,
	0x42, 0xf2, 0xf0, 0xb3, 0x3f, 0xce, 0xbb, 0xc6, 0xd9, 0x79, 0xd7, 0x78, 0x7d, 0xde, 0x35, 0x4e,
	0x2f, 0xba, 0x57, 0xce, 0x2e, 0xba, 0x57, 0xfe, 0xba, 0xe8, 0x5e, 0xf9, 0xfc, 0xce, 0xc8, 0x09,
	0x5f, 0x4c, 0x0e, 0x7a, 0x03, 0xef, 0x68, 0x43, 0xd9, 0x62, 0x43, 0xf9, 0x0f, 0xe6, 0x58, 0x35,
	0xc2, 0x13, 0x1f, 0x93, 0x83, 0x36, 0xfb, 0x47, 0x66, 0xeb, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xb2, 0x0b, 0x1d, 0xeb, 0x72, 0x1a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	CreateProperty(ctx context.Context, in *MsgCreateProperty, opts ...grpc.CallOption) (*MsgCreatePropertyResponse, error)
	UpdateProperty(ctx context.Context, in *MsgUpdateProperty, opts ...grpc.CallOption) (*MsgUpdatePropertyResponse, error)
	DeleteProperty(ctx context.Context, in *MsgDeleteProperty, opts ...grpc.CallOption) (*MsgDeletePropertyResponse, error)
	CreateCertificate(ctx context.Context, in *MsgCreateCertificate, opts ...grpc.CallOption) (*MsgCreateCertificateResponse, error)
	UpdateCertificate(ctx context.Context, in *MsgUpdateCertificate, opts ...grpc.CallOption) (*MsgUpdateCertificateResponse, error)
	DeleteCertificate(ctx context.Context, in *MsgDeleteCertificate, opts ...grpc.CallOption) (*MsgDeleteCertificateResponse, error)
	CreateLocking(ctx context.Context, in *MsgCreateLocking, opts ...grpc.CallOption) (*MsgCreateLockingResponse, error)
	UpdateLocking(ctx context.Context, in *MsgUpdateLocking, opts ...grpc.CallOption) (*MsgUpdateLockingResponse, error)
	DeleteLocking(ctx context.Context, in *MsgDeleteLocking, opts ...grpc.CallOption) (*MsgDeleteLockingResponse, error)
	CreateInspection(ctx context.Context, in *MsgCreateInspection, opts ...grpc.CallOption) (*MsgCreateInspectionResponse, error)
	UpdateInspection(ctx context.Context, in *MsgUpdateInspection, opts ...grpc.CallOption) (*MsgUpdateInspectionResponse, error)
	DeleteInspection(ctx context.Context, in *MsgDeleteInspection, opts ...grpc.CallOption) (*MsgDeleteInspectionResponse, error)
	CreateTransference(ctx context.Context, in *MsgCreateTransference, opts ...grpc.CallOption) (*MsgCreateTransferenceResponse, error)
	UpdateTransference(ctx context.Context, in *MsgUpdateTransference, opts ...grpc.CallOption) (*MsgUpdateTransferenceResponse, error)
	DeleteTransference(ctx context.Context, in *MsgDeleteTransference, opts ...grpc.CallOption) (*MsgDeleteTransferenceResponse, error)
	CreateHouse(ctx context.Context, in *MsgCreateHouse, opts ...grpc.CallOption) (*MsgCreateHouseResponse, error)
	UpdateHouse(ctx context.Context, in *MsgUpdateHouse, opts ...grpc.CallOption) (*MsgUpdateHouseResponse, error)
	DeleteHouse(ctx context.Context, in *MsgDeleteHouse, opts ...grpc.CallOption) (*MsgDeleteHouseResponse, error)
	RequestCertification(ctx context.Context, in *MsgRequestCertification, opts ...grpc.CallOption) (*MsgRequestCertificationResponse, error)
	EmitCertificate(ctx context.Context, in *MsgEmitCertificate, opts ...grpc.CallOption) (*MsgEmitCertificateResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateProperty(ctx context.Context, in *MsgCreateProperty, opts ...grpc.CallOption) (*MsgCreatePropertyResponse, error) {
	out := new(MsgCreatePropertyResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProperty(ctx context.Context, in *MsgUpdateProperty, opts ...grpc.CallOption) (*MsgUpdatePropertyResponse, error) {
	out := new(MsgUpdatePropertyResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteProperty(ctx context.Context, in *MsgDeleteProperty, opts ...grpc.CallOption) (*MsgDeletePropertyResponse, error) {
	out := new(MsgDeletePropertyResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateCertificate(ctx context.Context, in *MsgCreateCertificate, opts ...grpc.CallOption) (*MsgCreateCertificateResponse, error) {
	out := new(MsgCreateCertificateResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateCertificate(ctx context.Context, in *MsgUpdateCertificate, opts ...grpc.CallOption) (*MsgUpdateCertificateResponse, error) {
	out := new(MsgUpdateCertificateResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteCertificate(ctx context.Context, in *MsgDeleteCertificate, opts ...grpc.CallOption) (*MsgDeleteCertificateResponse, error) {
	out := new(MsgDeleteCertificateResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateLocking(ctx context.Context, in *MsgCreateLocking, opts ...grpc.CallOption) (*MsgCreateLockingResponse, error) {
	out := new(MsgCreateLockingResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateLocking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLocking(ctx context.Context, in *MsgUpdateLocking, opts ...grpc.CallOption) (*MsgUpdateLockingResponse, error) {
	out := new(MsgUpdateLockingResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateLocking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLocking(ctx context.Context, in *MsgDeleteLocking, opts ...grpc.CallOption) (*MsgDeleteLockingResponse, error) {
	out := new(MsgDeleteLockingResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteLocking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateInspection(ctx context.Context, in *MsgCreateInspection, opts ...grpc.CallOption) (*MsgCreateInspectionResponse, error) {
	out := new(MsgCreateInspectionResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateInspection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateInspection(ctx context.Context, in *MsgUpdateInspection, opts ...grpc.CallOption) (*MsgUpdateInspectionResponse, error) {
	out := new(MsgUpdateInspectionResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateInspection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteInspection(ctx context.Context, in *MsgDeleteInspection, opts ...grpc.CallOption) (*MsgDeleteInspectionResponse, error) {
	out := new(MsgDeleteInspectionResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteInspection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTransference(ctx context.Context, in *MsgCreateTransference, opts ...grpc.CallOption) (*MsgCreateTransferenceResponse, error) {
	out := new(MsgCreateTransferenceResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateTransference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTransference(ctx context.Context, in *MsgUpdateTransference, opts ...grpc.CallOption) (*MsgUpdateTransferenceResponse, error) {
	out := new(MsgUpdateTransferenceResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateTransference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTransference(ctx context.Context, in *MsgDeleteTransference, opts ...grpc.CallOption) (*MsgDeleteTransferenceResponse, error) {
	out := new(MsgDeleteTransferenceResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteTransference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateHouse(ctx context.Context, in *MsgCreateHouse, opts ...grpc.CallOption) (*MsgCreateHouseResponse, error) {
	out := new(MsgCreateHouseResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/CreateHouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateHouse(ctx context.Context, in *MsgUpdateHouse, opts ...grpc.CallOption) (*MsgUpdateHouseResponse, error) {
	out := new(MsgUpdateHouseResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/UpdateHouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteHouse(ctx context.Context, in *MsgDeleteHouse, opts ...grpc.CallOption) (*MsgDeleteHouseResponse, error) {
	out := new(MsgDeleteHouseResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/DeleteHouse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RequestCertification(ctx context.Context, in *MsgRequestCertification, opts ...grpc.CallOption) (*MsgRequestCertificationResponse, error) {
	out := new(MsgRequestCertificationResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/RequestCertification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EmitCertificate(ctx context.Context, in *MsgEmitCertificate, opts ...grpc.CallOption) (*MsgEmitCertificateResponse, error) {
	out := new(MsgEmitCertificateResponse)
	err := c.cc.Invoke(ctx, "/rafaelsousa.realestate.realestate.Msg/EmitCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	CreateProperty(context.Context, *MsgCreateProperty) (*MsgCreatePropertyResponse, error)
	UpdateProperty(context.Context, *MsgUpdateProperty) (*MsgUpdatePropertyResponse, error)
	DeleteProperty(context.Context, *MsgDeleteProperty) (*MsgDeletePropertyResponse, error)
	CreateCertificate(context.Context, *MsgCreateCertificate) (*MsgCreateCertificateResponse, error)
	UpdateCertificate(context.Context, *MsgUpdateCertificate) (*MsgUpdateCertificateResponse, error)
	DeleteCertificate(context.Context, *MsgDeleteCertificate) (*MsgDeleteCertificateResponse, error)
	CreateLocking(context.Context, *MsgCreateLocking) (*MsgCreateLockingResponse, error)
	UpdateLocking(context.Context, *MsgUpdateLocking) (*MsgUpdateLockingResponse, error)
	DeleteLocking(context.Context, *MsgDeleteLocking) (*MsgDeleteLockingResponse, error)
	CreateInspection(context.Context, *MsgCreateInspection) (*MsgCreateInspectionResponse, error)
	UpdateInspection(context.Context, *MsgUpdateInspection) (*MsgUpdateInspectionResponse, error)
	DeleteInspection(context.Context, *MsgDeleteInspection) (*MsgDeleteInspectionResponse, error)
	CreateTransference(context.Context, *MsgCreateTransference) (*MsgCreateTransferenceResponse, error)
	UpdateTransference(context.Context, *MsgUpdateTransference) (*MsgUpdateTransferenceResponse, error)
	DeleteTransference(context.Context, *MsgDeleteTransference) (*MsgDeleteTransferenceResponse, error)
	CreateHouse(context.Context, *MsgCreateHouse) (*MsgCreateHouseResponse, error)
	UpdateHouse(context.Context, *MsgUpdateHouse) (*MsgUpdateHouseResponse, error)
	DeleteHouse(context.Context, *MsgDeleteHouse) (*MsgDeleteHouseResponse, error)
	RequestCertification(context.Context, *MsgRequestCertification) (*MsgRequestCertificationResponse, error)
	EmitCertificate(context.Context, *MsgEmitCertificate) (*MsgEmitCertificateResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateProperty(ctx context.Context, req *MsgCreateProperty) (*MsgCreatePropertyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProperty not implemented")
}
func (*UnimplementedMsgServer) UpdateProperty(ctx context.Context, req *MsgUpdateProperty) (*MsgUpdatePropertyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProperty not implemented")
}
func (*UnimplementedMsgServer) DeleteProperty(ctx context.Context, req *MsgDeleteProperty) (*MsgDeletePropertyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProperty not implemented")
}
func (*UnimplementedMsgServer) CreateCertificate(ctx context.Context, req *MsgCreateCertificate) (*MsgCreateCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCertificate not implemented")
}
func (*UnimplementedMsgServer) UpdateCertificate(ctx context.Context, req *MsgUpdateCertificate) (*MsgUpdateCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCertificate not implemented")
}
func (*UnimplementedMsgServer) DeleteCertificate(ctx context.Context, req *MsgDeleteCertificate) (*MsgDeleteCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCertificate not implemented")
}
func (*UnimplementedMsgServer) CreateLocking(ctx context.Context, req *MsgCreateLocking) (*MsgCreateLockingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateLocking not implemented")
}
func (*UnimplementedMsgServer) UpdateLocking(ctx context.Context, req *MsgUpdateLocking) (*MsgUpdateLockingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLocking not implemented")
}
func (*UnimplementedMsgServer) DeleteLocking(ctx context.Context, req *MsgDeleteLocking) (*MsgDeleteLockingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLocking not implemented")
}
func (*UnimplementedMsgServer) CreateInspection(ctx context.Context, req *MsgCreateInspection) (*MsgCreateInspectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateInspection not implemented")
}
func (*UnimplementedMsgServer) UpdateInspection(ctx context.Context, req *MsgUpdateInspection) (*MsgUpdateInspectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateInspection not implemented")
}
func (*UnimplementedMsgServer) DeleteInspection(ctx context.Context, req *MsgDeleteInspection) (*MsgDeleteInspectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteInspection not implemented")
}
func (*UnimplementedMsgServer) CreateTransference(ctx context.Context, req *MsgCreateTransference) (*MsgCreateTransferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTransference not implemented")
}
func (*UnimplementedMsgServer) UpdateTransference(ctx context.Context, req *MsgUpdateTransference) (*MsgUpdateTransferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTransference not implemented")
}
func (*UnimplementedMsgServer) DeleteTransference(ctx context.Context, req *MsgDeleteTransference) (*MsgDeleteTransferenceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTransference not implemented")
}
func (*UnimplementedMsgServer) CreateHouse(ctx context.Context, req *MsgCreateHouse) (*MsgCreateHouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHouse not implemented")
}
func (*UnimplementedMsgServer) UpdateHouse(ctx context.Context, req *MsgUpdateHouse) (*MsgUpdateHouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHouse not implemented")
}
func (*UnimplementedMsgServer) DeleteHouse(ctx context.Context, req *MsgDeleteHouse) (*MsgDeleteHouseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHouse not implemented")
}
func (*UnimplementedMsgServer) RequestCertification(ctx context.Context, req *MsgRequestCertification) (*MsgRequestCertificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestCertification not implemented")
}
func (*UnimplementedMsgServer) EmitCertificate(ctx context.Context, req *MsgEmitCertificate) (*MsgEmitCertificateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EmitCertificate not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateProperty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateProperty(ctx, req.(*MsgCreateProperty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProperty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProperty(ctx, req.(*MsgUpdateProperty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteProperty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteProperty(ctx, req.(*MsgDeleteProperty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateCertificate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateCertificate(ctx, req.(*MsgCreateCertificate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateCertificate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateCertificate(ctx, req.(*MsgUpdateCertificate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteCertificate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteCertificate(ctx, req.(*MsgDeleteCertificate))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateLocking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateLocking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateLocking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateLocking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateLocking(ctx, req.(*MsgCreateLocking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLocking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLocking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLocking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateLocking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLocking(ctx, req.(*MsgUpdateLocking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLocking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLocking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLocking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteLocking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLocking(ctx, req.(*MsgDeleteLocking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateInspection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateInspection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateInspection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateInspection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateInspection(ctx, req.(*MsgCreateInspection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateInspection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateInspection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateInspection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateInspection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateInspection(ctx, req.(*MsgUpdateInspection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteInspection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteInspection)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteInspection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteInspection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteInspection(ctx, req.(*MsgDeleteInspection))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTransference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTransference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTransference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateTransference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTransference(ctx, req.(*MsgCreateTransference))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTransference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTransference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTransference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateTransference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTransference(ctx, req.(*MsgUpdateTransference))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTransference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTransference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTransference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteTransference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTransference(ctx, req.(*MsgDeleteTransference))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateHouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateHouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateHouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/CreateHouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateHouse(ctx, req.(*MsgCreateHouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateHouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateHouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateHouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/UpdateHouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateHouse(ctx, req.(*MsgUpdateHouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteHouse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteHouse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteHouse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/DeleteHouse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteHouse(ctx, req.(*MsgDeleteHouse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RequestCertification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRequestCertification)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RequestCertification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/RequestCertification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RequestCertification(ctx, req.(*MsgRequestCertification))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EmitCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEmitCertificate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EmitCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rafaelsousa.realestate.realestate.Msg/EmitCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EmitCertificate(ctx, req.(*MsgEmitCertificate))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rafaelsousa.realestate.realestate.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateProperty",
			Handler:    _Msg_CreateProperty_Handler,
		},
		{
			MethodName: "UpdateProperty",
			Handler:    _Msg_UpdateProperty_Handler,
		},
		{
			MethodName: "DeleteProperty",
			Handler:    _Msg_DeleteProperty_Handler,
		},
		{
			MethodName: "CreateCertificate",
			Handler:    _Msg_CreateCertificate_Handler,
		},
		{
			MethodName: "UpdateCertificate",
			Handler:    _Msg_UpdateCertificate_Handler,
		},
		{
			MethodName: "DeleteCertificate",
			Handler:    _Msg_DeleteCertificate_Handler,
		},
		{
			MethodName: "CreateLocking",
			Handler:    _Msg_CreateLocking_Handler,
		},
		{
			MethodName: "UpdateLocking",
			Handler:    _Msg_UpdateLocking_Handler,
		},
		{
			MethodName: "DeleteLocking",
			Handler:    _Msg_DeleteLocking_Handler,
		},
		{
			MethodName: "CreateInspection",
			Handler:    _Msg_CreateInspection_Handler,
		},
		{
			MethodName: "UpdateInspection",
			Handler:    _Msg_UpdateInspection_Handler,
		},
		{
			MethodName: "DeleteInspection",
			Handler:    _Msg_DeleteInspection_Handler,
		},
		{
			MethodName: "CreateTransference",
			Handler:    _Msg_CreateTransference_Handler,
		},
		{
			MethodName: "UpdateTransference",
			Handler:    _Msg_UpdateTransference_Handler,
		},
		{
			MethodName: "DeleteTransference",
			Handler:    _Msg_DeleteTransference_Handler,
		},
		{
			MethodName: "CreateHouse",
			Handler:    _Msg_CreateHouse_Handler,
		},
		{
			MethodName: "UpdateHouse",
			Handler:    _Msg_UpdateHouse_Handler,
		},
		{
			MethodName: "DeleteHouse",
			Handler:    _Msg_DeleteHouse_Handler,
		},
		{
			MethodName: "RequestCertification",
			Handler:    _Msg_RequestCertification_Handler,
		},
		{
			MethodName: "EmitCertificate",
			Handler:    _Msg_EmitCertificate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "realestate/tx.proto",
}

func (m *MsgCreateProperty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateProperty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateProperty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Longitude) > 0 {
		i -= len(m.Longitude)
		copy(dAtA[i:], m.Longitude)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Longitude)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Latitude) > 0 {
		i -= len(m.Latitude)
		copy(dAtA[i:], m.Latitude)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Latitude)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Zipcode) > 0 {
		i -= len(m.Zipcode)
		copy(dAtA[i:], m.Zipcode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Zipcode)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintTx(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePropertyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePropertyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePropertyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProperty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProperty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProperty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Longitude) > 0 {
		i -= len(m.Longitude)
		copy(dAtA[i:], m.Longitude)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Longitude)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.Latitude) > 0 {
		i -= len(m.Latitude)
		copy(dAtA[i:], m.Latitude)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Latitude)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Zipcode) > 0 {
		i -= len(m.Zipcode)
		copy(dAtA[i:], m.Zipcode)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Zipcode)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Country) > 0 {
		i -= len(m.Country)
		copy(dAtA[i:], m.Country)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Country)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.City) > 0 {
		i -= len(m.City)
		copy(dAtA[i:], m.City)
		i = encodeVarintTx(dAtA, i, uint64(len(m.City)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePropertyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePropertyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePropertyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteProperty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteProperty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteProperty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePropertyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePropertyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePropertyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateCertificate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCertificate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCertificate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PropertyMap) > 0 {
		i -= len(m.PropertyMap)
		copy(dAtA[i:], m.PropertyMap)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PropertyMap)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CertificateText) > 0 {
		i -= len(m.CertificateText)
		copy(dAtA[i:], m.CertificateText)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CertificateText)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.CertifiationDate) > 0 {
		i -= len(m.CertifiationDate)
		copy(dAtA[i:], m.CertifiationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CertifiationDate)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Surveyor) > 0 {
		i -= len(m.Surveyor)
		copy(dAtA[i:], m.Surveyor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Surveyor)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCertificateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCertificateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCertificateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCertificate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCertificate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCertificate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.PropertyMap) > 0 {
		i -= len(m.PropertyMap)
		copy(dAtA[i:], m.PropertyMap)
		i = encodeVarintTx(dAtA, i, uint64(len(m.PropertyMap)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.CertificateText) > 0 {
		i -= len(m.CertificateText)
		copy(dAtA[i:], m.CertificateText)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CertificateText)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.CertifiationDate) > 0 {
		i -= len(m.CertifiationDate)
		copy(dAtA[i:], m.CertifiationDate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CertifiationDate)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Surveyor) > 0 {
		i -= len(m.Surveyor)
		copy(dAtA[i:], m.Surveyor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Surveyor)))
		i--
		dAtA[i] = 0x22
	}
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCertificateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCertificateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCertificateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCertificate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCertificate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCertificate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCertificateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCertificateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCertificateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateLocking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLocking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLocking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x30
	}
	if m.Assets != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Assets))
		i--
		dAtA[i] = 0x28
	}
	if len(m.DateUnlocking) > 0 {
		i -= len(m.DateUnlocking)
		copy(dAtA[i:], m.DateUnlocking)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DateUnlocking)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DateLocking) > 0 {
		i -= len(m.DateLocking)
		copy(dAtA[i:], m.DateLocking)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DateLocking)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateLockingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateLockingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateLockingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Response) > 0 {
		i -= len(m.Response)
		copy(dAtA[i:], m.Response)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Response)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLocking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLocking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLocking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x38
	}
	if m.Assets != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Assets))
		i--
		dAtA[i] = 0x30
	}
	if len(m.DateUnlocking) > 0 {
		i -= len(m.DateUnlocking)
		copy(dAtA[i:], m.DateUnlocking)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DateUnlocking)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.DateLocking) > 0 {
		i -= len(m.DateLocking)
		copy(dAtA[i:], m.DateLocking)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DateLocking)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLockingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLockingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLockingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLocking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLocking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLocking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLockingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLockingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLockingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateInspection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInspection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInspection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InspectionResults) > 0 {
		i -= len(m.InspectionResults)
		copy(dAtA[i:], m.InspectionResults)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InspectionResults)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Fees) > 0 {
		i -= len(m.Fees)
		copy(dAtA[i:], m.Fees)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Fees)))
		i--
		dAtA[i] = 0x22
	}
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Inspector) > 0 {
		i -= len(m.Inspector)
		copy(dAtA[i:], m.Inspector)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Inspector)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateInspectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateInspectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateInspectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInspection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInspection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInspection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.InspectionResults) > 0 {
		i -= len(m.InspectionResults)
		copy(dAtA[i:], m.InspectionResults)
		i = encodeVarintTx(dAtA, i, uint64(len(m.InspectionResults)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Fees) > 0 {
		i -= len(m.Fees)
		copy(dAtA[i:], m.Fees)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Fees)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x20
	}
	if len(m.Inspector) > 0 {
		i -= len(m.Inspector)
		copy(dAtA[i:], m.Inspector)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Inspector)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateInspectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateInspectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateInspectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteInspection) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteInspection) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteInspection) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteInspectionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteInspectionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteInspectionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Date) > 0 {
		i -= len(m.Date)
		copy(dAtA[i:], m.Date)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Date)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTransferenceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTransferenceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTransferenceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x38
	}
	if len(m.Value) > 0 {
		i -= len(m.Value)
		copy(dAtA[i:], m.Value)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Value)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Date) > 0 {
		i -= len(m.Date)
		copy(dAtA[i:], m.Date)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Date)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.From) > 0 {
		i -= len(m.From)
		copy(dAtA[i:], m.From)
		i = encodeVarintTx(dAtA, i, uint64(len(m.From)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTransferenceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTransferenceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTransferenceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTransference) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTransference) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTransference) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTransferenceResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTransferenceResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTransferenceResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateHouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateHouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateHouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Blueprint) > 0 {
		i -= len(m.Blueprint)
		copy(dAtA[i:], m.Blueprint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Blueprint)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateHouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateHouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateHouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateHouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateHouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateHouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Blueprint) > 0 {
		i -= len(m.Blueprint)
		copy(dAtA[i:], m.Blueprint)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Blueprint)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Image) > 0 {
		i -= len(m.Image)
		copy(dAtA[i:], m.Image)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Image)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateHouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateHouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateHouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteHouse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteHouse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteHouse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteHouseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteHouseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteHouseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRequestCertification) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestCertification) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestCertification) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Surveyor) > 0 {
		i -= len(m.Surveyor)
		copy(dAtA[i:], m.Surveyor)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Surveyor)))
		i--
		dAtA[i] = 0x22
	}
	if m.Fees != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Fees))
		i--
		dAtA[i] = 0x18
	}
	if m.Property != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Property))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRequestCertificationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRequestCertificationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRequestCertificationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Response) > 0 {
		i -= len(m.Response)
		copy(dAtA[i:], m.Response)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Response)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEmitCertificate) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEmitCertificate) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEmitCertificate) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Certificate) > 0 {
		i -= len(m.Certificate)
		copy(dAtA[i:], m.Certificate)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Certificate)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgEmitCertificateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEmitCertificateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEmitCertificateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateProperty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Zipcode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Latitude)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Longitude)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreatePropertyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateProperty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.City)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Country)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Zipcode)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Latitude)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Longitude)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePropertyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteProperty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeletePropertyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateCertificate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	l = len(m.Surveyor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CertifiationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CertificateText)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PropertyMap)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateCertificateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateCertificate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	l = len(m.Surveyor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CertifiationDate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CertificateText)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.PropertyMap)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateCertificateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteCertificate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteCertificateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateLocking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DateLocking)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DateUnlocking)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Assets != 0 {
		n += 1 + sovTx(uint64(m.Assets))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	return n
}

func (m *MsgCreateLockingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Response)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLocking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DateLocking)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.DateUnlocking)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Assets != 0 {
		n += 1 + sovTx(uint64(m.Assets))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	return n
}

func (m *MsgUpdateLockingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLocking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteLockingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateInspection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Inspector)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	l = len(m.Fees)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.InspectionResults)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateInspectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateInspection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Inspector)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	l = len(m.Fees)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.InspectionResults)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateInspectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteInspection) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteInspectionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTransference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Date)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	return n
}

func (m *MsgCreateTransferenceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTransference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.From)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Date)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Value)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	return n
}

func (m *MsgUpdateTransferenceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTransference) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteTransferenceResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateHouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Blueprint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateHouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateHouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Image)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Blueprint)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateHouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteHouse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteHouseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRequestCertification) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Property != 0 {
		n += 1 + sovTx(uint64(m.Property))
	}
	if m.Fees != 0 {
		n += 1 + sovTx(uint64(m.Fees))
	}
	l = len(m.Surveyor)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRequestCertificationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Response)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEmitCertificate) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Certificate)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEmitCertificateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateProperty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateProperty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateProperty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Zipcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Zipcode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Latitude = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Longitude = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePropertyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePropertyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePropertyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProperty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProperty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProperty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field City", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.City = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Country", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Country = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Zipcode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Zipcode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Latitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Latitude = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Longitude", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Longitude = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePropertyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePropertyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePropertyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteProperty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteProperty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteProperty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePropertyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePropertyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePropertyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCertificate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCertificate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Surveyor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Surveyor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertifiationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CertifiationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertificateText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CertificateText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PropertyMap", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PropertyMap = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCertificateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCertificateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCertificateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCertificate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCertificate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Surveyor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Surveyor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertifiationDate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CertifiationDate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CertificateText", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CertificateText = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PropertyMap", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PropertyMap = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCertificateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCertificateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCertificateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCertificate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCertificate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCertificateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCertificateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCertificateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLocking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLocking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLocking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateLocking", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DateLocking = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateUnlocking", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DateUnlocking = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assets", wireType)
			}
			m.Assets = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Assets |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateLockingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateLockingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateLockingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLocking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLocking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLocking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateLocking", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DateLocking = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DateUnlocking", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DateUnlocking = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assets", wireType)
			}
			m.Assets = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Assets |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLockingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLockingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLockingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLocking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLocking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLocking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLockingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLockingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLockingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInspection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInspection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInspection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inspector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inspector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fees = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InspectionResults", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InspectionResults = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateInspectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateInspectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateInspectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInspection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInspection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInspection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Inspector", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Inspector = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Fees = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InspectionResults", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InspectionResults = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateInspectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateInspectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateInspectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteInspection) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteInspection: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteInspection: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteInspectionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteInspectionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteInspectionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Date = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTransferenceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTransferenceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTransferenceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field From", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.From = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Date", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Date = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Value", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Value = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTransferenceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTransferenceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTransferenceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTransference) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTransference: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTransference: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTransferenceResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTransferenceResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTransferenceResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateHouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateHouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateHouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blueprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Blueprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateHouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateHouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateHouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateHouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateHouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateHouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Image", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Image = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blueprint", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Blueprint = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateHouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateHouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateHouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteHouse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteHouse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteHouse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteHouseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteHouseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteHouseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestCertification) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestCertification: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestCertification: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Property", wireType)
			}
			m.Property = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Property |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fees", wireType)
			}
			m.Fees = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Fees |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Surveyor", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Surveyor = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRequestCertificationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRequestCertificationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRequestCertificationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Response", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Response = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEmitCertificate) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEmitCertificate: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEmitCertificate: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Certificate", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Certificate = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEmitCertificateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEmitCertificateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEmitCertificateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
